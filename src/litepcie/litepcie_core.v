//------------------------------------------------------------
// Generated by Migen & LiteX / -------- / 2019-06-26 16:48:48
//------------------------------------------------------------
module litepcie_core(
	input clk125,
	input pcie_x4_rst_n,
	input pcie_x4_refclk,
	input [3:0] pcie_x4_rx,
	output [3:0] pcie_x4_tx,
	output dma_writer0_valid,
	input dma_writer0_ready,
	output dma_writer0_last,
	output [63:0] dma_writer0_data,
	output dma_writer0_enable,
	input dma_reader0_valid,
	output dma_reader0_ready,
	input dma_reader0_last,
	input [63:0] dma_reader0_data,
	output dma_reader0_enable,
	output dma_writer1_valid,
	input dma_writer1_ready,
	output dma_writer1_last,
	output [63:0] dma_writer1_data,
	output dma_writer1_enable,
	input dma_reader1_valid,
	output dma_reader1_ready,
	input dma_reader1_last,
	input [63:0] dma_reader1_data,
	output dma_reader1_enable,
	output dma_writer2_valid,
	input dma_writer2_ready,
	output dma_writer2_last,
	output [63:0] dma_writer2_data,
	output dma_writer2_enable,
	input dma_reader2_valid,
	output dma_reader2_ready,
	input dma_reader2_last,
	input [63:0] dma_reader2_data,
	output dma_reader2_enable,
	input [511:0] cntrl_reader_data,
	input cntrl_reader_valid,
	output [511:0] cntrl_writer_data,
	output cntrl_writer_valid,
	output cntrl_enable
);

wire litepciecore_reset_reset_re;
wire litepciecore_reset_reset_r;
reg litepciecore_reset_reset_w = 1'd0;
reg [31:0] litepciecore_storage_full = 32'd305419896;
wire [31:0] litepciecore_storage;
reg litepciecore_re = 1'd0;
wire [31:0] litepciecore_bus_errors_status;
wire litepciecore_reset;
wire litepciecore_bus_error;
reg [31:0] litepciecore_bus_errors = 32'd0;
wire [29:0] litepciecore_sram_bus_adr0;
wire [31:0] litepciecore_sram_bus_dat_w0;
wire [31:0] litepciecore_sram_bus_dat_r0;
wire [3:0] litepciecore_sram_bus_sel;
wire litepciecore_sram_bus_cyc;
wire litepciecore_sram_bus_stb;
reg litepciecore_sram_bus_ack = 1'd0;
wire litepciecore_sram_bus_we0;
wire [2:0] litepciecore_sram_bus_cti;
wire [1:0] litepciecore_sram_bus_bte;
reg litepciecore_sram_bus_err = 1'd0;
wire [9:0] litepciecore_sram_adr;
wire [31:0] litepciecore_sram_dat_r;
reg [3:0] litepciecore_sram_we = 4'd0;
wire [31:0] litepciecore_sram_dat_w;
reg [13:0] litepciecore_interface_adr = 14'd0;
reg litepciecore_interface_we = 1'd0;
reg [31:0] litepciecore_interface_dat_w = 32'd0;
wire [31:0] litepciecore_interface_dat_r;
wire [29:0] litepciecore_bus_wishbone_adr;
wire [31:0] litepciecore_bus_wishbone_dat_w;
reg [31:0] litepciecore_bus_wishbone_dat_r = 32'd0;
wire [3:0] litepciecore_bus_wishbone_sel;
wire litepciecore_bus_wishbone_cyc;
wire litepciecore_bus_wishbone_stb;
reg litepciecore_bus_wishbone_ack = 1'd0;
wire litepciecore_bus_wishbone_we;
wire [2:0] litepciecore_bus_wishbone_cti;
wire [1:0] litepciecore_bus_wishbone_bte;
reg litepciecore_bus_wishbone_err = 1'd0;
reg [1:0] litepciecore_counter = 2'd0;
wire sys_clk;
reg sys_rst = 1'd0;
wire pcie_phy_sink_sink_valid0;
wire pcie_phy_sink_sink_ready0;
wire pcie_phy_sink_sink_first0;
wire pcie_phy_sink_sink_last0;
wire [63:0] pcie_phy_sink_sink_payload_dat0;
wire [7:0] pcie_phy_sink_sink_payload_be0;
wire pcie_phy_source_source_valid0;
wire pcie_phy_source_source_ready0;
wire pcie_phy_source_source_first0;
wire pcie_phy_source_source_last0;
wire [63:0] pcie_phy_source_source_payload_dat0;
wire [7:0] pcie_phy_source_source_payload_be0;
wire pcie_phy_msi_valid;
wire pcie_phy_msi_ready;
wire pcie_phy_msi_first;
wire pcie_phy_msi_last;
wire [7:0] pcie_phy_msi_payload_dat;
reg [15:0] pcie_phy_id = 16'd0;
reg [15:0] pcie_phy_max_request_size = 16'd0;
reg [15:0] pcie_phy_max_payload_size = 16'd0;
reg pcie_phy_pcie_rst_n = 1'd1;
reg pcie_phy_pcie_reconfig_clk = 1'd0;
wire [3:0] pcie_phy_pcie_config_tl_tl_cfg_add;
wire [31:0] pcie_phy_pcie_o_config_tl_tl_cfg_ctl;
wire pcie_phy_pcie_hip_rst_serdes_pll_locked;
wire pcie_phy_pcie_o_power_mngt_pme_to_sr;
wire pcie_clk;
reg pcie_rst = 1'd0;
wire pcie_phy_tx_buffer_sink_valid;
wire pcie_phy_tx_buffer_sink_ready;
wire pcie_phy_tx_buffer_sink_first;
wire pcie_phy_tx_buffer_sink_last;
wire [63:0] pcie_phy_tx_buffer_sink_payload_dat;
wire [7:0] pcie_phy_tx_buffer_sink_payload_be;
wire pcie_phy_tx_buffer_source_valid;
wire pcie_phy_tx_buffer_source_ready;
wire pcie_phy_tx_buffer_source_first;
wire pcie_phy_tx_buffer_source_last;
reg [63:0] pcie_phy_tx_buffer_source_payload_dat = 64'd0;
reg [7:0] pcie_phy_tx_buffer_source_payload_be = 8'd0;
wire pcie_phy_tx_buffer_pipe_ce;
wire pcie_phy_tx_buffer_busy;
reg pcie_phy_tx_buffer_valid_n = 1'd0;
reg pcie_phy_tx_buffer_first_n = 1'd0;
reg pcie_phy_tx_buffer_last_n = 1'd0;
wire pcie_phy_tx_cdc_sink_valid;
wire pcie_phy_tx_cdc_sink_ready;
wire pcie_phy_tx_cdc_sink_first;
wire pcie_phy_tx_cdc_sink_last;
wire [63:0] pcie_phy_tx_cdc_sink_payload_dat;
wire [7:0] pcie_phy_tx_cdc_sink_payload_be;
wire pcie_phy_tx_cdc_source_valid;
wire pcie_phy_tx_cdc_source_ready;
wire pcie_phy_tx_cdc_source_first;
wire pcie_phy_tx_cdc_source_last;
wire [63:0] pcie_phy_tx_cdc_source_payload_dat;
wire [7:0] pcie_phy_tx_cdc_source_payload_be;
wire pcie_phy_tx_cdc_asyncfifo_we;
wire pcie_phy_tx_cdc_asyncfifo_writable;
wire pcie_phy_tx_cdc_asyncfifo_re;
wire pcie_phy_tx_cdc_asyncfifo_readable;
wire [73:0] pcie_phy_tx_cdc_asyncfifo_din;
wire [73:0] pcie_phy_tx_cdc_asyncfifo_dout;
wire pcie_phy_tx_cdc_graycounter0_ce;
(* no_retiming = "true" *) reg [5:0] pcie_phy_tx_cdc_graycounter0_q = 6'd0;
wire [5:0] pcie_phy_tx_cdc_graycounter0_q_next;
reg [5:0] pcie_phy_tx_cdc_graycounter0_q_binary = 6'd0;
reg [5:0] pcie_phy_tx_cdc_graycounter0_q_next_binary = 6'd0;
wire pcie_phy_tx_cdc_graycounter1_ce;
(* no_retiming = "true" *) reg [5:0] pcie_phy_tx_cdc_graycounter1_q = 6'd0;
wire [5:0] pcie_phy_tx_cdc_graycounter1_q_next;
reg [5:0] pcie_phy_tx_cdc_graycounter1_q_binary = 6'd0;
reg [5:0] pcie_phy_tx_cdc_graycounter1_q_next_binary = 6'd0;
wire [5:0] pcie_phy_tx_cdc_produce_rdomain;
wire [5:0] pcie_phy_tx_cdc_consume_wdomain;
wire [4:0] pcie_phy_tx_cdc_wrport_adr;
wire [73:0] pcie_phy_tx_cdc_wrport_dat_r;
wire pcie_phy_tx_cdc_wrport_we;
wire [73:0] pcie_phy_tx_cdc_wrport_dat_w;
wire [4:0] pcie_phy_tx_cdc_rdport_adr;
wire [73:0] pcie_phy_tx_cdc_rdport_dat_r;
wire [63:0] pcie_phy_tx_cdc_fifo_in_payload_dat;
wire [7:0] pcie_phy_tx_cdc_fifo_in_payload_be;
wire pcie_phy_tx_cdc_fifo_in_first;
wire pcie_phy_tx_cdc_fifo_in_last;
wire [63:0] pcie_phy_tx_cdc_fifo_out_payload_dat;
wire [7:0] pcie_phy_tx_cdc_fifo_out_payload_be;
wire pcie_phy_tx_cdc_fifo_out_first;
wire pcie_phy_tx_cdc_fifo_out_last;
wire pcie_phy_rx_cdc_sink_valid;
wire pcie_phy_rx_cdc_sink_ready;
wire pcie_phy_rx_cdc_sink_first;
wire pcie_phy_rx_cdc_sink_last;
wire [63:0] pcie_phy_rx_cdc_sink_payload_dat;
wire [7:0] pcie_phy_rx_cdc_sink_payload_be;
wire pcie_phy_rx_cdc_source_valid;
wire pcie_phy_rx_cdc_source_ready;
wire pcie_phy_rx_cdc_source_first;
wire pcie_phy_rx_cdc_source_last;
wire [63:0] pcie_phy_rx_cdc_source_payload_dat;
wire [7:0] pcie_phy_rx_cdc_source_payload_be;
wire pcie_phy_rx_cdc_asyncfifo_we;
wire pcie_phy_rx_cdc_asyncfifo_writable;
wire pcie_phy_rx_cdc_asyncfifo_re;
wire pcie_phy_rx_cdc_asyncfifo_readable;
wire [73:0] pcie_phy_rx_cdc_asyncfifo_din;
wire [73:0] pcie_phy_rx_cdc_asyncfifo_dout;
wire pcie_phy_rx_cdc_graycounter0_ce;
(* no_retiming = "true" *) reg [5:0] pcie_phy_rx_cdc_graycounter0_q = 6'd0;
wire [5:0] pcie_phy_rx_cdc_graycounter0_q_next;
reg [5:0] pcie_phy_rx_cdc_graycounter0_q_binary = 6'd0;
reg [5:0] pcie_phy_rx_cdc_graycounter0_q_next_binary = 6'd0;
wire pcie_phy_rx_cdc_graycounter1_ce;
(* no_retiming = "true" *) reg [5:0] pcie_phy_rx_cdc_graycounter1_q = 6'd0;
wire [5:0] pcie_phy_rx_cdc_graycounter1_q_next;
reg [5:0] pcie_phy_rx_cdc_graycounter1_q_binary = 6'd0;
reg [5:0] pcie_phy_rx_cdc_graycounter1_q_next_binary = 6'd0;
wire [5:0] pcie_phy_rx_cdc_produce_rdomain;
wire [5:0] pcie_phy_rx_cdc_consume_wdomain;
wire [4:0] pcie_phy_rx_cdc_wrport_adr;
wire [73:0] pcie_phy_rx_cdc_wrport_dat_r;
wire pcie_phy_rx_cdc_wrport_we;
wire [73:0] pcie_phy_rx_cdc_wrport_dat_w;
wire [4:0] pcie_phy_rx_cdc_rdport_adr;
wire [73:0] pcie_phy_rx_cdc_rdport_dat_r;
wire [63:0] pcie_phy_rx_cdc_fifo_in_payload_dat;
wire [7:0] pcie_phy_rx_cdc_fifo_in_payload_be;
wire pcie_phy_rx_cdc_fifo_in_first;
wire pcie_phy_rx_cdc_fifo_in_last;
wire [63:0] pcie_phy_rx_cdc_fifo_out_payload_dat;
wire [7:0] pcie_phy_rx_cdc_fifo_out_payload_be;
wire pcie_phy_rx_cdc_fifo_out_first;
wire pcie_phy_rx_cdc_fifo_out_last;
wire pcie_phy_rx_buffer_sink_valid;
wire pcie_phy_rx_buffer_sink_ready;
wire pcie_phy_rx_buffer_sink_first;
wire pcie_phy_rx_buffer_sink_last;
wire [63:0] pcie_phy_rx_buffer_sink_payload_dat;
wire [7:0] pcie_phy_rx_buffer_sink_payload_be;
wire pcie_phy_rx_buffer_source_valid;
wire pcie_phy_rx_buffer_source_ready;
wire pcie_phy_rx_buffer_source_first;
wire pcie_phy_rx_buffer_source_last;
reg [63:0] pcie_phy_rx_buffer_source_payload_dat = 64'd0;
reg [7:0] pcie_phy_rx_buffer_source_payload_be = 8'd0;
wire pcie_phy_rx_buffer_pipe_ce;
wire pcie_phy_rx_buffer_busy;
reg pcie_phy_rx_buffer_valid_n = 1'd0;
reg pcie_phy_rx_buffer_first_n = 1'd0;
reg pcie_phy_rx_buffer_last_n = 1'd0;
wire pcie_phy_msi_cdc_sink_valid;
wire pcie_phy_msi_cdc_sink_ready;
wire pcie_phy_msi_cdc_sink_first;
wire pcie_phy_msi_cdc_sink_last;
wire [7:0] pcie_phy_msi_cdc_sink_payload_dat;
wire pcie_phy_msi_cdc_source_valid;
wire pcie_phy_msi_cdc_source_ready;
wire pcie_phy_msi_cdc_source_first;
wire pcie_phy_msi_cdc_source_last;
wire [7:0] pcie_phy_msi_cdc_source_payload_dat;
wire pcie_phy_msi_cdc_asyncfifo_we;
wire pcie_phy_msi_cdc_asyncfifo_writable;
wire pcie_phy_msi_cdc_asyncfifo_re;
wire pcie_phy_msi_cdc_asyncfifo_readable;
wire [9:0] pcie_phy_msi_cdc_asyncfifo_din;
wire [9:0] pcie_phy_msi_cdc_asyncfifo_dout;
wire pcie_phy_msi_cdc_graycounter0_ce;
(* no_retiming = "true" *) reg [2:0] pcie_phy_msi_cdc_graycounter0_q = 3'd0;
wire [2:0] pcie_phy_msi_cdc_graycounter0_q_next;
reg [2:0] pcie_phy_msi_cdc_graycounter0_q_binary = 3'd0;
reg [2:0] pcie_phy_msi_cdc_graycounter0_q_next_binary = 3'd0;
wire pcie_phy_msi_cdc_graycounter1_ce;
(* no_retiming = "true" *) reg [2:0] pcie_phy_msi_cdc_graycounter1_q = 3'd0;
wire [2:0] pcie_phy_msi_cdc_graycounter1_q_next;
reg [2:0] pcie_phy_msi_cdc_graycounter1_q_binary = 3'd0;
reg [2:0] pcie_phy_msi_cdc_graycounter1_q_next_binary = 3'd0;
wire [2:0] pcie_phy_msi_cdc_produce_rdomain;
wire [2:0] pcie_phy_msi_cdc_consume_wdomain;
wire [1:0] pcie_phy_msi_cdc_wrport_adr;
wire [9:0] pcie_phy_msi_cdc_wrport_dat_r;
wire pcie_phy_msi_cdc_wrport_we;
wire [9:0] pcie_phy_msi_cdc_wrport_dat_w;
wire [1:0] pcie_phy_msi_cdc_rdport_adr;
wire [9:0] pcie_phy_msi_cdc_rdport_dat_r;
wire [7:0] pcie_phy_msi_cdc_fifo_in_payload_dat;
wire pcie_phy_msi_cdc_fifo_in_first;
wire pcie_phy_msi_cdc_fifo_in_last;
wire [7:0] pcie_phy_msi_cdc_fifo_out_payload_dat;
wire pcie_phy_msi_cdc_fifo_out_first;
wire pcie_phy_msi_cdc_fifo_out_last;
reg [7:0] pcie_phy_bus_number = 8'd0;
reg [4:0] pcie_phy_device_number = 5'd0;
wire [2:0] pcie_phy_function_number;
reg [15:0] pcie_phy_dcommand = 16'd0;
reg pcie_phy_tl_cfg_add_reg_lsb = 1'd0;
reg pcie_phy_tl_cfg_add_reg2_lsb = 1'd0;
reg pcie_phy_cfgctl_addr_change = 1'd0;
reg pcie_phy_cfgctl_addr_change2 = 1'd0;
reg pcie_phy_cfgctl_addr_strobe = 1'd0;
reg [3:0] pcie_phy_captured_cfg_addr_reg = 4'd0;
reg [31:0] pcie_phy_captured_cfg_data_reg = 32'd0;
wire pcie_phy_tx_n2av_sink_valid;
wire pcie_phy_tx_n2av_sink_ready;
wire pcie_phy_tx_n2av_sink_first;
wire pcie_phy_tx_n2av_sink_last;
wire [63:0] pcie_phy_tx_n2av_sink_payload_dat;
wire [7:0] pcie_phy_tx_n2av_sink_payload_be;
wire pcie_phy_tx_n2av_source_valid;
wire pcie_phy_tx_n2av_source_ready;
wire pcie_phy_tx_n2av_source_first;
wire pcie_phy_tx_n2av_source_last;
wire [63:0] pcie_phy_tx_n2av_source_payload_dat;
wire [7:0] pcie_phy_tx_n2av_source_payload_be;
reg pcie_phy_tx_n2av_endpoint0_to_valid = 1'd0;
reg pcie_phy_tx_n2av_endpoint0_to_first = 1'd0;
reg pcie_phy_tx_n2av_endpoint0_to_last = 1'd0;
reg [63:0] pcie_phy_tx_n2av_endpoint0_to_payload_dat = 64'd0;
reg [7:0] pcie_phy_tx_n2av_endpoint0_to_payload_be = 8'd0;
reg pcie_phy_tx_n2av_endpoint1_to_valid = 1'd0;
reg pcie_phy_tx_n2av_endpoint1_to_first = 1'd0;
reg pcie_phy_tx_n2av_endpoint1_to_last = 1'd0;
reg [63:0] pcie_phy_tx_n2av_endpoint1_to_payload_dat = 64'd0;
reg [7:0] pcie_phy_tx_n2av_endpoint1_to_payload_be = 8'd0;
wire pcie_phy_sink_sink_valid1;
wire pcie_phy_sink_sink_ready1;
wire pcie_phy_sink_sink_first1;
wire pcie_phy_sink_sink_last1;
wire [63:0] pcie_phy_sink_sink_payload_dat1;
reg [7:0] pcie_phy_sink_sink_payload_be1 = 8'd0;
wire pcie_phy_source_source_valid1;
wire pcie_phy_source_source_ready1;
wire pcie_phy_source_source_first1;
wire pcie_phy_source_source_last1;
wire [63:0] pcie_phy_source_source_payload_dat1;
wire [7:0] pcie_phy_source_source_payload_be1;
wire pcie_phy_buf_sink_valid;
wire pcie_phy_buf_sink_ready;
wire pcie_phy_buf_sink_first;
wire pcie_phy_buf_sink_last;
wire [63:0] pcie_phy_buf_sink_payload_dat;
wire [7:0] pcie_phy_buf_sink_payload_be;
wire pcie_phy_buf_source_valid;
wire pcie_phy_buf_source_ready;
wire pcie_phy_buf_source_first;
wire pcie_phy_buf_source_last;
wire [63:0] pcie_phy_buf_source_payload_dat;
wire [7:0] pcie_phy_buf_source_payload_be;
wire pcie_phy_buf_syncfifo_we;
wire pcie_phy_buf_syncfifo_writable;
wire pcie_phy_buf_syncfifo_re;
wire pcie_phy_buf_syncfifo_readable;
wire [73:0] pcie_phy_buf_syncfifo_din;
wire [73:0] pcie_phy_buf_syncfifo_dout;
reg [2:0] pcie_phy_buf_level = 3'd0;
reg pcie_phy_buf_replace = 1'd0;
reg [1:0] pcie_phy_buf_produce = 2'd0;
reg [1:0] pcie_phy_buf_consume = 2'd0;
reg [1:0] pcie_phy_buf_wrport_adr = 2'd0;
wire [73:0] pcie_phy_buf_wrport_dat_r;
wire pcie_phy_buf_wrport_we;
wire [73:0] pcie_phy_buf_wrport_dat_w;
wire pcie_phy_buf_do_read;
wire [1:0] pcie_phy_buf_rdport_adr;
wire [73:0] pcie_phy_buf_rdport_dat_r;
wire [63:0] pcie_phy_buf_fifo_in_payload_dat;
wire [7:0] pcie_phy_buf_fifo_in_payload_be;
wire pcie_phy_buf_fifo_in_first;
wire pcie_phy_buf_fifo_in_last;
wire [63:0] pcie_phy_buf_fifo_out_payload_dat;
wire [7:0] pcie_phy_buf_fifo_out_payload_be;
wire pcie_phy_buf_fifo_out_first;
wire pcie_phy_buf_fifo_out_last;
wire pcie_endpoint_litepcietlpdepacketizer_sink_sink_valid;
wire pcie_endpoint_litepcietlpdepacketizer_sink_sink_ready;
wire pcie_endpoint_litepcietlpdepacketizer_sink_sink_first;
wire pcie_endpoint_litepcietlpdepacketizer_sink_sink_last;
wire [63:0] pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_dat;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_be;
wire pcie_endpoint_litepcietlpdepacketizer_req_source_valid;
wire pcie_endpoint_litepcietlpdepacketizer_req_source_ready;
wire pcie_endpoint_litepcietlpdepacketizer_req_source_first;
wire pcie_endpoint_litepcietlpdepacketizer_req_source_last;
wire pcie_endpoint_litepcietlpdepacketizer_req_source_payload_we;
wire [31:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_adr;
wire [9:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_len;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_req_id;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_tag;
wire [63:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_dat;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_channel = 8'd0;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_user_id = 8'd0;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_valid;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_ready;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_first;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_last;
wire [31:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_adr;
wire [9:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_len;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_end;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_req_id;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_cmp_id;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_err;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_tag;
wire [63:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_dat;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_channel = 8'd0;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_user_id = 8'd0;
wire pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_first;
wire pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_last;
wire [63:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_valid = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_ready;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_first = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_last = 1'd0;
reg [127:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header = 128'd0;
reg [63:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat = 64'd0;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be = 8'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_first = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_last = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_count = 1'd0;
reg [63:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_dat = 64'd0;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_be = 8'd0;
wire pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid;
reg pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_dispatch_source_first;
wire pcie_endpoint_litepcietlpdepacketizer_dispatch_source_last;
wire [1:0] pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt;
wire [4:0] pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type;
wire [63:0] pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_dat;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_be;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint0_valid = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_endpoint0_ready;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint0_first = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint0_last = 1'd0;
reg [1:0] pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_fmt = 2'd0;
reg [4:0] pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_type = 5'd0;
reg [63:0] pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_dat = 64'd0;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_be = 8'd0;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint1_valid = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_endpoint1_ready;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint1_first = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint1_last = 1'd0;
reg [1:0] pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_fmt = 2'd0;
reg [4:0] pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_type = 5'd0;
reg [63:0] pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_dat = 64'd0;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_be = 8'd0;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_first = 1'd1;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_last = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing0;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing1 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel1 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel_ongoing = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_valid;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_ready;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_first;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_last;
wire [29:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_address;
wire [1:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_attr;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_ep;
wire [3:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_first_be;
reg [1:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_fmt = 2'd0;
wire [3:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_last_be;
wire [9:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_length;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_requester_id;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_tag;
wire [2:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_tc;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_td;
reg [4:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_type = 5'd0;
wire [63:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_dat;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_be;
reg [1:0] pcie_endpoint_litepcietlpdepacketizer = 2'd0;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_valid;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_ready;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_first;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_last;
wire [1:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_attr;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_bcm;
wire [11:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_byte_count;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_completer_id;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_ep;
reg [1:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_fmt = 2'd0;
wire [9:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_length;
wire [6:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_lower_address;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_requester_id;
wire [2:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_status;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_tag;
wire [2:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_tc;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_td;
reg [4:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_type = 5'd0;
wire [63:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_dat;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_be;
wire pcie_endpoint_req_sink_valid;
wire pcie_endpoint_req_sink_ready;
wire pcie_endpoint_req_sink_first;
wire pcie_endpoint_req_sink_last;
wire pcie_endpoint_req_sink_payload_we;
wire [31:0] pcie_endpoint_req_sink_payload_adr;
wire [9:0] pcie_endpoint_req_sink_payload_len;
wire [15:0] pcie_endpoint_req_sink_payload_req_id;
wire [7:0] pcie_endpoint_req_sink_payload_tag;
wire [63:0] pcie_endpoint_req_sink_payload_dat;
wire [7:0] pcie_endpoint_req_sink_payload_channel;
wire [7:0] pcie_endpoint_req_sink_payload_user_id;
wire pcie_endpoint_cmp_sink_valid;
wire pcie_endpoint_cmp_sink_ready;
wire pcie_endpoint_cmp_sink_first;
wire pcie_endpoint_cmp_sink_last;
wire [31:0] pcie_endpoint_cmp_sink_payload_adr;
wire [9:0] pcie_endpoint_cmp_sink_payload_len;
wire pcie_endpoint_cmp_sink_payload_end;
wire [15:0] pcie_endpoint_cmp_sink_payload_req_id;
wire [15:0] pcie_endpoint_cmp_sink_payload_cmp_id;
wire pcie_endpoint_cmp_sink_payload_err;
wire [7:0] pcie_endpoint_cmp_sink_payload_tag;
wire [63:0] pcie_endpoint_cmp_sink_payload_dat;
wire [7:0] pcie_endpoint_cmp_sink_payload_channel;
wire [7:0] pcie_endpoint_cmp_sink_payload_user_id;
wire pcie_endpoint_source_source_valid;
wire pcie_endpoint_source_source_ready;
wire pcie_endpoint_source_source_first;
wire pcie_endpoint_source_source_last;
wire [63:0] pcie_endpoint_source_source_payload_dat;
wire [7:0] pcie_endpoint_source_source_payload_be;
wire pcie_endpoint_tlp_req_valid;
wire pcie_endpoint_tlp_req_ready;
wire pcie_endpoint_tlp_req_first;
wire pcie_endpoint_tlp_req_last;
wire [29:0] pcie_endpoint_tlp_req_payload_address;
wire [1:0] pcie_endpoint_tlp_req_payload_attr;
wire pcie_endpoint_tlp_req_payload_ep;
wire [3:0] pcie_endpoint_tlp_req_payload_first_be;
reg [1:0] pcie_endpoint_tlp_req_payload_fmt = 2'd0;
reg [3:0] pcie_endpoint_tlp_req_payload_last_be = 4'd0;
wire [9:0] pcie_endpoint_tlp_req_payload_length;
wire [15:0] pcie_endpoint_tlp_req_payload_requester_id;
wire [7:0] pcie_endpoint_tlp_req_payload_tag;
wire [2:0] pcie_endpoint_tlp_req_payload_tc;
wire pcie_endpoint_tlp_req_payload_td;
reg [4:0] pcie_endpoint_tlp_req_payload_type = 5'd0;
wire [63:0] pcie_endpoint_tlp_req_payload_dat;
reg [7:0] pcie_endpoint_tlp_req_payload_be = 8'd0;
wire pcie_endpoint_tlp_raw_req_valid;
reg pcie_endpoint_tlp_raw_req_ready = 1'd0;
wire pcie_endpoint_tlp_raw_req_first;
wire pcie_endpoint_tlp_raw_req_last;
reg [127:0] pcie_endpoint_tlp_raw_req_payload_header = 128'd0;
wire [63:0] pcie_endpoint_tlp_raw_req_payload_dat;
wire [7:0] pcie_endpoint_tlp_raw_req_payload_be;
wire pcie_endpoint_tlp_cmp_valid;
wire pcie_endpoint_tlp_cmp_ready;
wire pcie_endpoint_tlp_cmp_first;
wire pcie_endpoint_tlp_cmp_last;
wire [1:0] pcie_endpoint_tlp_cmp_payload_attr;
wire pcie_endpoint_tlp_cmp_payload_bcm;
wire [11:0] pcie_endpoint_tlp_cmp_payload_byte_count;
wire [15:0] pcie_endpoint_tlp_cmp_payload_completer_id;
wire pcie_endpoint_tlp_cmp_payload_ep;
reg [1:0] pcie_endpoint_tlp_cmp_payload_fmt = 2'd0;
wire [9:0] pcie_endpoint_tlp_cmp_payload_length;
wire [6:0] pcie_endpoint_tlp_cmp_payload_lower_address;
wire [15:0] pcie_endpoint_tlp_cmp_payload_requester_id;
reg [2:0] pcie_endpoint_tlp_cmp_payload_status = 3'd0;
wire [7:0] pcie_endpoint_tlp_cmp_payload_tag;
wire [2:0] pcie_endpoint_tlp_cmp_payload_tc;
wire pcie_endpoint_tlp_cmp_payload_td;
reg [4:0] pcie_endpoint_tlp_cmp_payload_type = 5'd0;
wire [63:0] pcie_endpoint_tlp_cmp_payload_dat;
wire [7:0] pcie_endpoint_tlp_cmp_payload_be;
wire pcie_endpoint_tlp_raw_cmp_valid;
reg pcie_endpoint_tlp_raw_cmp_ready = 1'd0;
wire pcie_endpoint_tlp_raw_cmp_first;
wire pcie_endpoint_tlp_raw_cmp_last;
reg [127:0] pcie_endpoint_tlp_raw_cmp_payload_header = 128'd0;
wire [63:0] pcie_endpoint_tlp_raw_cmp_payload_dat;
wire [7:0] pcie_endpoint_tlp_raw_cmp_payload_be;
reg pcie_endpoint_tlp_raw_valid = 1'd0;
wire pcie_endpoint_tlp_raw_ready;
reg pcie_endpoint_tlp_raw_first = 1'd0;
reg pcie_endpoint_tlp_raw_last = 1'd0;
reg [127:0] pcie_endpoint_tlp_raw_payload_header = 128'd0;
reg [63:0] pcie_endpoint_tlp_raw_payload_dat = 64'd0;
reg [7:0] pcie_endpoint_tlp_raw_payload_be = 8'd0;
reg [1:0] pcie_endpoint_request = 2'd0;
reg pcie_endpoint_grant = 1'd0;
reg pcie_endpoint_status0_first = 1'd1;
reg pcie_endpoint_status0_last = 1'd0;
wire pcie_endpoint_status0_ongoing0;
reg pcie_endpoint_status0_ongoing1 = 1'd0;
reg pcie_endpoint_status1_first = 1'd1;
reg pcie_endpoint_status1_last = 1'd0;
wire pcie_endpoint_status1_ongoing0;
reg pcie_endpoint_status1_ongoing1 = 1'd0;
wire pcie_endpoint_header_inserter_sink_valid;
reg pcie_endpoint_header_inserter_sink_ready = 1'd0;
wire pcie_endpoint_header_inserter_sink_first;
wire pcie_endpoint_header_inserter_sink_last;
wire [127:0] pcie_endpoint_header_inserter_sink_payload_header;
wire [63:0] pcie_endpoint_header_inserter_sink_payload_dat;
wire [7:0] pcie_endpoint_header_inserter_sink_payload_be;
reg pcie_endpoint_header_inserter_source_valid = 1'd0;
wire pcie_endpoint_header_inserter_source_ready;
reg pcie_endpoint_header_inserter_source_first = 1'd0;
reg pcie_endpoint_header_inserter_source_last = 1'd0;
reg [63:0] pcie_endpoint_header_inserter_source_payload_dat = 64'd0;
reg [7:0] pcie_endpoint_header_inserter_source_payload_be = 8'd0;
reg [63:0] pcie_endpoint_header_inserter_dat = 64'd0;
reg pcie_endpoint_header_inserter_last = 1'd0;
reg pcie_endpoint_master_sink_valid = 1'd0;
wire pcie_endpoint_master_sink_ready;
reg pcie_endpoint_master_sink_first = 1'd0;
reg pcie_endpoint_master_sink_last = 1'd0;
reg pcie_endpoint_master_sink_payload_we = 1'd0;
reg [31:0] pcie_endpoint_master_sink_payload_adr = 32'd0;
reg [9:0] pcie_endpoint_master_sink_payload_len = 10'd0;
reg [15:0] pcie_endpoint_master_sink_payload_req_id = 16'd0;
reg [7:0] pcie_endpoint_master_sink_payload_tag = 8'd0;
reg [63:0] pcie_endpoint_master_sink_payload_dat = 64'd0;
reg [7:0] pcie_endpoint_master_sink_payload_channel = 8'd0;
reg [7:0] pcie_endpoint_master_sink_payload_user_id = 8'd0;
wire pcie_endpoint_master_source_valid;
wire pcie_endpoint_master_source_ready;
wire pcie_endpoint_master_source_first;
wire pcie_endpoint_master_source_last;
wire [31:0] pcie_endpoint_master_source_payload_adr;
wire [9:0] pcie_endpoint_master_source_payload_len;
wire pcie_endpoint_master_source_payload_end;
wire [15:0] pcie_endpoint_master_source_payload_req_id;
wire [15:0] pcie_endpoint_master_source_payload_cmp_id;
wire pcie_endpoint_master_source_payload_err;
wire [7:0] pcie_endpoint_master_source_payload_tag;
wire [63:0] pcie_endpoint_master_source_payload_dat;
wire [7:0] pcie_endpoint_master_source_payload_channel;
wire [7:0] pcie_endpoint_master_source_payload_user_id;
wire pcie_endpoint_slave_sink_valid;
wire pcie_endpoint_slave_sink_ready;
wire pcie_endpoint_slave_sink_first;
wire pcie_endpoint_slave_sink_last;
wire [31:0] pcie_endpoint_slave_sink_payload_adr;
wire [9:0] pcie_endpoint_slave_sink_payload_len;
wire pcie_endpoint_slave_sink_payload_end;
wire [15:0] pcie_endpoint_slave_sink_payload_req_id;
wire [15:0] pcie_endpoint_slave_sink_payload_cmp_id;
wire pcie_endpoint_slave_sink_payload_err;
wire [7:0] pcie_endpoint_slave_sink_payload_tag;
wire [63:0] pcie_endpoint_slave_sink_payload_dat;
wire [7:0] pcie_endpoint_slave_sink_payload_channel;
wire [7:0] pcie_endpoint_slave_sink_payload_user_id;
wire pcie_endpoint_slave_source_valid;
wire pcie_endpoint_slave_source_ready;
wire pcie_endpoint_slave_source_first;
wire pcie_endpoint_slave_source_last;
wire pcie_endpoint_slave_source_payload_we;
wire [31:0] pcie_endpoint_slave_source_payload_adr;
wire [9:0] pcie_endpoint_slave_source_payload_len;
wire [15:0] pcie_endpoint_slave_source_payload_req_id;
wire [7:0] pcie_endpoint_slave_source_payload_tag;
wire [63:0] pcie_endpoint_slave_source_payload_dat;
wire [7:0] pcie_endpoint_slave_source_payload_channel;
wire [7:0] pcie_endpoint_slave_source_payload_user_id;
reg [29:0] pcie_wishbone_wishbone_adr = 30'd0;
reg [31:0] pcie_wishbone_wishbone_dat_w = 32'd0;
wire [31:0] pcie_wishbone_wishbone_dat_r;
reg [3:0] pcie_wishbone_wishbone_sel = 4'd0;
reg pcie_wishbone_wishbone_cyc = 1'd0;
reg pcie_wishbone_wishbone_stb = 1'd0;
wire pcie_wishbone_wishbone_ack;
reg pcie_wishbone_wishbone_we = 1'd0;
reg [2:0] pcie_wishbone_wishbone_cti = 3'd0;
reg [1:0] pcie_wishbone_wishbone_bte = 2'd0;
wire pcie_wishbone_wishbone_err;
reg pcie_wishbone_sink_valid = 1'd0;
wire pcie_wishbone_sink_ready;
reg pcie_wishbone_sink_first = 1'd0;
reg pcie_wishbone_sink_last = 1'd0;
reg [31:0] pcie_wishbone_sink_payload_adr = 32'd0;
reg [9:0] pcie_wishbone_sink_payload_len = 10'd0;
reg pcie_wishbone_sink_payload_end = 1'd0;
reg [15:0] pcie_wishbone_sink_payload_req_id = 16'd0;
reg [15:0] pcie_wishbone_sink_payload_cmp_id = 16'd0;
reg pcie_wishbone_sink_payload_err = 1'd0;
reg [7:0] pcie_wishbone_sink_payload_tag = 8'd0;
reg [63:0] pcie_wishbone_sink_payload_dat = 64'd0;
reg [7:0] pcie_wishbone_sink_payload_channel = 8'd0;
reg [7:0] pcie_wishbone_sink_payload_user_id = 8'd0;
wire pcie_wishbone_source_valid;
reg pcie_wishbone_source_ready = 1'd0;
wire pcie_wishbone_source_first;
wire pcie_wishbone_source_last;
wire pcie_wishbone_source_payload_we;
wire [31:0] pcie_wishbone_source_payload_adr;
wire [9:0] pcie_wishbone_source_payload_len;
wire [15:0] pcie_wishbone_source_payload_req_id;
wire [7:0] pcie_wishbone_source_payload_tag;
wire [63:0] pcie_wishbone_source_payload_dat;
wire [7:0] pcie_wishbone_source_payload_channel;
wire [7:0] pcie_wishbone_source_payload_user_id;
reg pcie_wishbone_update_dat = 1'd0;
reg litepciedma0_litepciemasterinternalport0_sink_valid = 1'd0;
reg litepciedma0_litepciemasterinternalport0_sink_ready = 1'd0;
wire litepciedma0_litepciemasterinternalport0_sink_first;
wire litepciedma0_litepciemasterinternalport0_sink_last;
wire litepciedma0_litepciemasterinternalport0_sink_payload_we;
wire [31:0] litepciedma0_litepciemasterinternalport0_sink_payload_adr;
wire [9:0] litepciedma0_litepciemasterinternalport0_sink_payload_len;
wire [15:0] litepciedma0_litepciemasterinternalport0_sink_payload_req_id;
wire [7:0] litepciedma0_litepciemasterinternalport0_sink_payload_tag;
wire [63:0] litepciedma0_litepciemasterinternalport0_sink_payload_dat;
wire [7:0] litepciedma0_litepciemasterinternalport0_sink_payload_channel;
wire [7:0] litepciedma0_litepciemasterinternalport0_sink_payload_user_id;
reg litepciedma0_litepciemasterinternalport0_source_valid = 1'd0;
reg litepciedma0_litepciemasterinternalport0_source_ready = 1'd0;
reg litepciedma0_litepciemasterinternalport0_source_first = 1'd0;
reg litepciedma0_litepciemasterinternalport0_source_last = 1'd0;
reg [31:0] litepciedma0_litepciemasterinternalport0_source_payload_adr = 32'd0;
reg [9:0] litepciedma0_litepciemasterinternalport0_source_payload_len = 10'd0;
reg litepciedma0_litepciemasterinternalport0_source_payload_end = 1'd0;
reg [15:0] litepciedma0_litepciemasterinternalport0_source_payload_req_id = 16'd0;
reg [15:0] litepciedma0_litepciemasterinternalport0_source_payload_cmp_id = 16'd0;
reg litepciedma0_litepciemasterinternalport0_source_payload_err = 1'd0;
reg [7:0] litepciedma0_litepciemasterinternalport0_source_payload_tag = 8'd0;
reg [63:0] litepciedma0_litepciemasterinternalport0_source_payload_dat = 64'd0;
reg [7:0] litepciedma0_litepciemasterinternalport0_source_payload_channel = 8'd0;
reg [7:0] litepciedma0_litepciemasterinternalport0_source_payload_user_id = 8'd0;
wire litepciedma0_writer_sink_sink_valid;
wire litepciedma0_writer_sink_sink_ready;
wire litepciedma0_writer_sink_sink_first;
wire litepciedma0_writer_sink_sink_last;
wire [63:0] litepciedma0_writer_sink_sink_payload_data;
wire litepciedma0_writer_irq;
reg litepciedma0_writer_enable_storage_full = 1'd0;
wire litepciedma0_writer_enable_storage;
reg litepciedma0_writer_enable_re = 1'd0;
reg [31:0] litepciedma0_writer_sCounter_storage_full = 32'd0;
wire [31:0] litepciedma0_writer_sCounter_storage;
reg litepciedma0_writer_sCounter_re = 1'd0;
reg litepciedma0_writer_fifo_re = 1'd0;
reg litepciedma0_writer_fifo_readable = 1'd0;
wire litepciedma0_writer_fifo_syncfifo0_we;
wire litepciedma0_writer_fifo_syncfifo0_writable;
wire litepciedma0_writer_fifo_syncfifo0_re;
wire litepciedma0_writer_fifo_syncfifo0_readable;
wire [64:0] litepciedma0_writer_fifo_syncfifo0_din;
wire [64:0] litepciedma0_writer_fifo_syncfifo0_dout;
reg [8:0] litepciedma0_writer_fifo_level0 = 9'd0;
reg litepciedma0_writer_fifo_replace = 1'd0;
reg [7:0] litepciedma0_writer_fifo_produce = 8'd0;
reg [7:0] litepciedma0_writer_fifo_consume = 8'd0;
reg [7:0] litepciedma0_writer_fifo_wrport_adr = 8'd0;
wire [64:0] litepciedma0_writer_fifo_wrport_dat_r;
wire litepciedma0_writer_fifo_wrport_we;
wire [64:0] litepciedma0_writer_fifo_wrport_dat_w;
wire litepciedma0_writer_fifo_do_read;
wire [7:0] litepciedma0_writer_fifo_rdport_adr;
wire [64:0] litepciedma0_writer_fifo_rdport_dat_r;
wire litepciedma0_writer_fifo_rdport_re;
wire [8:0] litepciedma0_writer_fifo_level1;
wire litepciedma0_writer_resetinserter_reset0;
reg litepciedma0_writer_request_ready = 1'd0;
reg [12:0] litepciedma0_writer_counter = 13'd0;
reg litepciedma0_writer_counter_reset = 1'd0;
reg litepciedma0_writer_counter_ce = 1'd0;
wire litepciedma0_writer_table_source_source_valid;
wire litepciedma0_writer_table_source_source_ready;
wire litepciedma0_writer_table_source_source_first;
reg litepciedma0_writer_table_source_source_last = 1'd0;
wire [31:0] litepciedma0_writer_table_source_source_payload_address;
wire [23:0] litepciedma0_writer_table_source_source_payload_length;
wire [7:0] litepciedma0_writer_table_source_source_payload_control;
reg [63:0] litepciedma0_writer_table_value_storage_full = 64'd0;
wire [63:0] litepciedma0_writer_table_value_storage;
reg litepciedma0_writer_table_value_re = 1'd0;
wire litepciedma0_writer_table_we_re;
wire litepciedma0_writer_table_we_r;
reg litepciedma0_writer_table_we_w = 1'd0;
reg litepciedma0_writer_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma0_writer_table_loop_prog_n_storage;
reg litepciedma0_writer_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma0_writer_table_loop_status_status = 16'd0;
wire [7:0] litepciedma0_writer_table_level_status;
wire litepciedma0_writer_table_flush_re;
wire litepciedma0_writer_table_flush_r;
reg litepciedma0_writer_table_flush_w = 1'd0;
reg litepciedma0_writer_table_syncfifo0_sink_valid = 1'd0;
wire litepciedma0_writer_table_syncfifo0_sink_ready;
reg litepciedma0_writer_table_syncfifo0_sink_first = 1'd0;
reg litepciedma0_writer_table_syncfifo0_sink_last = 1'd0;
reg [31:0] litepciedma0_writer_table_syncfifo0_sink_payload_address = 32'd0;
reg [23:0] litepciedma0_writer_table_syncfifo0_sink_payload_length = 24'd0;
reg [7:0] litepciedma0_writer_table_syncfifo0_sink_payload_control = 8'd0;
wire litepciedma0_writer_table_syncfifo0_source_valid;
wire litepciedma0_writer_table_syncfifo0_source_ready;
wire litepciedma0_writer_table_syncfifo0_source_first;
wire litepciedma0_writer_table_syncfifo0_source_last;
wire [31:0] litepciedma0_writer_table_syncfifo0_source_payload_address;
wire [23:0] litepciedma0_writer_table_syncfifo0_source_payload_length;
wire [7:0] litepciedma0_writer_table_syncfifo0_source_payload_control;
wire litepciedma0_writer_table_syncfifo0_syncfifo0_we;
wire litepciedma0_writer_table_syncfifo0_syncfifo0_writable;
wire litepciedma0_writer_table_syncfifo0_syncfifo0_re;
wire litepciedma0_writer_table_syncfifo0_syncfifo0_readable;
wire [65:0] litepciedma0_writer_table_syncfifo0_syncfifo0_din;
wire [65:0] litepciedma0_writer_table_syncfifo0_syncfifo0_dout;
reg [8:0] litepciedma0_writer_table_syncfifo0_level = 9'd0;
reg litepciedma0_writer_table_syncfifo0_replace = 1'd0;
reg [7:0] litepciedma0_writer_table_syncfifo0_produce = 8'd0;
reg [7:0] litepciedma0_writer_table_syncfifo0_consume = 8'd0;
reg [7:0] litepciedma0_writer_table_syncfifo0_wrport_adr = 8'd0;
wire [65:0] litepciedma0_writer_table_syncfifo0_wrport_dat_r;
wire litepciedma0_writer_table_syncfifo0_wrport_we;
wire [65:0] litepciedma0_writer_table_syncfifo0_wrport_dat_w;
wire litepciedma0_writer_table_syncfifo0_do_read;
wire [7:0] litepciedma0_writer_table_syncfifo0_rdport_adr;
wire [65:0] litepciedma0_writer_table_syncfifo0_rdport_dat_r;
wire [31:0] litepciedma0_writer_table_syncfifo0_fifo_in_payload_address;
wire [23:0] litepciedma0_writer_table_syncfifo0_fifo_in_payload_length;
wire [7:0] litepciedma0_writer_table_syncfifo0_fifo_in_payload_control;
wire litepciedma0_writer_table_syncfifo0_fifo_in_first;
wire litepciedma0_writer_table_syncfifo0_fifo_in_last;
wire [31:0] litepciedma0_writer_table_syncfifo0_fifo_out_payload_address;
wire [23:0] litepciedma0_writer_table_syncfifo0_fifo_out_payload_length;
wire [7:0] litepciedma0_writer_table_syncfifo0_fifo_out_payload_control;
wire litepciedma0_writer_table_syncfifo0_fifo_out_first;
wire litepciedma0_writer_table_syncfifo0_fifo_out_last;
wire litepciedma0_writer_table_reset;
wire litepciedma0_writer_splitter_sink_valid;
reg litepciedma0_writer_splitter_sink_ready = 1'd0;
wire litepciedma0_writer_splitter_sink_first;
wire litepciedma0_writer_splitter_sink_last;
wire [31:0] litepciedma0_writer_splitter_sink_payload_address;
wire [23:0] litepciedma0_writer_splitter_sink_payload_length;
wire [7:0] litepciedma0_writer_splitter_sink_payload_control;
reg litepciedma0_writer_splitter_source_valid = 1'd0;
wire litepciedma0_writer_splitter_source_ready;
reg litepciedma0_writer_splitter_source_first = 1'd0;
reg litepciedma0_writer_splitter_source_last = 1'd0;
wire [31:0] litepciedma0_writer_splitter_source_payload_address;
reg [23:0] litepciedma0_writer_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma0_writer_splitter_source_payload_control;
wire [7:0] litepciedma0_writer_splitter_source_payload_user_id;
reg litepciedma0_writer_splitter_end = 1'd0;
reg [31:0] litepciedma0_writer_splitter_offset = 32'd0;
reg litepciedma0_writer_splitter_offset_reset = 1'd0;
reg litepciedma0_writer_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma0_writer_splitter_user_id = 32'd0;
wire litepciedma0_writer_splitter_user_id_ce;
reg [23:0] litepciedma0_writer_splitter_length = 24'd0;
reg litepciedma0_writer_splitter_length_update = 1'd0;
wire litepciedma0_writer_resetinserter_reset1;
wire litepciedma0_writer_bufferizeendpoints0_sink_valid;
wire litepciedma0_writer_bufferizeendpoints0_sink_ready;
wire litepciedma0_writer_bufferizeendpoints0_sink_first;
wire litepciedma0_writer_bufferizeendpoints0_sink_last;
wire [31:0] litepciedma0_writer_bufferizeendpoints0_sink_payload_address;
wire [23:0] litepciedma0_writer_bufferizeendpoints0_sink_payload_length;
wire [7:0] litepciedma0_writer_bufferizeendpoints0_sink_payload_control;
wire [7:0] litepciedma0_writer_bufferizeendpoints0_sink_payload_user_id;
wire litepciedma0_writer_bufferizeendpoints0_source_valid;
reg litepciedma0_writer_bufferizeendpoints0_source_ready = 1'd0;
wire litepciedma0_writer_bufferizeendpoints0_source_first;
wire litepciedma0_writer_bufferizeendpoints0_source_last;
reg [31:0] litepciedma0_writer_bufferizeendpoints0_source_payload_address = 32'd0;
reg [23:0] litepciedma0_writer_bufferizeendpoints0_source_payload_length = 24'd0;
reg [7:0] litepciedma0_writer_bufferizeendpoints0_source_payload_control = 8'd0;
reg [7:0] litepciedma0_writer_bufferizeendpoints0_source_payload_user_id = 8'd0;
wire litepciedma0_writer_bufferizeendpoints0_pipe_ce;
wire litepciedma0_writer_bufferizeendpoints0_busy;
reg litepciedma0_writer_bufferizeendpoints0_valid_n = 1'd0;
reg litepciedma0_writer_bufferizeendpoints0_first_n = 1'd0;
reg litepciedma0_writer_bufferizeendpoints0_last_n = 1'd0;
reg litepciedma0_litepciemasterinternalport1_sink_valid = 1'd0;
reg litepciedma0_litepciemasterinternalport1_sink_ready = 1'd0;
wire litepciedma0_litepciemasterinternalport1_sink_first;
wire litepciedma0_litepciemasterinternalport1_sink_last;
wire litepciedma0_litepciemasterinternalport1_sink_payload_we;
wire [31:0] litepciedma0_litepciemasterinternalport1_sink_payload_adr;
wire [9:0] litepciedma0_litepciemasterinternalport1_sink_payload_len;
wire [15:0] litepciedma0_litepciemasterinternalport1_sink_payload_req_id;
reg [7:0] litepciedma0_litepciemasterinternalport1_sink_payload_tag = 8'd0;
wire [63:0] litepciedma0_litepciemasterinternalport1_sink_payload_dat;
wire [7:0] litepciedma0_litepciemasterinternalport1_sink_payload_channel;
wire [7:0] litepciedma0_litepciemasterinternalport1_sink_payload_user_id;
reg litepciedma0_litepciemasterinternalport1_source_valid = 1'd0;
wire litepciedma0_litepciemasterinternalport1_source_ready;
reg litepciedma0_litepciemasterinternalport1_source_first = 1'd0;
reg litepciedma0_litepciemasterinternalport1_source_last = 1'd0;
reg [31:0] litepciedma0_litepciemasterinternalport1_source_payload_adr = 32'd0;
reg [9:0] litepciedma0_litepciemasterinternalport1_source_payload_len = 10'd0;
reg litepciedma0_litepciemasterinternalport1_source_payload_end = 1'd0;
reg [15:0] litepciedma0_litepciemasterinternalport1_source_payload_req_id = 16'd0;
reg [15:0] litepciedma0_litepciemasterinternalport1_source_payload_cmp_id = 16'd0;
reg litepciedma0_litepciemasterinternalport1_source_payload_err = 1'd0;
reg [7:0] litepciedma0_litepciemasterinternalport1_source_payload_tag = 8'd0;
reg [63:0] litepciedma0_litepciemasterinternalport1_source_payload_dat = 64'd0;
reg [7:0] litepciedma0_litepciemasterinternalport1_source_payload_channel = 8'd0;
reg [7:0] litepciedma0_litepciemasterinternalport1_source_payload_user_id = 8'd0;
wire litepciedma0_reader_source_source_valid;
wire litepciedma0_reader_source_source_ready;
wire litepciedma0_reader_source_source_first;
wire litepciedma0_reader_source_source_last;
wire [63:0] litepciedma0_reader_source_source_payload_data;
wire litepciedma0_reader_irq;
reg litepciedma0_reader_enable_storage_full = 1'd0;
wire litepciedma0_reader_enable_storage;
reg litepciedma0_reader_enable_re = 1'd0;
reg [15:0] litepciedma0_reader_sCounter_storage_full = 16'd0;
wire [15:0] litepciedma0_reader_sCounter_storage;
reg litepciedma0_reader_sCounter_re = 1'd0;
wire litepciedma0_reader_table_source_source_valid;
wire litepciedma0_reader_table_source_source_ready;
wire litepciedma0_reader_table_source_source_first;
reg litepciedma0_reader_table_source_source_last = 1'd0;
wire [31:0] litepciedma0_reader_table_source_source_payload_address;
wire [23:0] litepciedma0_reader_table_source_source_payload_length;
wire [7:0] litepciedma0_reader_table_source_source_payload_control;
reg [63:0] litepciedma0_reader_table_value_storage_full = 64'd0;
wire [63:0] litepciedma0_reader_table_value_storage;
reg litepciedma0_reader_table_value_re = 1'd0;
wire litepciedma0_reader_table_we_re;
wire litepciedma0_reader_table_we_r;
reg litepciedma0_reader_table_we_w = 1'd0;
reg litepciedma0_reader_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma0_reader_table_loop_prog_n_storage;
reg litepciedma0_reader_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma0_reader_table_loop_status_status = 16'd0;
wire [7:0] litepciedma0_reader_table_level_status;
wire litepciedma0_reader_table_flush_re;
wire litepciedma0_reader_table_flush_r;
reg litepciedma0_reader_table_flush_w = 1'd0;
reg litepciedma0_reader_table_syncfifo0_sink_valid = 1'd0;
wire litepciedma0_reader_table_syncfifo0_sink_ready;
reg litepciedma0_reader_table_syncfifo0_sink_first = 1'd0;
reg litepciedma0_reader_table_syncfifo0_sink_last = 1'd0;
reg [31:0] litepciedma0_reader_table_syncfifo0_sink_payload_address = 32'd0;
reg [23:0] litepciedma0_reader_table_syncfifo0_sink_payload_length = 24'd0;
reg [7:0] litepciedma0_reader_table_syncfifo0_sink_payload_control = 8'd0;
wire litepciedma0_reader_table_syncfifo0_source_valid;
wire litepciedma0_reader_table_syncfifo0_source_ready;
wire litepciedma0_reader_table_syncfifo0_source_first;
wire litepciedma0_reader_table_syncfifo0_source_last;
wire [31:0] litepciedma0_reader_table_syncfifo0_source_payload_address;
wire [23:0] litepciedma0_reader_table_syncfifo0_source_payload_length;
wire [7:0] litepciedma0_reader_table_syncfifo0_source_payload_control;
wire litepciedma0_reader_table_syncfifo0_syncfifo0_we;
wire litepciedma0_reader_table_syncfifo0_syncfifo0_writable;
wire litepciedma0_reader_table_syncfifo0_syncfifo0_re;
wire litepciedma0_reader_table_syncfifo0_syncfifo0_readable;
wire [65:0] litepciedma0_reader_table_syncfifo0_syncfifo0_din;
wire [65:0] litepciedma0_reader_table_syncfifo0_syncfifo0_dout;
reg [8:0] litepciedma0_reader_table_syncfifo0_level = 9'd0;
reg litepciedma0_reader_table_syncfifo0_replace = 1'd0;
reg [7:0] litepciedma0_reader_table_syncfifo0_produce = 8'd0;
reg [7:0] litepciedma0_reader_table_syncfifo0_consume = 8'd0;
reg [7:0] litepciedma0_reader_table_syncfifo0_wrport_adr = 8'd0;
wire [65:0] litepciedma0_reader_table_syncfifo0_wrport_dat_r;
wire litepciedma0_reader_table_syncfifo0_wrport_we;
wire [65:0] litepciedma0_reader_table_syncfifo0_wrport_dat_w;
wire litepciedma0_reader_table_syncfifo0_do_read;
wire [7:0] litepciedma0_reader_table_syncfifo0_rdport_adr;
wire [65:0] litepciedma0_reader_table_syncfifo0_rdport_dat_r;
wire [31:0] litepciedma0_reader_table_syncfifo0_fifo_in_payload_address;
wire [23:0] litepciedma0_reader_table_syncfifo0_fifo_in_payload_length;
wire [7:0] litepciedma0_reader_table_syncfifo0_fifo_in_payload_control;
wire litepciedma0_reader_table_syncfifo0_fifo_in_first;
wire litepciedma0_reader_table_syncfifo0_fifo_in_last;
wire [31:0] litepciedma0_reader_table_syncfifo0_fifo_out_payload_address;
wire [23:0] litepciedma0_reader_table_syncfifo0_fifo_out_payload_length;
wire [7:0] litepciedma0_reader_table_syncfifo0_fifo_out_payload_control;
wire litepciedma0_reader_table_syncfifo0_fifo_out_first;
wire litepciedma0_reader_table_syncfifo0_fifo_out_last;
wire litepciedma0_reader_table_reset;
wire litepciedma0_reader_splitter_sink_valid;
reg litepciedma0_reader_splitter_sink_ready = 1'd0;
wire litepciedma0_reader_splitter_sink_first;
wire litepciedma0_reader_splitter_sink_last;
wire [31:0] litepciedma0_reader_splitter_sink_payload_address;
wire [23:0] litepciedma0_reader_splitter_sink_payload_length;
wire [7:0] litepciedma0_reader_splitter_sink_payload_control;
reg litepciedma0_reader_splitter_source_valid = 1'd0;
wire litepciedma0_reader_splitter_source_ready;
reg litepciedma0_reader_splitter_source_first = 1'd0;
reg litepciedma0_reader_splitter_source_last = 1'd0;
wire [31:0] litepciedma0_reader_splitter_source_payload_address;
reg [23:0] litepciedma0_reader_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma0_reader_splitter_source_payload_control;
wire [7:0] litepciedma0_reader_splitter_source_payload_user_id;
reg litepciedma0_reader_splitter_end = 1'd0;
reg [31:0] litepciedma0_reader_splitter_offset = 32'd0;
reg litepciedma0_reader_splitter_offset_reset = 1'd0;
reg litepciedma0_reader_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma0_reader_splitter_user_id = 32'd0;
wire litepciedma0_reader_splitter_user_id_ce;
reg [23:0] litepciedma0_reader_splitter_length = 24'd0;
reg litepciedma0_reader_splitter_length_update = 1'd0;
wire litepciedma0_reader_resetinserter_reset0;
wire litepciedma0_reader_bufferizeendpoints0_sink_valid;
wire litepciedma0_reader_bufferizeendpoints0_sink_ready;
wire litepciedma0_reader_bufferizeendpoints0_sink_first;
wire litepciedma0_reader_bufferizeendpoints0_sink_last;
wire [31:0] litepciedma0_reader_bufferizeendpoints0_sink_payload_address;
wire [23:0] litepciedma0_reader_bufferizeendpoints0_sink_payload_length;
wire [7:0] litepciedma0_reader_bufferizeendpoints0_sink_payload_control;
wire [7:0] litepciedma0_reader_bufferizeendpoints0_sink_payload_user_id;
wire litepciedma0_reader_bufferizeendpoints0_source_valid;
reg litepciedma0_reader_bufferizeendpoints0_source_ready = 1'd0;
wire litepciedma0_reader_bufferizeendpoints0_source_first;
wire litepciedma0_reader_bufferizeendpoints0_source_last;
reg [31:0] litepciedma0_reader_bufferizeendpoints0_source_payload_address = 32'd0;
reg [23:0] litepciedma0_reader_bufferizeendpoints0_source_payload_length = 24'd0;
reg [7:0] litepciedma0_reader_bufferizeendpoints0_source_payload_control = 8'd0;
reg [7:0] litepciedma0_reader_bufferizeendpoints0_source_payload_user_id = 8'd0;
wire litepciedma0_reader_bufferizeendpoints0_pipe_ce;
wire litepciedma0_reader_bufferizeendpoints0_busy;
reg litepciedma0_reader_bufferizeendpoints0_valid_n = 1'd0;
reg litepciedma0_reader_bufferizeendpoints0_first_n = 1'd0;
reg litepciedma0_reader_bufferizeendpoints0_last_n = 1'd0;
reg litepciedma0_reader_request_ready = 1'd0;
wire litepciedma0_reader_fifo_sink_valid;
wire litepciedma0_reader_fifo_sink_ready;
wire litepciedma0_reader_fifo_sink_first;
reg litepciedma0_reader_fifo_sink_last = 1'd0;
wire [63:0] litepciedma0_reader_fifo_sink_payload_data;
wire litepciedma0_reader_fifo_source_valid;
wire litepciedma0_reader_fifo_source_ready;
wire litepciedma0_reader_fifo_source_first;
wire litepciedma0_reader_fifo_source_last;
wire [63:0] litepciedma0_reader_fifo_source_payload_data;
wire litepciedma0_reader_fifo_re;
reg litepciedma0_reader_fifo_readable = 1'd0;
wire litepciedma0_reader_fifo_syncfifo0_we;
wire litepciedma0_reader_fifo_syncfifo0_writable;
wire litepciedma0_reader_fifo_syncfifo0_re;
wire litepciedma0_reader_fifo_syncfifo0_readable;
wire [65:0] litepciedma0_reader_fifo_syncfifo0_din;
wire [65:0] litepciedma0_reader_fifo_syncfifo0_dout;
reg [9:0] litepciedma0_reader_fifo_level0 = 10'd0;
reg litepciedma0_reader_fifo_replace = 1'd0;
reg [8:0] litepciedma0_reader_fifo_produce = 9'd0;
reg [8:0] litepciedma0_reader_fifo_consume = 9'd0;
reg [8:0] litepciedma0_reader_fifo_wrport_adr = 9'd0;
wire [65:0] litepciedma0_reader_fifo_wrport_dat_r;
wire litepciedma0_reader_fifo_wrport_we;
wire [65:0] litepciedma0_reader_fifo_wrport_dat_w;
wire litepciedma0_reader_fifo_do_read;
wire [8:0] litepciedma0_reader_fifo_rdport_adr;
wire [65:0] litepciedma0_reader_fifo_rdport_dat_r;
wire litepciedma0_reader_fifo_rdport_re;
wire [9:0] litepciedma0_reader_fifo_level1;
wire [63:0] litepciedma0_reader_fifo_fifo_in_payload_data;
wire litepciedma0_reader_fifo_fifo_in_first;
wire litepciedma0_reader_fifo_fifo_in_last;
wire [63:0] litepciedma0_reader_fifo_fifo_out_payload_data;
wire litepciedma0_reader_fifo_fifo_out_first;
wire litepciedma0_reader_fifo_fifo_out_last;
wire litepciedma0_reader_resetinserter_reset1;
reg [7:0] litepciedma0_reader_last_user_id = 8'd255;
reg litepciedma0_storage_full = 1'd0;
wire litepciedma0_storage;
reg litepciedma0_re = 1'd0;
wire litepciedma0_sink_valid;
reg litepciedma0_sink_ready = 1'd0;
wire litepciedma0_sink_first;
wire litepciedma0_sink_last;
wire [63:0] litepciedma0_sink_payload_data;
reg litepciedma0_source_valid = 1'd0;
wire litepciedma0_source_ready;
reg litepciedma0_source_first = 1'd0;
reg litepciedma0_source_last = 1'd0;
reg [63:0] litepciedma0_source_payload_data = 64'd0;
reg litepciedma0_next_source_valid = 1'd0;
wire litepciedma0_next_source_ready;
reg litepciedma0_next_source_first = 1'd0;
reg litepciedma0_next_source_last = 1'd0;
reg [63:0] litepciedma0_next_source_payload_data = 64'd0;
wire litepciedma0_next_sink_valid;
reg litepciedma0_next_sink_ready = 1'd0;
wire litepciedma0_next_sink_first;
wire litepciedma0_next_sink_last;
wire [63:0] litepciedma0_next_sink_payload_data;
wire litepciedma0_tx_fifo_sink_valid;
wire litepciedma0_tx_fifo_sink_ready;
wire litepciedma0_tx_fifo_sink_first;
wire litepciedma0_tx_fifo_sink_last;
wire [63:0] litepciedma0_tx_fifo_sink_payload_data;
wire litepciedma0_tx_fifo_source_valid;
wire litepciedma0_tx_fifo_source_ready;
wire litepciedma0_tx_fifo_source_first;
wire litepciedma0_tx_fifo_source_last;
wire [63:0] litepciedma0_tx_fifo_source_payload_data;
wire litepciedma0_tx_fifo_re;
reg litepciedma0_tx_fifo_readable = 1'd0;
wire litepciedma0_tx_fifo_syncfifo0_we;
wire litepciedma0_tx_fifo_syncfifo0_writable;
wire litepciedma0_tx_fifo_syncfifo0_re;
wire litepciedma0_tx_fifo_syncfifo0_readable;
wire [65:0] litepciedma0_tx_fifo_syncfifo0_din;
wire [65:0] litepciedma0_tx_fifo_syncfifo0_dout;
reg [10:0] litepciedma0_tx_fifo_level0 = 11'd0;
reg litepciedma0_tx_fifo_replace = 1'd0;
reg [9:0] litepciedma0_tx_fifo_produce = 10'd0;
reg [9:0] litepciedma0_tx_fifo_consume = 10'd0;
reg [9:0] litepciedma0_tx_fifo_wrport_adr = 10'd0;
wire [65:0] litepciedma0_tx_fifo_wrport_dat_r;
wire litepciedma0_tx_fifo_wrport_we;
wire [65:0] litepciedma0_tx_fifo_wrport_dat_w;
wire litepciedma0_tx_fifo_do_read;
wire [9:0] litepciedma0_tx_fifo_rdport_adr;
wire [65:0] litepciedma0_tx_fifo_rdport_dat_r;
wire litepciedma0_tx_fifo_rdport_re;
wire [10:0] litepciedma0_tx_fifo_level1;
wire [63:0] litepciedma0_tx_fifo_fifo_in_payload_data;
wire litepciedma0_tx_fifo_fifo_in_first;
wire litepciedma0_tx_fifo_fifo_in_last;
wire [63:0] litepciedma0_tx_fifo_fifo_out_payload_data;
wire litepciedma0_tx_fifo_fifo_out_first;
wire litepciedma0_tx_fifo_fifo_out_last;
wire litepciedma0_rx_fifo_sink_valid;
wire litepciedma0_rx_fifo_sink_ready;
reg litepciedma0_rx_fifo_sink_first = 1'd0;
wire litepciedma0_rx_fifo_sink_last;
wire [63:0] litepciedma0_rx_fifo_sink_payload_data;
wire litepciedma0_rx_fifo_source_valid;
wire litepciedma0_rx_fifo_source_ready;
wire litepciedma0_rx_fifo_source_first;
wire litepciedma0_rx_fifo_source_last;
wire [63:0] litepciedma0_rx_fifo_source_payload_data;
wire litepciedma0_rx_fifo_re;
reg litepciedma0_rx_fifo_readable = 1'd0;
wire litepciedma0_rx_fifo_syncfifo0_we;
wire litepciedma0_rx_fifo_syncfifo0_writable;
wire litepciedma0_rx_fifo_syncfifo0_re;
wire litepciedma0_rx_fifo_syncfifo0_readable;
wire [65:0] litepciedma0_rx_fifo_syncfifo0_din;
wire [65:0] litepciedma0_rx_fifo_syncfifo0_dout;
reg [10:0] litepciedma0_rx_fifo_level0 = 11'd0;
reg litepciedma0_rx_fifo_replace = 1'd0;
reg [9:0] litepciedma0_rx_fifo_produce = 10'd0;
reg [9:0] litepciedma0_rx_fifo_consume = 10'd0;
reg [9:0] litepciedma0_rx_fifo_wrport_adr = 10'd0;
wire [65:0] litepciedma0_rx_fifo_wrport_dat_r;
wire litepciedma0_rx_fifo_wrport_we;
wire [65:0] litepciedma0_rx_fifo_wrport_dat_w;
wire litepciedma0_rx_fifo_do_read;
wire [9:0] litepciedma0_rx_fifo_rdport_adr;
wire [65:0] litepciedma0_rx_fifo_rdport_dat_r;
wire litepciedma0_rx_fifo_rdport_re;
wire [10:0] litepciedma0_rx_fifo_level1;
wire [63:0] litepciedma0_rx_fifo_fifo_in_payload_data;
wire litepciedma0_rx_fifo_fifo_in_first;
wire litepciedma0_rx_fifo_fifo_in_last;
wire [63:0] litepciedma0_rx_fifo_fifo_out_payload_data;
wire litepciedma0_rx_fifo_fifo_out_first;
wire litepciedma0_rx_fifo_fifo_out_last;
reg litepciedma1_litepciemasterinternalport2_sink_valid = 1'd0;
reg litepciedma1_litepciemasterinternalport2_sink_ready = 1'd0;
wire litepciedma1_litepciemasterinternalport2_sink_first;
wire litepciedma1_litepciemasterinternalport2_sink_last;
wire litepciedma1_litepciemasterinternalport2_sink_payload_we;
wire [31:0] litepciedma1_litepciemasterinternalport2_sink_payload_adr;
wire [9:0] litepciedma1_litepciemasterinternalport2_sink_payload_len;
wire [15:0] litepciedma1_litepciemasterinternalport2_sink_payload_req_id;
wire [7:0] litepciedma1_litepciemasterinternalport2_sink_payload_tag;
wire [63:0] litepciedma1_litepciemasterinternalport2_sink_payload_dat;
wire [7:0] litepciedma1_litepciemasterinternalport2_sink_payload_channel;
wire [7:0] litepciedma1_litepciemasterinternalport2_sink_payload_user_id;
reg litepciedma1_litepciemasterinternalport2_source_valid = 1'd0;
reg litepciedma1_litepciemasterinternalport2_source_ready = 1'd0;
reg litepciedma1_litepciemasterinternalport2_source_first = 1'd0;
reg litepciedma1_litepciemasterinternalport2_source_last = 1'd0;
reg [31:0] litepciedma1_litepciemasterinternalport2_source_payload_adr = 32'd0;
reg [9:0] litepciedma1_litepciemasterinternalport2_source_payload_len = 10'd0;
reg litepciedma1_litepciemasterinternalport2_source_payload_end = 1'd0;
reg [15:0] litepciedma1_litepciemasterinternalport2_source_payload_req_id = 16'd0;
reg [15:0] litepciedma1_litepciemasterinternalport2_source_payload_cmp_id = 16'd0;
reg litepciedma1_litepciemasterinternalport2_source_payload_err = 1'd0;
reg [7:0] litepciedma1_litepciemasterinternalport2_source_payload_tag = 8'd0;
reg [63:0] litepciedma1_litepciemasterinternalport2_source_payload_dat = 64'd0;
reg [7:0] litepciedma1_litepciemasterinternalport2_source_payload_channel = 8'd0;
reg [7:0] litepciedma1_litepciemasterinternalport2_source_payload_user_id = 8'd0;
wire litepciedma1_writer_sink_sink_valid;
wire litepciedma1_writer_sink_sink_ready;
wire litepciedma1_writer_sink_sink_first;
wire litepciedma1_writer_sink_sink_last;
wire [63:0] litepciedma1_writer_sink_sink_payload_data;
wire litepciedma1_writer_irq;
reg litepciedma1_writer_enable_storage_full = 1'd0;
wire litepciedma1_writer_enable_storage;
reg litepciedma1_writer_enable_re = 1'd0;
reg [31:0] litepciedma1_writer_sCounter_storage_full = 32'd0;
wire [31:0] litepciedma1_writer_sCounter_storage;
reg litepciedma1_writer_sCounter_re = 1'd0;
reg litepciedma1_writer_fifo_re = 1'd0;
reg litepciedma1_writer_fifo_readable = 1'd0;
wire litepciedma1_writer_fifo_syncfifo1_we;
wire litepciedma1_writer_fifo_syncfifo1_writable;
wire litepciedma1_writer_fifo_syncfifo1_re;
wire litepciedma1_writer_fifo_syncfifo1_readable;
wire [64:0] litepciedma1_writer_fifo_syncfifo1_din;
wire [64:0] litepciedma1_writer_fifo_syncfifo1_dout;
reg [8:0] litepciedma1_writer_fifo_level0 = 9'd0;
reg litepciedma1_writer_fifo_replace = 1'd0;
reg [7:0] litepciedma1_writer_fifo_produce = 8'd0;
reg [7:0] litepciedma1_writer_fifo_consume = 8'd0;
reg [7:0] litepciedma1_writer_fifo_wrport_adr = 8'd0;
wire [64:0] litepciedma1_writer_fifo_wrport_dat_r;
wire litepciedma1_writer_fifo_wrport_we;
wire [64:0] litepciedma1_writer_fifo_wrport_dat_w;
wire litepciedma1_writer_fifo_do_read;
wire [7:0] litepciedma1_writer_fifo_rdport_adr;
wire [64:0] litepciedma1_writer_fifo_rdport_dat_r;
wire litepciedma1_writer_fifo_rdport_re;
wire [8:0] litepciedma1_writer_fifo_level1;
wire litepciedma1_writer_resetinserter_reset0;
reg litepciedma1_writer_request_ready = 1'd0;
reg [12:0] litepciedma1_writer_counter = 13'd0;
reg litepciedma1_writer_counter_reset = 1'd0;
reg litepciedma1_writer_counter_ce = 1'd0;
wire litepciedma1_writer_table_source_source_valid;
wire litepciedma1_writer_table_source_source_ready;
wire litepciedma1_writer_table_source_source_first;
reg litepciedma1_writer_table_source_source_last = 1'd0;
wire [31:0] litepciedma1_writer_table_source_source_payload_address;
wire [23:0] litepciedma1_writer_table_source_source_payload_length;
wire [7:0] litepciedma1_writer_table_source_source_payload_control;
reg [63:0] litepciedma1_writer_table_value_storage_full = 64'd0;
wire [63:0] litepciedma1_writer_table_value_storage;
reg litepciedma1_writer_table_value_re = 1'd0;
wire litepciedma1_writer_table_we_re;
wire litepciedma1_writer_table_we_r;
reg litepciedma1_writer_table_we_w = 1'd0;
reg litepciedma1_writer_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma1_writer_table_loop_prog_n_storage;
reg litepciedma1_writer_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma1_writer_table_loop_status_status = 16'd0;
wire [7:0] litepciedma1_writer_table_level_status;
wire litepciedma1_writer_table_flush_re;
wire litepciedma1_writer_table_flush_r;
reg litepciedma1_writer_table_flush_w = 1'd0;
reg litepciedma1_writer_table_syncfifo1_sink_valid = 1'd0;
wire litepciedma1_writer_table_syncfifo1_sink_ready;
reg litepciedma1_writer_table_syncfifo1_sink_first = 1'd0;
reg litepciedma1_writer_table_syncfifo1_sink_last = 1'd0;
reg [31:0] litepciedma1_writer_table_syncfifo1_sink_payload_address = 32'd0;
reg [23:0] litepciedma1_writer_table_syncfifo1_sink_payload_length = 24'd0;
reg [7:0] litepciedma1_writer_table_syncfifo1_sink_payload_control = 8'd0;
wire litepciedma1_writer_table_syncfifo1_source_valid;
wire litepciedma1_writer_table_syncfifo1_source_ready;
wire litepciedma1_writer_table_syncfifo1_source_first;
wire litepciedma1_writer_table_syncfifo1_source_last;
wire [31:0] litepciedma1_writer_table_syncfifo1_source_payload_address;
wire [23:0] litepciedma1_writer_table_syncfifo1_source_payload_length;
wire [7:0] litepciedma1_writer_table_syncfifo1_source_payload_control;
wire litepciedma1_writer_table_syncfifo1_syncfifo1_we;
wire litepciedma1_writer_table_syncfifo1_syncfifo1_writable;
wire litepciedma1_writer_table_syncfifo1_syncfifo1_re;
wire litepciedma1_writer_table_syncfifo1_syncfifo1_readable;
wire [65:0] litepciedma1_writer_table_syncfifo1_syncfifo1_din;
wire [65:0] litepciedma1_writer_table_syncfifo1_syncfifo1_dout;
reg [8:0] litepciedma1_writer_table_syncfifo1_level = 9'd0;
reg litepciedma1_writer_table_syncfifo1_replace = 1'd0;
reg [7:0] litepciedma1_writer_table_syncfifo1_produce = 8'd0;
reg [7:0] litepciedma1_writer_table_syncfifo1_consume = 8'd0;
reg [7:0] litepciedma1_writer_table_syncfifo1_wrport_adr = 8'd0;
wire [65:0] litepciedma1_writer_table_syncfifo1_wrport_dat_r;
wire litepciedma1_writer_table_syncfifo1_wrport_we;
wire [65:0] litepciedma1_writer_table_syncfifo1_wrport_dat_w;
wire litepciedma1_writer_table_syncfifo1_do_read;
wire [7:0] litepciedma1_writer_table_syncfifo1_rdport_adr;
wire [65:0] litepciedma1_writer_table_syncfifo1_rdport_dat_r;
wire [31:0] litepciedma1_writer_table_syncfifo1_fifo_in_payload_address;
wire [23:0] litepciedma1_writer_table_syncfifo1_fifo_in_payload_length;
wire [7:0] litepciedma1_writer_table_syncfifo1_fifo_in_payload_control;
wire litepciedma1_writer_table_syncfifo1_fifo_in_first;
wire litepciedma1_writer_table_syncfifo1_fifo_in_last;
wire [31:0] litepciedma1_writer_table_syncfifo1_fifo_out_payload_address;
wire [23:0] litepciedma1_writer_table_syncfifo1_fifo_out_payload_length;
wire [7:0] litepciedma1_writer_table_syncfifo1_fifo_out_payload_control;
wire litepciedma1_writer_table_syncfifo1_fifo_out_first;
wire litepciedma1_writer_table_syncfifo1_fifo_out_last;
wire litepciedma1_writer_table_reset;
wire litepciedma1_writer_splitter_sink_valid;
reg litepciedma1_writer_splitter_sink_ready = 1'd0;
wire litepciedma1_writer_splitter_sink_first;
wire litepciedma1_writer_splitter_sink_last;
wire [31:0] litepciedma1_writer_splitter_sink_payload_address;
wire [23:0] litepciedma1_writer_splitter_sink_payload_length;
wire [7:0] litepciedma1_writer_splitter_sink_payload_control;
reg litepciedma1_writer_splitter_source_valid = 1'd0;
wire litepciedma1_writer_splitter_source_ready;
reg litepciedma1_writer_splitter_source_first = 1'd0;
reg litepciedma1_writer_splitter_source_last = 1'd0;
wire [31:0] litepciedma1_writer_splitter_source_payload_address;
reg [23:0] litepciedma1_writer_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma1_writer_splitter_source_payload_control;
wire [7:0] litepciedma1_writer_splitter_source_payload_user_id;
reg litepciedma1_writer_splitter_end = 1'd0;
reg [31:0] litepciedma1_writer_splitter_offset = 32'd0;
reg litepciedma1_writer_splitter_offset_reset = 1'd0;
reg litepciedma1_writer_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma1_writer_splitter_user_id = 32'd0;
wire litepciedma1_writer_splitter_user_id_ce;
reg [23:0] litepciedma1_writer_splitter_length = 24'd0;
reg litepciedma1_writer_splitter_length_update = 1'd0;
wire litepciedma1_writer_resetinserter_reset1;
wire litepciedma1_writer_bufferizeendpoints1_sink_valid;
wire litepciedma1_writer_bufferizeendpoints1_sink_ready;
wire litepciedma1_writer_bufferizeendpoints1_sink_first;
wire litepciedma1_writer_bufferizeendpoints1_sink_last;
wire [31:0] litepciedma1_writer_bufferizeendpoints1_sink_payload_address;
wire [23:0] litepciedma1_writer_bufferizeendpoints1_sink_payload_length;
wire [7:0] litepciedma1_writer_bufferizeendpoints1_sink_payload_control;
wire [7:0] litepciedma1_writer_bufferizeendpoints1_sink_payload_user_id;
wire litepciedma1_writer_bufferizeendpoints1_source_valid;
reg litepciedma1_writer_bufferizeendpoints1_source_ready = 1'd0;
wire litepciedma1_writer_bufferizeendpoints1_source_first;
wire litepciedma1_writer_bufferizeendpoints1_source_last;
reg [31:0] litepciedma1_writer_bufferizeendpoints1_source_payload_address = 32'd0;
reg [23:0] litepciedma1_writer_bufferizeendpoints1_source_payload_length = 24'd0;
reg [7:0] litepciedma1_writer_bufferizeendpoints1_source_payload_control = 8'd0;
reg [7:0] litepciedma1_writer_bufferizeendpoints1_source_payload_user_id = 8'd0;
wire litepciedma1_writer_bufferizeendpoints1_pipe_ce;
wire litepciedma1_writer_bufferizeendpoints1_busy;
reg litepciedma1_writer_bufferizeendpoints1_valid_n = 1'd0;
reg litepciedma1_writer_bufferizeendpoints1_first_n = 1'd0;
reg litepciedma1_writer_bufferizeendpoints1_last_n = 1'd0;
reg litepciedma1_litepciemasterinternalport3_sink_valid = 1'd0;
reg litepciedma1_litepciemasterinternalport3_sink_ready = 1'd0;
wire litepciedma1_litepciemasterinternalport3_sink_first;
wire litepciedma1_litepciemasterinternalport3_sink_last;
wire litepciedma1_litepciemasterinternalport3_sink_payload_we;
wire [31:0] litepciedma1_litepciemasterinternalport3_sink_payload_adr;
wire [9:0] litepciedma1_litepciemasterinternalport3_sink_payload_len;
wire [15:0] litepciedma1_litepciemasterinternalport3_sink_payload_req_id;
reg [7:0] litepciedma1_litepciemasterinternalport3_sink_payload_tag = 8'd0;
wire [63:0] litepciedma1_litepciemasterinternalport3_sink_payload_dat;
wire [7:0] litepciedma1_litepciemasterinternalport3_sink_payload_channel;
wire [7:0] litepciedma1_litepciemasterinternalport3_sink_payload_user_id;
reg litepciedma1_litepciemasterinternalport3_source_valid = 1'd0;
wire litepciedma1_litepciemasterinternalport3_source_ready;
reg litepciedma1_litepciemasterinternalport3_source_first = 1'd0;
reg litepciedma1_litepciemasterinternalport3_source_last = 1'd0;
reg [31:0] litepciedma1_litepciemasterinternalport3_source_payload_adr = 32'd0;
reg [9:0] litepciedma1_litepciemasterinternalport3_source_payload_len = 10'd0;
reg litepciedma1_litepciemasterinternalport3_source_payload_end = 1'd0;
reg [15:0] litepciedma1_litepciemasterinternalport3_source_payload_req_id = 16'd0;
reg [15:0] litepciedma1_litepciemasterinternalport3_source_payload_cmp_id = 16'd0;
reg litepciedma1_litepciemasterinternalport3_source_payload_err = 1'd0;
reg [7:0] litepciedma1_litepciemasterinternalport3_source_payload_tag = 8'd0;
reg [63:0] litepciedma1_litepciemasterinternalport3_source_payload_dat = 64'd0;
reg [7:0] litepciedma1_litepciemasterinternalport3_source_payload_channel = 8'd0;
reg [7:0] litepciedma1_litepciemasterinternalport3_source_payload_user_id = 8'd0;
wire litepciedma1_reader_source_source_valid;
wire litepciedma1_reader_source_source_ready;
wire litepciedma1_reader_source_source_first;
wire litepciedma1_reader_source_source_last;
wire [63:0] litepciedma1_reader_source_source_payload_data;
wire litepciedma1_reader_irq;
reg litepciedma1_reader_enable_storage_full = 1'd0;
wire litepciedma1_reader_enable_storage;
reg litepciedma1_reader_enable_re = 1'd0;
reg [15:0] litepciedma1_reader_sCounter_storage_full = 16'd0;
wire [15:0] litepciedma1_reader_sCounter_storage;
reg litepciedma1_reader_sCounter_re = 1'd0;
wire litepciedma1_reader_table_source_source_valid;
wire litepciedma1_reader_table_source_source_ready;
wire litepciedma1_reader_table_source_source_first;
reg litepciedma1_reader_table_source_source_last = 1'd0;
wire [31:0] litepciedma1_reader_table_source_source_payload_address;
wire [23:0] litepciedma1_reader_table_source_source_payload_length;
wire [7:0] litepciedma1_reader_table_source_source_payload_control;
reg [63:0] litepciedma1_reader_table_value_storage_full = 64'd0;
wire [63:0] litepciedma1_reader_table_value_storage;
reg litepciedma1_reader_table_value_re = 1'd0;
wire litepciedma1_reader_table_we_re;
wire litepciedma1_reader_table_we_r;
reg litepciedma1_reader_table_we_w = 1'd0;
reg litepciedma1_reader_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma1_reader_table_loop_prog_n_storage;
reg litepciedma1_reader_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma1_reader_table_loop_status_status = 16'd0;
wire [7:0] litepciedma1_reader_table_level_status;
wire litepciedma1_reader_table_flush_re;
wire litepciedma1_reader_table_flush_r;
reg litepciedma1_reader_table_flush_w = 1'd0;
reg litepciedma1_reader_table_syncfifo1_sink_valid = 1'd0;
wire litepciedma1_reader_table_syncfifo1_sink_ready;
reg litepciedma1_reader_table_syncfifo1_sink_first = 1'd0;
reg litepciedma1_reader_table_syncfifo1_sink_last = 1'd0;
reg [31:0] litepciedma1_reader_table_syncfifo1_sink_payload_address = 32'd0;
reg [23:0] litepciedma1_reader_table_syncfifo1_sink_payload_length = 24'd0;
reg [7:0] litepciedma1_reader_table_syncfifo1_sink_payload_control = 8'd0;
wire litepciedma1_reader_table_syncfifo1_source_valid;
wire litepciedma1_reader_table_syncfifo1_source_ready;
wire litepciedma1_reader_table_syncfifo1_source_first;
wire litepciedma1_reader_table_syncfifo1_source_last;
wire [31:0] litepciedma1_reader_table_syncfifo1_source_payload_address;
wire [23:0] litepciedma1_reader_table_syncfifo1_source_payload_length;
wire [7:0] litepciedma1_reader_table_syncfifo1_source_payload_control;
wire litepciedma1_reader_table_syncfifo1_syncfifo1_we;
wire litepciedma1_reader_table_syncfifo1_syncfifo1_writable;
wire litepciedma1_reader_table_syncfifo1_syncfifo1_re;
wire litepciedma1_reader_table_syncfifo1_syncfifo1_readable;
wire [65:0] litepciedma1_reader_table_syncfifo1_syncfifo1_din;
wire [65:0] litepciedma1_reader_table_syncfifo1_syncfifo1_dout;
reg [8:0] litepciedma1_reader_table_syncfifo1_level = 9'd0;
reg litepciedma1_reader_table_syncfifo1_replace = 1'd0;
reg [7:0] litepciedma1_reader_table_syncfifo1_produce = 8'd0;
reg [7:0] litepciedma1_reader_table_syncfifo1_consume = 8'd0;
reg [7:0] litepciedma1_reader_table_syncfifo1_wrport_adr = 8'd0;
wire [65:0] litepciedma1_reader_table_syncfifo1_wrport_dat_r;
wire litepciedma1_reader_table_syncfifo1_wrport_we;
wire [65:0] litepciedma1_reader_table_syncfifo1_wrport_dat_w;
wire litepciedma1_reader_table_syncfifo1_do_read;
wire [7:0] litepciedma1_reader_table_syncfifo1_rdport_adr;
wire [65:0] litepciedma1_reader_table_syncfifo1_rdport_dat_r;
wire [31:0] litepciedma1_reader_table_syncfifo1_fifo_in_payload_address;
wire [23:0] litepciedma1_reader_table_syncfifo1_fifo_in_payload_length;
wire [7:0] litepciedma1_reader_table_syncfifo1_fifo_in_payload_control;
wire litepciedma1_reader_table_syncfifo1_fifo_in_first;
wire litepciedma1_reader_table_syncfifo1_fifo_in_last;
wire [31:0] litepciedma1_reader_table_syncfifo1_fifo_out_payload_address;
wire [23:0] litepciedma1_reader_table_syncfifo1_fifo_out_payload_length;
wire [7:0] litepciedma1_reader_table_syncfifo1_fifo_out_payload_control;
wire litepciedma1_reader_table_syncfifo1_fifo_out_first;
wire litepciedma1_reader_table_syncfifo1_fifo_out_last;
wire litepciedma1_reader_table_reset;
wire litepciedma1_reader_splitter_sink_valid;
reg litepciedma1_reader_splitter_sink_ready = 1'd0;
wire litepciedma1_reader_splitter_sink_first;
wire litepciedma1_reader_splitter_sink_last;
wire [31:0] litepciedma1_reader_splitter_sink_payload_address;
wire [23:0] litepciedma1_reader_splitter_sink_payload_length;
wire [7:0] litepciedma1_reader_splitter_sink_payload_control;
reg litepciedma1_reader_splitter_source_valid = 1'd0;
wire litepciedma1_reader_splitter_source_ready;
reg litepciedma1_reader_splitter_source_first = 1'd0;
reg litepciedma1_reader_splitter_source_last = 1'd0;
wire [31:0] litepciedma1_reader_splitter_source_payload_address;
reg [23:0] litepciedma1_reader_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma1_reader_splitter_source_payload_control;
wire [7:0] litepciedma1_reader_splitter_source_payload_user_id;
reg litepciedma1_reader_splitter_end = 1'd0;
reg [31:0] litepciedma1_reader_splitter_offset = 32'd0;
reg litepciedma1_reader_splitter_offset_reset = 1'd0;
reg litepciedma1_reader_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma1_reader_splitter_user_id = 32'd0;
wire litepciedma1_reader_splitter_user_id_ce;
reg [23:0] litepciedma1_reader_splitter_length = 24'd0;
reg litepciedma1_reader_splitter_length_update = 1'd0;
wire litepciedma1_reader_resetinserter_reset0;
wire litepciedma1_reader_bufferizeendpoints1_sink_valid;
wire litepciedma1_reader_bufferizeendpoints1_sink_ready;
wire litepciedma1_reader_bufferizeendpoints1_sink_first;
wire litepciedma1_reader_bufferizeendpoints1_sink_last;
wire [31:0] litepciedma1_reader_bufferizeendpoints1_sink_payload_address;
wire [23:0] litepciedma1_reader_bufferizeendpoints1_sink_payload_length;
wire [7:0] litepciedma1_reader_bufferizeendpoints1_sink_payload_control;
wire [7:0] litepciedma1_reader_bufferizeendpoints1_sink_payload_user_id;
wire litepciedma1_reader_bufferizeendpoints1_source_valid;
reg litepciedma1_reader_bufferizeendpoints1_source_ready = 1'd0;
wire litepciedma1_reader_bufferizeendpoints1_source_first;
wire litepciedma1_reader_bufferizeendpoints1_source_last;
reg [31:0] litepciedma1_reader_bufferizeendpoints1_source_payload_address = 32'd0;
reg [23:0] litepciedma1_reader_bufferizeendpoints1_source_payload_length = 24'd0;
reg [7:0] litepciedma1_reader_bufferizeendpoints1_source_payload_control = 8'd0;
reg [7:0] litepciedma1_reader_bufferizeendpoints1_source_payload_user_id = 8'd0;
wire litepciedma1_reader_bufferizeendpoints1_pipe_ce;
wire litepciedma1_reader_bufferizeendpoints1_busy;
reg litepciedma1_reader_bufferizeendpoints1_valid_n = 1'd0;
reg litepciedma1_reader_bufferizeendpoints1_first_n = 1'd0;
reg litepciedma1_reader_bufferizeendpoints1_last_n = 1'd0;
reg litepciedma1_reader_request_ready = 1'd0;
wire litepciedma1_reader_fifo_sink_valid;
wire litepciedma1_reader_fifo_sink_ready;
wire litepciedma1_reader_fifo_sink_first;
reg litepciedma1_reader_fifo_sink_last = 1'd0;
wire [63:0] litepciedma1_reader_fifo_sink_payload_data;
wire litepciedma1_reader_fifo_source_valid;
wire litepciedma1_reader_fifo_source_ready;
wire litepciedma1_reader_fifo_source_first;
wire litepciedma1_reader_fifo_source_last;
wire [63:0] litepciedma1_reader_fifo_source_payload_data;
wire litepciedma1_reader_fifo_re;
reg litepciedma1_reader_fifo_readable = 1'd0;
wire litepciedma1_reader_fifo_syncfifo1_we;
wire litepciedma1_reader_fifo_syncfifo1_writable;
wire litepciedma1_reader_fifo_syncfifo1_re;
wire litepciedma1_reader_fifo_syncfifo1_readable;
wire [65:0] litepciedma1_reader_fifo_syncfifo1_din;
wire [65:0] litepciedma1_reader_fifo_syncfifo1_dout;
reg [9:0] litepciedma1_reader_fifo_level0 = 10'd0;
reg litepciedma1_reader_fifo_replace = 1'd0;
reg [8:0] litepciedma1_reader_fifo_produce = 9'd0;
reg [8:0] litepciedma1_reader_fifo_consume = 9'd0;
reg [8:0] litepciedma1_reader_fifo_wrport_adr = 9'd0;
wire [65:0] litepciedma1_reader_fifo_wrport_dat_r;
wire litepciedma1_reader_fifo_wrport_we;
wire [65:0] litepciedma1_reader_fifo_wrport_dat_w;
wire litepciedma1_reader_fifo_do_read;
wire [8:0] litepciedma1_reader_fifo_rdport_adr;
wire [65:0] litepciedma1_reader_fifo_rdport_dat_r;
wire litepciedma1_reader_fifo_rdport_re;
wire [9:0] litepciedma1_reader_fifo_level1;
wire [63:0] litepciedma1_reader_fifo_fifo_in_payload_data;
wire litepciedma1_reader_fifo_fifo_in_first;
wire litepciedma1_reader_fifo_fifo_in_last;
wire [63:0] litepciedma1_reader_fifo_fifo_out_payload_data;
wire litepciedma1_reader_fifo_fifo_out_first;
wire litepciedma1_reader_fifo_fifo_out_last;
wire litepciedma1_reader_resetinserter_reset1;
reg [7:0] litepciedma1_reader_last_user_id = 8'd255;
reg litepciedma1_storage_full = 1'd0;
wire litepciedma1_storage;
reg litepciedma1_re = 1'd0;
wire litepciedma1_sink_valid;
reg litepciedma1_sink_ready = 1'd0;
wire litepciedma1_sink_first;
wire litepciedma1_sink_last;
wire [63:0] litepciedma1_sink_payload_data;
reg litepciedma1_source_valid = 1'd0;
wire litepciedma1_source_ready;
reg litepciedma1_source_first = 1'd0;
reg litepciedma1_source_last = 1'd0;
reg [63:0] litepciedma1_source_payload_data = 64'd0;
reg litepciedma1_next_source_valid = 1'd0;
wire litepciedma1_next_source_ready;
reg litepciedma1_next_source_first = 1'd0;
reg litepciedma1_next_source_last = 1'd0;
reg [63:0] litepciedma1_next_source_payload_data = 64'd0;
wire litepciedma1_next_sink_valid;
reg litepciedma1_next_sink_ready = 1'd0;
wire litepciedma1_next_sink_first;
wire litepciedma1_next_sink_last;
wire [63:0] litepciedma1_next_sink_payload_data;
wire litepciedma1_tx_fifo_sink_valid;
wire litepciedma1_tx_fifo_sink_ready;
wire litepciedma1_tx_fifo_sink_first;
wire litepciedma1_tx_fifo_sink_last;
wire [63:0] litepciedma1_tx_fifo_sink_payload_data;
wire litepciedma1_tx_fifo_source_valid;
wire litepciedma1_tx_fifo_source_ready;
wire litepciedma1_tx_fifo_source_first;
wire litepciedma1_tx_fifo_source_last;
wire [63:0] litepciedma1_tx_fifo_source_payload_data;
wire litepciedma1_tx_fifo_re;
reg litepciedma1_tx_fifo_readable = 1'd0;
wire litepciedma1_tx_fifo_syncfifo1_we;
wire litepciedma1_tx_fifo_syncfifo1_writable;
wire litepciedma1_tx_fifo_syncfifo1_re;
wire litepciedma1_tx_fifo_syncfifo1_readable;
wire [65:0] litepciedma1_tx_fifo_syncfifo1_din;
wire [65:0] litepciedma1_tx_fifo_syncfifo1_dout;
reg [10:0] litepciedma1_tx_fifo_level0 = 11'd0;
reg litepciedma1_tx_fifo_replace = 1'd0;
reg [9:0] litepciedma1_tx_fifo_produce = 10'd0;
reg [9:0] litepciedma1_tx_fifo_consume = 10'd0;
reg [9:0] litepciedma1_tx_fifo_wrport_adr = 10'd0;
wire [65:0] litepciedma1_tx_fifo_wrport_dat_r;
wire litepciedma1_tx_fifo_wrport_we;
wire [65:0] litepciedma1_tx_fifo_wrport_dat_w;
wire litepciedma1_tx_fifo_do_read;
wire [9:0] litepciedma1_tx_fifo_rdport_adr;
wire [65:0] litepciedma1_tx_fifo_rdport_dat_r;
wire litepciedma1_tx_fifo_rdport_re;
wire [10:0] litepciedma1_tx_fifo_level1;
wire [63:0] litepciedma1_tx_fifo_fifo_in_payload_data;
wire litepciedma1_tx_fifo_fifo_in_first;
wire litepciedma1_tx_fifo_fifo_in_last;
wire [63:0] litepciedma1_tx_fifo_fifo_out_payload_data;
wire litepciedma1_tx_fifo_fifo_out_first;
wire litepciedma1_tx_fifo_fifo_out_last;
wire litepciedma1_rx_fifo_sink_valid;
wire litepciedma1_rx_fifo_sink_ready;
reg litepciedma1_rx_fifo_sink_first = 1'd0;
wire litepciedma1_rx_fifo_sink_last;
wire [63:0] litepciedma1_rx_fifo_sink_payload_data;
wire litepciedma1_rx_fifo_source_valid;
wire litepciedma1_rx_fifo_source_ready;
wire litepciedma1_rx_fifo_source_first;
wire litepciedma1_rx_fifo_source_last;
wire [63:0] litepciedma1_rx_fifo_source_payload_data;
wire litepciedma1_rx_fifo_re;
reg litepciedma1_rx_fifo_readable = 1'd0;
wire litepciedma1_rx_fifo_syncfifo1_we;
wire litepciedma1_rx_fifo_syncfifo1_writable;
wire litepciedma1_rx_fifo_syncfifo1_re;
wire litepciedma1_rx_fifo_syncfifo1_readable;
wire [65:0] litepciedma1_rx_fifo_syncfifo1_din;
wire [65:0] litepciedma1_rx_fifo_syncfifo1_dout;
reg [10:0] litepciedma1_rx_fifo_level0 = 11'd0;
reg litepciedma1_rx_fifo_replace = 1'd0;
reg [9:0] litepciedma1_rx_fifo_produce = 10'd0;
reg [9:0] litepciedma1_rx_fifo_consume = 10'd0;
reg [9:0] litepciedma1_rx_fifo_wrport_adr = 10'd0;
wire [65:0] litepciedma1_rx_fifo_wrport_dat_r;
wire litepciedma1_rx_fifo_wrport_we;
wire [65:0] litepciedma1_rx_fifo_wrport_dat_w;
wire litepciedma1_rx_fifo_do_read;
wire [9:0] litepciedma1_rx_fifo_rdport_adr;
wire [65:0] litepciedma1_rx_fifo_rdport_dat_r;
wire litepciedma1_rx_fifo_rdport_re;
wire [10:0] litepciedma1_rx_fifo_level1;
wire [63:0] litepciedma1_rx_fifo_fifo_in_payload_data;
wire litepciedma1_rx_fifo_fifo_in_first;
wire litepciedma1_rx_fifo_fifo_in_last;
wire [63:0] litepciedma1_rx_fifo_fifo_out_payload_data;
wire litepciedma1_rx_fifo_fifo_out_first;
wire litepciedma1_rx_fifo_fifo_out_last;
reg litepciedma2_litepciemasterinternalport4_sink_valid = 1'd0;
reg litepciedma2_litepciemasterinternalport4_sink_ready = 1'd0;
wire litepciedma2_litepciemasterinternalport4_sink_first;
wire litepciedma2_litepciemasterinternalport4_sink_last;
wire litepciedma2_litepciemasterinternalport4_sink_payload_we;
wire [31:0] litepciedma2_litepciemasterinternalport4_sink_payload_adr;
wire [9:0] litepciedma2_litepciemasterinternalport4_sink_payload_len;
wire [15:0] litepciedma2_litepciemasterinternalport4_sink_payload_req_id;
wire [7:0] litepciedma2_litepciemasterinternalport4_sink_payload_tag;
wire [63:0] litepciedma2_litepciemasterinternalport4_sink_payload_dat;
wire [7:0] litepciedma2_litepciemasterinternalport4_sink_payload_channel;
wire [7:0] litepciedma2_litepciemasterinternalport4_sink_payload_user_id;
reg litepciedma2_litepciemasterinternalport4_source_valid = 1'd0;
reg litepciedma2_litepciemasterinternalport4_source_ready = 1'd0;
reg litepciedma2_litepciemasterinternalport4_source_first = 1'd0;
reg litepciedma2_litepciemasterinternalport4_source_last = 1'd0;
reg [31:0] litepciedma2_litepciemasterinternalport4_source_payload_adr = 32'd0;
reg [9:0] litepciedma2_litepciemasterinternalport4_source_payload_len = 10'd0;
reg litepciedma2_litepciemasterinternalport4_source_payload_end = 1'd0;
reg [15:0] litepciedma2_litepciemasterinternalport4_source_payload_req_id = 16'd0;
reg [15:0] litepciedma2_litepciemasterinternalport4_source_payload_cmp_id = 16'd0;
reg litepciedma2_litepciemasterinternalport4_source_payload_err = 1'd0;
reg [7:0] litepciedma2_litepciemasterinternalport4_source_payload_tag = 8'd0;
reg [63:0] litepciedma2_litepciemasterinternalport4_source_payload_dat = 64'd0;
reg [7:0] litepciedma2_litepciemasterinternalport4_source_payload_channel = 8'd0;
reg [7:0] litepciedma2_litepciemasterinternalport4_source_payload_user_id = 8'd0;
wire litepciedma2_writer_sink_sink_valid;
wire litepciedma2_writer_sink_sink_ready;
wire litepciedma2_writer_sink_sink_first;
wire litepciedma2_writer_sink_sink_last;
wire [63:0] litepciedma2_writer_sink_sink_payload_data;
wire litepciedma2_writer_irq;
reg litepciedma2_writer_enable_storage_full = 1'd0;
wire litepciedma2_writer_enable_storage;
reg litepciedma2_writer_enable_re = 1'd0;
reg [31:0] litepciedma2_writer_sCounter_storage_full = 32'd0;
wire [31:0] litepciedma2_writer_sCounter_storage;
reg litepciedma2_writer_sCounter_re = 1'd0;
reg litepciedma2_writer_fifo_re = 1'd0;
reg litepciedma2_writer_fifo_readable = 1'd0;
wire litepciedma2_writer_fifo_syncfifo2_we;
wire litepciedma2_writer_fifo_syncfifo2_writable;
wire litepciedma2_writer_fifo_syncfifo2_re;
wire litepciedma2_writer_fifo_syncfifo2_readable;
wire [64:0] litepciedma2_writer_fifo_syncfifo2_din;
wire [64:0] litepciedma2_writer_fifo_syncfifo2_dout;
reg [8:0] litepciedma2_writer_fifo_level0 = 9'd0;
reg litepciedma2_writer_fifo_replace = 1'd0;
reg [7:0] litepciedma2_writer_fifo_produce = 8'd0;
reg [7:0] litepciedma2_writer_fifo_consume = 8'd0;
reg [7:0] litepciedma2_writer_fifo_wrport_adr = 8'd0;
wire [64:0] litepciedma2_writer_fifo_wrport_dat_r;
wire litepciedma2_writer_fifo_wrport_we;
wire [64:0] litepciedma2_writer_fifo_wrport_dat_w;
wire litepciedma2_writer_fifo_do_read;
wire [7:0] litepciedma2_writer_fifo_rdport_adr;
wire [64:0] litepciedma2_writer_fifo_rdport_dat_r;
wire litepciedma2_writer_fifo_rdport_re;
wire [8:0] litepciedma2_writer_fifo_level1;
wire litepciedma2_writer_resetinserter_reset0;
reg litepciedma2_writer_request_ready = 1'd0;
reg [12:0] litepciedma2_writer_counter = 13'd0;
reg litepciedma2_writer_counter_reset = 1'd0;
reg litepciedma2_writer_counter_ce = 1'd0;
wire litepciedma2_writer_table_source_source_valid;
wire litepciedma2_writer_table_source_source_ready;
wire litepciedma2_writer_table_source_source_first;
reg litepciedma2_writer_table_source_source_last = 1'd0;
wire [31:0] litepciedma2_writer_table_source_source_payload_address;
wire [23:0] litepciedma2_writer_table_source_source_payload_length;
wire [7:0] litepciedma2_writer_table_source_source_payload_control;
reg [63:0] litepciedma2_writer_table_value_storage_full = 64'd0;
wire [63:0] litepciedma2_writer_table_value_storage;
reg litepciedma2_writer_table_value_re = 1'd0;
wire litepciedma2_writer_table_we_re;
wire litepciedma2_writer_table_we_r;
reg litepciedma2_writer_table_we_w = 1'd0;
reg litepciedma2_writer_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma2_writer_table_loop_prog_n_storage;
reg litepciedma2_writer_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma2_writer_table_loop_status_status = 16'd0;
wire [7:0] litepciedma2_writer_table_level_status;
wire litepciedma2_writer_table_flush_re;
wire litepciedma2_writer_table_flush_r;
reg litepciedma2_writer_table_flush_w = 1'd0;
reg litepciedma2_writer_table_syncfifo2_sink_valid = 1'd0;
wire litepciedma2_writer_table_syncfifo2_sink_ready;
reg litepciedma2_writer_table_syncfifo2_sink_first = 1'd0;
reg litepciedma2_writer_table_syncfifo2_sink_last = 1'd0;
reg [31:0] litepciedma2_writer_table_syncfifo2_sink_payload_address = 32'd0;
reg [23:0] litepciedma2_writer_table_syncfifo2_sink_payload_length = 24'd0;
reg [7:0] litepciedma2_writer_table_syncfifo2_sink_payload_control = 8'd0;
wire litepciedma2_writer_table_syncfifo2_source_valid;
wire litepciedma2_writer_table_syncfifo2_source_ready;
wire litepciedma2_writer_table_syncfifo2_source_first;
wire litepciedma2_writer_table_syncfifo2_source_last;
wire [31:0] litepciedma2_writer_table_syncfifo2_source_payload_address;
wire [23:0] litepciedma2_writer_table_syncfifo2_source_payload_length;
wire [7:0] litepciedma2_writer_table_syncfifo2_source_payload_control;
wire litepciedma2_writer_table_syncfifo2_syncfifo2_we;
wire litepciedma2_writer_table_syncfifo2_syncfifo2_writable;
wire litepciedma2_writer_table_syncfifo2_syncfifo2_re;
wire litepciedma2_writer_table_syncfifo2_syncfifo2_readable;
wire [65:0] litepciedma2_writer_table_syncfifo2_syncfifo2_din;
wire [65:0] litepciedma2_writer_table_syncfifo2_syncfifo2_dout;
reg [8:0] litepciedma2_writer_table_syncfifo2_level = 9'd0;
reg litepciedma2_writer_table_syncfifo2_replace = 1'd0;
reg [7:0] litepciedma2_writer_table_syncfifo2_produce = 8'd0;
reg [7:0] litepciedma2_writer_table_syncfifo2_consume = 8'd0;
reg [7:0] litepciedma2_writer_table_syncfifo2_wrport_adr = 8'd0;
wire [65:0] litepciedma2_writer_table_syncfifo2_wrport_dat_r;
wire litepciedma2_writer_table_syncfifo2_wrport_we;
wire [65:0] litepciedma2_writer_table_syncfifo2_wrport_dat_w;
wire litepciedma2_writer_table_syncfifo2_do_read;
wire [7:0] litepciedma2_writer_table_syncfifo2_rdport_adr;
wire [65:0] litepciedma2_writer_table_syncfifo2_rdport_dat_r;
wire [31:0] litepciedma2_writer_table_syncfifo2_fifo_in_payload_address;
wire [23:0] litepciedma2_writer_table_syncfifo2_fifo_in_payload_length;
wire [7:0] litepciedma2_writer_table_syncfifo2_fifo_in_payload_control;
wire litepciedma2_writer_table_syncfifo2_fifo_in_first;
wire litepciedma2_writer_table_syncfifo2_fifo_in_last;
wire [31:0] litepciedma2_writer_table_syncfifo2_fifo_out_payload_address;
wire [23:0] litepciedma2_writer_table_syncfifo2_fifo_out_payload_length;
wire [7:0] litepciedma2_writer_table_syncfifo2_fifo_out_payload_control;
wire litepciedma2_writer_table_syncfifo2_fifo_out_first;
wire litepciedma2_writer_table_syncfifo2_fifo_out_last;
wire litepciedma2_writer_table_reset;
wire litepciedma2_writer_splitter_sink_valid;
reg litepciedma2_writer_splitter_sink_ready = 1'd0;
wire litepciedma2_writer_splitter_sink_first;
wire litepciedma2_writer_splitter_sink_last;
wire [31:0] litepciedma2_writer_splitter_sink_payload_address;
wire [23:0] litepciedma2_writer_splitter_sink_payload_length;
wire [7:0] litepciedma2_writer_splitter_sink_payload_control;
reg litepciedma2_writer_splitter_source_valid = 1'd0;
wire litepciedma2_writer_splitter_source_ready;
reg litepciedma2_writer_splitter_source_first = 1'd0;
reg litepciedma2_writer_splitter_source_last = 1'd0;
wire [31:0] litepciedma2_writer_splitter_source_payload_address;
reg [23:0] litepciedma2_writer_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma2_writer_splitter_source_payload_control;
wire [7:0] litepciedma2_writer_splitter_source_payload_user_id;
reg litepciedma2_writer_splitter_end = 1'd0;
reg [31:0] litepciedma2_writer_splitter_offset = 32'd0;
reg litepciedma2_writer_splitter_offset_reset = 1'd0;
reg litepciedma2_writer_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma2_writer_splitter_user_id = 32'd0;
wire litepciedma2_writer_splitter_user_id_ce;
reg [23:0] litepciedma2_writer_splitter_length = 24'd0;
reg litepciedma2_writer_splitter_length_update = 1'd0;
wire litepciedma2_writer_resetinserter_reset1;
wire litepciedma2_writer_bufferizeendpoints2_sink_valid;
wire litepciedma2_writer_bufferizeendpoints2_sink_ready;
wire litepciedma2_writer_bufferizeendpoints2_sink_first;
wire litepciedma2_writer_bufferizeendpoints2_sink_last;
wire [31:0] litepciedma2_writer_bufferizeendpoints2_sink_payload_address;
wire [23:0] litepciedma2_writer_bufferizeendpoints2_sink_payload_length;
wire [7:0] litepciedma2_writer_bufferizeendpoints2_sink_payload_control;
wire [7:0] litepciedma2_writer_bufferizeendpoints2_sink_payload_user_id;
wire litepciedma2_writer_bufferizeendpoints2_source_valid;
reg litepciedma2_writer_bufferizeendpoints2_source_ready = 1'd0;
wire litepciedma2_writer_bufferizeendpoints2_source_first;
wire litepciedma2_writer_bufferizeendpoints2_source_last;
reg [31:0] litepciedma2_writer_bufferizeendpoints2_source_payload_address = 32'd0;
reg [23:0] litepciedma2_writer_bufferizeendpoints2_source_payload_length = 24'd0;
reg [7:0] litepciedma2_writer_bufferizeendpoints2_source_payload_control = 8'd0;
reg [7:0] litepciedma2_writer_bufferizeendpoints2_source_payload_user_id = 8'd0;
wire litepciedma2_writer_bufferizeendpoints2_pipe_ce;
wire litepciedma2_writer_bufferizeendpoints2_busy;
reg litepciedma2_writer_bufferizeendpoints2_valid_n = 1'd0;
reg litepciedma2_writer_bufferizeendpoints2_first_n = 1'd0;
reg litepciedma2_writer_bufferizeendpoints2_last_n = 1'd0;
reg litepciedma2_litepciemasterinternalport5_sink_valid = 1'd0;
reg litepciedma2_litepciemasterinternalport5_sink_ready = 1'd0;
wire litepciedma2_litepciemasterinternalport5_sink_first;
wire litepciedma2_litepciemasterinternalport5_sink_last;
wire litepciedma2_litepciemasterinternalport5_sink_payload_we;
wire [31:0] litepciedma2_litepciemasterinternalport5_sink_payload_adr;
wire [9:0] litepciedma2_litepciemasterinternalport5_sink_payload_len;
wire [15:0] litepciedma2_litepciemasterinternalport5_sink_payload_req_id;
reg [7:0] litepciedma2_litepciemasterinternalport5_sink_payload_tag = 8'd0;
wire [63:0] litepciedma2_litepciemasterinternalport5_sink_payload_dat;
wire [7:0] litepciedma2_litepciemasterinternalport5_sink_payload_channel;
wire [7:0] litepciedma2_litepciemasterinternalport5_sink_payload_user_id;
reg litepciedma2_litepciemasterinternalport5_source_valid = 1'd0;
wire litepciedma2_litepciemasterinternalport5_source_ready;
reg litepciedma2_litepciemasterinternalport5_source_first = 1'd0;
reg litepciedma2_litepciemasterinternalport5_source_last = 1'd0;
reg [31:0] litepciedma2_litepciemasterinternalport5_source_payload_adr = 32'd0;
reg [9:0] litepciedma2_litepciemasterinternalport5_source_payload_len = 10'd0;
reg litepciedma2_litepciemasterinternalport5_source_payload_end = 1'd0;
reg [15:0] litepciedma2_litepciemasterinternalport5_source_payload_req_id = 16'd0;
reg [15:0] litepciedma2_litepciemasterinternalport5_source_payload_cmp_id = 16'd0;
reg litepciedma2_litepciemasterinternalport5_source_payload_err = 1'd0;
reg [7:0] litepciedma2_litepciemasterinternalport5_source_payload_tag = 8'd0;
reg [63:0] litepciedma2_litepciemasterinternalport5_source_payload_dat = 64'd0;
reg [7:0] litepciedma2_litepciemasterinternalport5_source_payload_channel = 8'd0;
reg [7:0] litepciedma2_litepciemasterinternalport5_source_payload_user_id = 8'd0;
wire litepciedma2_reader_source_source_valid;
wire litepciedma2_reader_source_source_ready;
wire litepciedma2_reader_source_source_first;
wire litepciedma2_reader_source_source_last;
wire [63:0] litepciedma2_reader_source_source_payload_data;
wire litepciedma2_reader_irq;
reg litepciedma2_reader_enable_storage_full = 1'd0;
wire litepciedma2_reader_enable_storage;
reg litepciedma2_reader_enable_re = 1'd0;
reg [15:0] litepciedma2_reader_sCounter_storage_full = 16'd0;
wire [15:0] litepciedma2_reader_sCounter_storage;
reg litepciedma2_reader_sCounter_re = 1'd0;
wire litepciedma2_reader_table_source_source_valid;
wire litepciedma2_reader_table_source_source_ready;
wire litepciedma2_reader_table_source_source_first;
reg litepciedma2_reader_table_source_source_last = 1'd0;
wire [31:0] litepciedma2_reader_table_source_source_payload_address;
wire [23:0] litepciedma2_reader_table_source_source_payload_length;
wire [7:0] litepciedma2_reader_table_source_source_payload_control;
reg [63:0] litepciedma2_reader_table_value_storage_full = 64'd0;
wire [63:0] litepciedma2_reader_table_value_storage;
reg litepciedma2_reader_table_value_re = 1'd0;
wire litepciedma2_reader_table_we_re;
wire litepciedma2_reader_table_we_r;
reg litepciedma2_reader_table_we_w = 1'd0;
reg litepciedma2_reader_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma2_reader_table_loop_prog_n_storage;
reg litepciedma2_reader_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma2_reader_table_loop_status_status = 16'd0;
wire [7:0] litepciedma2_reader_table_level_status;
wire litepciedma2_reader_table_flush_re;
wire litepciedma2_reader_table_flush_r;
reg litepciedma2_reader_table_flush_w = 1'd0;
reg litepciedma2_reader_table_syncfifo2_sink_valid = 1'd0;
wire litepciedma2_reader_table_syncfifo2_sink_ready;
reg litepciedma2_reader_table_syncfifo2_sink_first = 1'd0;
reg litepciedma2_reader_table_syncfifo2_sink_last = 1'd0;
reg [31:0] litepciedma2_reader_table_syncfifo2_sink_payload_address = 32'd0;
reg [23:0] litepciedma2_reader_table_syncfifo2_sink_payload_length = 24'd0;
reg [7:0] litepciedma2_reader_table_syncfifo2_sink_payload_control = 8'd0;
wire litepciedma2_reader_table_syncfifo2_source_valid;
wire litepciedma2_reader_table_syncfifo2_source_ready;
wire litepciedma2_reader_table_syncfifo2_source_first;
wire litepciedma2_reader_table_syncfifo2_source_last;
wire [31:0] litepciedma2_reader_table_syncfifo2_source_payload_address;
wire [23:0] litepciedma2_reader_table_syncfifo2_source_payload_length;
wire [7:0] litepciedma2_reader_table_syncfifo2_source_payload_control;
wire litepciedma2_reader_table_syncfifo2_syncfifo2_we;
wire litepciedma2_reader_table_syncfifo2_syncfifo2_writable;
wire litepciedma2_reader_table_syncfifo2_syncfifo2_re;
wire litepciedma2_reader_table_syncfifo2_syncfifo2_readable;
wire [65:0] litepciedma2_reader_table_syncfifo2_syncfifo2_din;
wire [65:0] litepciedma2_reader_table_syncfifo2_syncfifo2_dout;
reg [8:0] litepciedma2_reader_table_syncfifo2_level = 9'd0;
reg litepciedma2_reader_table_syncfifo2_replace = 1'd0;
reg [7:0] litepciedma2_reader_table_syncfifo2_produce = 8'd0;
reg [7:0] litepciedma2_reader_table_syncfifo2_consume = 8'd0;
reg [7:0] litepciedma2_reader_table_syncfifo2_wrport_adr = 8'd0;
wire [65:0] litepciedma2_reader_table_syncfifo2_wrport_dat_r;
wire litepciedma2_reader_table_syncfifo2_wrport_we;
wire [65:0] litepciedma2_reader_table_syncfifo2_wrport_dat_w;
wire litepciedma2_reader_table_syncfifo2_do_read;
wire [7:0] litepciedma2_reader_table_syncfifo2_rdport_adr;
wire [65:0] litepciedma2_reader_table_syncfifo2_rdport_dat_r;
wire [31:0] litepciedma2_reader_table_syncfifo2_fifo_in_payload_address;
wire [23:0] litepciedma2_reader_table_syncfifo2_fifo_in_payload_length;
wire [7:0] litepciedma2_reader_table_syncfifo2_fifo_in_payload_control;
wire litepciedma2_reader_table_syncfifo2_fifo_in_first;
wire litepciedma2_reader_table_syncfifo2_fifo_in_last;
wire [31:0] litepciedma2_reader_table_syncfifo2_fifo_out_payload_address;
wire [23:0] litepciedma2_reader_table_syncfifo2_fifo_out_payload_length;
wire [7:0] litepciedma2_reader_table_syncfifo2_fifo_out_payload_control;
wire litepciedma2_reader_table_syncfifo2_fifo_out_first;
wire litepciedma2_reader_table_syncfifo2_fifo_out_last;
wire litepciedma2_reader_table_reset;
wire litepciedma2_reader_splitter_sink_valid;
reg litepciedma2_reader_splitter_sink_ready = 1'd0;
wire litepciedma2_reader_splitter_sink_first;
wire litepciedma2_reader_splitter_sink_last;
wire [31:0] litepciedma2_reader_splitter_sink_payload_address;
wire [23:0] litepciedma2_reader_splitter_sink_payload_length;
wire [7:0] litepciedma2_reader_splitter_sink_payload_control;
reg litepciedma2_reader_splitter_source_valid = 1'd0;
wire litepciedma2_reader_splitter_source_ready;
reg litepciedma2_reader_splitter_source_first = 1'd0;
reg litepciedma2_reader_splitter_source_last = 1'd0;
wire [31:0] litepciedma2_reader_splitter_source_payload_address;
reg [23:0] litepciedma2_reader_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma2_reader_splitter_source_payload_control;
wire [7:0] litepciedma2_reader_splitter_source_payload_user_id;
reg litepciedma2_reader_splitter_end = 1'd0;
reg [31:0] litepciedma2_reader_splitter_offset = 32'd0;
reg litepciedma2_reader_splitter_offset_reset = 1'd0;
reg litepciedma2_reader_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma2_reader_splitter_user_id = 32'd0;
wire litepciedma2_reader_splitter_user_id_ce;
reg [23:0] litepciedma2_reader_splitter_length = 24'd0;
reg litepciedma2_reader_splitter_length_update = 1'd0;
wire litepciedma2_reader_resetinserter_reset0;
wire litepciedma2_reader_bufferizeendpoints2_sink_valid;
wire litepciedma2_reader_bufferizeendpoints2_sink_ready;
wire litepciedma2_reader_bufferizeendpoints2_sink_first;
wire litepciedma2_reader_bufferizeendpoints2_sink_last;
wire [31:0] litepciedma2_reader_bufferizeendpoints2_sink_payload_address;
wire [23:0] litepciedma2_reader_bufferizeendpoints2_sink_payload_length;
wire [7:0] litepciedma2_reader_bufferizeendpoints2_sink_payload_control;
wire [7:0] litepciedma2_reader_bufferizeendpoints2_sink_payload_user_id;
wire litepciedma2_reader_bufferizeendpoints2_source_valid;
reg litepciedma2_reader_bufferizeendpoints2_source_ready = 1'd0;
wire litepciedma2_reader_bufferizeendpoints2_source_first;
wire litepciedma2_reader_bufferizeendpoints2_source_last;
reg [31:0] litepciedma2_reader_bufferizeendpoints2_source_payload_address = 32'd0;
reg [23:0] litepciedma2_reader_bufferizeendpoints2_source_payload_length = 24'd0;
reg [7:0] litepciedma2_reader_bufferizeendpoints2_source_payload_control = 8'd0;
reg [7:0] litepciedma2_reader_bufferizeendpoints2_source_payload_user_id = 8'd0;
wire litepciedma2_reader_bufferizeendpoints2_pipe_ce;
wire litepciedma2_reader_bufferizeendpoints2_busy;
reg litepciedma2_reader_bufferizeendpoints2_valid_n = 1'd0;
reg litepciedma2_reader_bufferizeendpoints2_first_n = 1'd0;
reg litepciedma2_reader_bufferizeendpoints2_last_n = 1'd0;
reg litepciedma2_reader_request_ready = 1'd0;
wire litepciedma2_reader_fifo_sink_valid;
wire litepciedma2_reader_fifo_sink_ready;
wire litepciedma2_reader_fifo_sink_first;
reg litepciedma2_reader_fifo_sink_last = 1'd0;
wire [63:0] litepciedma2_reader_fifo_sink_payload_data;
wire litepciedma2_reader_fifo_source_valid;
wire litepciedma2_reader_fifo_source_ready;
wire litepciedma2_reader_fifo_source_first;
wire litepciedma2_reader_fifo_source_last;
wire [63:0] litepciedma2_reader_fifo_source_payload_data;
wire litepciedma2_reader_fifo_re;
reg litepciedma2_reader_fifo_readable = 1'd0;
wire litepciedma2_reader_fifo_syncfifo2_we;
wire litepciedma2_reader_fifo_syncfifo2_writable;
wire litepciedma2_reader_fifo_syncfifo2_re;
wire litepciedma2_reader_fifo_syncfifo2_readable;
wire [65:0] litepciedma2_reader_fifo_syncfifo2_din;
wire [65:0] litepciedma2_reader_fifo_syncfifo2_dout;
reg [9:0] litepciedma2_reader_fifo_level0 = 10'd0;
reg litepciedma2_reader_fifo_replace = 1'd0;
reg [8:0] litepciedma2_reader_fifo_produce = 9'd0;
reg [8:0] litepciedma2_reader_fifo_consume = 9'd0;
reg [8:0] litepciedma2_reader_fifo_wrport_adr = 9'd0;
wire [65:0] litepciedma2_reader_fifo_wrport_dat_r;
wire litepciedma2_reader_fifo_wrport_we;
wire [65:0] litepciedma2_reader_fifo_wrport_dat_w;
wire litepciedma2_reader_fifo_do_read;
wire [8:0] litepciedma2_reader_fifo_rdport_adr;
wire [65:0] litepciedma2_reader_fifo_rdport_dat_r;
wire litepciedma2_reader_fifo_rdport_re;
wire [9:0] litepciedma2_reader_fifo_level1;
wire [63:0] litepciedma2_reader_fifo_fifo_in_payload_data;
wire litepciedma2_reader_fifo_fifo_in_first;
wire litepciedma2_reader_fifo_fifo_in_last;
wire [63:0] litepciedma2_reader_fifo_fifo_out_payload_data;
wire litepciedma2_reader_fifo_fifo_out_first;
wire litepciedma2_reader_fifo_fifo_out_last;
wire litepciedma2_reader_resetinserter_reset1;
reg [7:0] litepciedma2_reader_last_user_id = 8'd255;
reg litepciedma2_storage_full = 1'd0;
wire litepciedma2_storage;
reg litepciedma2_re = 1'd0;
wire litepciedma2_sink_valid;
reg litepciedma2_sink_ready = 1'd0;
wire litepciedma2_sink_first;
wire litepciedma2_sink_last;
wire [63:0] litepciedma2_sink_payload_data;
reg litepciedma2_source_valid = 1'd0;
wire litepciedma2_source_ready;
reg litepciedma2_source_first = 1'd0;
reg litepciedma2_source_last = 1'd0;
reg [63:0] litepciedma2_source_payload_data = 64'd0;
reg litepciedma2_next_source_valid = 1'd0;
wire litepciedma2_next_source_ready;
reg litepciedma2_next_source_first = 1'd0;
reg litepciedma2_next_source_last = 1'd0;
reg [63:0] litepciedma2_next_source_payload_data = 64'd0;
wire litepciedma2_next_sink_valid;
reg litepciedma2_next_sink_ready = 1'd0;
wire litepciedma2_next_sink_first;
wire litepciedma2_next_sink_last;
wire [63:0] litepciedma2_next_sink_payload_data;
wire litepciedma2_tx_fifo_sink_valid;
wire litepciedma2_tx_fifo_sink_ready;
wire litepciedma2_tx_fifo_sink_first;
wire litepciedma2_tx_fifo_sink_last;
wire [63:0] litepciedma2_tx_fifo_sink_payload_data;
wire litepciedma2_tx_fifo_source_valid;
wire litepciedma2_tx_fifo_source_ready;
wire litepciedma2_tx_fifo_source_first;
wire litepciedma2_tx_fifo_source_last;
wire [63:0] litepciedma2_tx_fifo_source_payload_data;
wire litepciedma2_tx_fifo_re;
reg litepciedma2_tx_fifo_readable = 1'd0;
wire litepciedma2_tx_fifo_syncfifo2_we;
wire litepciedma2_tx_fifo_syncfifo2_writable;
wire litepciedma2_tx_fifo_syncfifo2_re;
wire litepciedma2_tx_fifo_syncfifo2_readable;
wire [65:0] litepciedma2_tx_fifo_syncfifo2_din;
wire [65:0] litepciedma2_tx_fifo_syncfifo2_dout;
reg [10:0] litepciedma2_tx_fifo_level0 = 11'd0;
reg litepciedma2_tx_fifo_replace = 1'd0;
reg [9:0] litepciedma2_tx_fifo_produce = 10'd0;
reg [9:0] litepciedma2_tx_fifo_consume = 10'd0;
reg [9:0] litepciedma2_tx_fifo_wrport_adr = 10'd0;
wire [65:0] litepciedma2_tx_fifo_wrport_dat_r;
wire litepciedma2_tx_fifo_wrport_we;
wire [65:0] litepciedma2_tx_fifo_wrport_dat_w;
wire litepciedma2_tx_fifo_do_read;
wire [9:0] litepciedma2_tx_fifo_rdport_adr;
wire [65:0] litepciedma2_tx_fifo_rdport_dat_r;
wire litepciedma2_tx_fifo_rdport_re;
wire [10:0] litepciedma2_tx_fifo_level1;
wire [63:0] litepciedma2_tx_fifo_fifo_in_payload_data;
wire litepciedma2_tx_fifo_fifo_in_first;
wire litepciedma2_tx_fifo_fifo_in_last;
wire [63:0] litepciedma2_tx_fifo_fifo_out_payload_data;
wire litepciedma2_tx_fifo_fifo_out_first;
wire litepciedma2_tx_fifo_fifo_out_last;
wire litepciedma2_rx_fifo_sink_valid;
wire litepciedma2_rx_fifo_sink_ready;
reg litepciedma2_rx_fifo_sink_first = 1'd0;
wire litepciedma2_rx_fifo_sink_last;
wire [63:0] litepciedma2_rx_fifo_sink_payload_data;
wire litepciedma2_rx_fifo_source_valid;
wire litepciedma2_rx_fifo_source_ready;
wire litepciedma2_rx_fifo_source_first;
wire litepciedma2_rx_fifo_source_last;
wire [63:0] litepciedma2_rx_fifo_source_payload_data;
wire litepciedma2_rx_fifo_re;
reg litepciedma2_rx_fifo_readable = 1'd0;
wire litepciedma2_rx_fifo_syncfifo2_we;
wire litepciedma2_rx_fifo_syncfifo2_writable;
wire litepciedma2_rx_fifo_syncfifo2_re;
wire litepciedma2_rx_fifo_syncfifo2_readable;
wire [65:0] litepciedma2_rx_fifo_syncfifo2_din;
wire [65:0] litepciedma2_rx_fifo_syncfifo2_dout;
reg [10:0] litepciedma2_rx_fifo_level0 = 11'd0;
reg litepciedma2_rx_fifo_replace = 1'd0;
reg [9:0] litepciedma2_rx_fifo_produce = 10'd0;
reg [9:0] litepciedma2_rx_fifo_consume = 10'd0;
reg [9:0] litepciedma2_rx_fifo_wrport_adr = 10'd0;
wire [65:0] litepciedma2_rx_fifo_wrport_dat_r;
wire litepciedma2_rx_fifo_wrport_we;
wire [65:0] litepciedma2_rx_fifo_wrport_dat_w;
wire litepciedma2_rx_fifo_do_read;
wire [9:0] litepciedma2_rx_fifo_rdport_adr;
wire [65:0] litepciedma2_rx_fifo_rdport_dat_r;
wire litepciedma2_rx_fifo_rdport_re;
wire [10:0] litepciedma2_rx_fifo_level1;
wire [63:0] litepciedma2_rx_fifo_fifo_in_payload_data;
wire litepciedma2_rx_fifo_fifo_in_first;
wire litepciedma2_rx_fifo_fifo_in_last;
wire [63:0] litepciedma2_rx_fifo_fifo_out_payload_data;
wire litepciedma2_rx_fifo_fifo_out_first;
wire litepciedma2_rx_fifo_fifo_out_last;
reg [31:0] pcie_msi_irqs = 32'd0;
reg pcie_msi_source_valid = 1'd0;
wire pcie_msi_source_ready;
reg pcie_msi_source_first = 1'd0;
reg pcie_msi_source_last = 1'd0;
reg [7:0] pcie_msi_source_payload_dat = 8'd0;
reg [31:0] pcie_msi_storage_full = 32'd0;
wire [31:0] pcie_msi_storage;
reg pcie_msi_re = 1'd0;
wire pcie_msi_clear_clear_re;
wire [31:0] pcie_msi_clear_clear_r;
reg [31:0] pcie_msi_clear_clear_w = 32'd0;
reg [31:0] pcie_msi_status = 32'd0;
reg [31:0] pcie_msi_clear = 32'd0;
reg [31:0] pcie_msi_vector_d = 32'd0;
wire pcie_msi_transmit_request;
wire pcie_msi_transmit_grant;
reg [7:0] pcie_msi_transmit_counter = 8'd0;
reg [511:0] cntrl_storage_full = 512'd0;
wire [511:0] cntrl_storage;
reg cntrl_re = 1'd0;
wire cntrl_we;
wire [511:0] cntrl_dat_w;
reg enable_storage_full = 1'd0;
wire enable_storage;
reg enable_re = 1'd0;
reg [1:0] subfragments_litepcietlpdepacketizer_state = 2'd0;
reg [1:0] subfragments_litepcietlpdepacketizer_next_state = 2'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_count_litepcietlpdepacketizer_next_value2 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_count_litepcietlpdepacketizer_next_value_ce2 = 1'd0;
reg [31:0] subfragments_litepcietlpdepacketizer_next_value0 = 32'd0;
reg subfragments_litepcietlpdepacketizer_next_value_ce0 = 1'd0;
reg [31:0] subfragments_litepcietlpdepacketizer_next_value1 = 32'd0;
reg subfragments_litepcietlpdepacketizer_next_value_ce1 = 1'd0;
reg [31:0] subfragments_litepcietlpdepacketizer_next_value2 = 32'd0;
reg subfragments_litepcietlpdepacketizer_next_value_ce2 = 1'd0;
reg [31:0] subfragments_litepcietlpdepacketizer_next_value3 = 32'd0;
reg subfragments_litepcietlpdepacketizer_next_value_ce3 = 1'd0;
reg [1:0] subfragments_litepcietlppacketizer_state = 2'd0;
reg [1:0] subfragments_litepcietlppacketizer_next_state = 2'd0;
wire subfragments_sel;
reg subfragments_master_in_sink_valid = 1'd0;
reg subfragments_master_in_sink_ready = 1'd0;
reg subfragments_master_in_sink_first = 1'd0;
reg subfragments_master_in_sink_last = 1'd0;
reg subfragments_master_in_sink_payload_we = 1'd0;
reg [31:0] subfragments_master_in_sink_payload_adr = 32'd0;
reg [9:0] subfragments_master_in_sink_payload_len = 10'd0;
reg [15:0] subfragments_master_in_sink_payload_req_id = 16'd0;
reg [7:0] subfragments_master_in_sink_payload_tag = 8'd0;
reg [63:0] subfragments_master_in_sink_payload_dat = 64'd0;
reg [7:0] subfragments_master_in_sink_payload_channel = 8'd0;
reg [7:0] subfragments_master_in_sink_payload_user_id = 8'd0;
wire subfragments_master_in_source_valid;
reg subfragments_master_in_source_ready = 1'd0;
wire subfragments_master_in_source_first;
wire subfragments_master_in_source_last;
wire [31:0] subfragments_master_in_source_payload_adr;
wire [9:0] subfragments_master_in_source_payload_len;
wire subfragments_master_in_source_payload_end;
wire [15:0] subfragments_master_in_source_payload_req_id;
wire [15:0] subfragments_master_in_source_payload_cmp_id;
wire subfragments_master_in_source_payload_err;
wire [7:0] subfragments_master_in_source_payload_tag;
wire [63:0] subfragments_master_in_source_payload_dat;
wire [7:0] subfragments_master_in_source_payload_channel;
wire [7:0] subfragments_master_in_source_payload_user_id;
reg subfragments_master_out_sink_valid = 1'd0;
reg subfragments_master_out_sink_ready = 1'd0;
wire subfragments_master_out_sink_first;
wire subfragments_master_out_sink_last;
wire subfragments_master_out_sink_payload_we;
wire [31:0] subfragments_master_out_sink_payload_adr;
wire [9:0] subfragments_master_out_sink_payload_len;
wire [15:0] subfragments_master_out_sink_payload_req_id;
reg [7:0] subfragments_master_out_sink_payload_tag = 8'd0;
wire [63:0] subfragments_master_out_sink_payload_dat;
wire [7:0] subfragments_master_out_sink_payload_channel;
wire [7:0] subfragments_master_out_sink_payload_user_id;
wire subfragments_master_out_source_valid;
reg subfragments_master_out_source_ready = 1'd0;
wire subfragments_master_out_source_first;
wire subfragments_master_out_source_last;
wire [31:0] subfragments_master_out_source_payload_adr;
wire [9:0] subfragments_master_out_source_payload_len;
wire subfragments_master_out_source_payload_end;
wire [15:0] subfragments_master_out_source_payload_req_id;
wire [15:0] subfragments_master_out_source_payload_cmp_id;
wire subfragments_master_out_source_payload_err;
wire [7:0] subfragments_master_out_source_payload_tag;
wire [63:0] subfragments_master_out_source_payload_dat;
wire [7:0] subfragments_master_out_source_payload_channel;
wire [7:0] subfragments_master_out_source_payload_user_id;
reg subfragments_tags_sink_valid0 = 1'd0;
wire subfragments_tags_sink_ready0;
reg subfragments_tags_sink_first0 = 1'd0;
reg subfragments_tags_sink_last0 = 1'd0;
reg [1:0] subfragments_tags_sink_payload_data0 = 2'd0;
wire subfragments_tags_source_valid0;
reg subfragments_tags_source_ready0 = 1'd0;
wire subfragments_tags_source_first0;
wire subfragments_tags_source_last0;
wire [1:0] subfragments_tags_source_payload_data0;
wire subfragments_tags_re0;
reg subfragments_tags_readable0 = 1'd0;
wire subfragments_tags_syncfifo_we0;
wire subfragments_tags_syncfifo_writable0;
wire subfragments_tags_syncfifo_re0;
wire subfragments_tags_syncfifo_readable0;
wire [3:0] subfragments_tags_syncfifo_din0;
wire [3:0] subfragments_tags_syncfifo_dout0;
reg [2:0] subfragments_tags_level0 = 3'd0;
reg subfragments_tags_replace0 = 1'd0;
reg [1:0] subfragments_tags_produce0 = 2'd0;
reg [1:0] subfragments_tags_consume0 = 2'd0;
reg [1:0] subfragments_tags_wrport_adr0 = 2'd0;
wire [3:0] subfragments_tags_wrport_dat_r0;
wire subfragments_tags_wrport_we0;
wire [3:0] subfragments_tags_wrport_dat_w0;
wire subfragments_tags_do_read0;
wire [1:0] subfragments_tags_rdport_adr0;
wire [3:0] subfragments_tags_rdport_dat_r0;
wire subfragments_tags_rdport_re0;
wire [2:0] subfragments_tags_level1;
wire [1:0] subfragments_tags_fifo_in_payload_data0;
wire subfragments_tags_fifo_in_first0;
wire subfragments_tags_fifo_in_last0;
wire [1:0] subfragments_tags_fifo_out_payload_data0;
wire subfragments_tags_fifo_out_first0;
wire subfragments_tags_fifo_out_last0;
wire [1:0] subfragments_info_mem_wr_port_adr;
wire [15:0] subfragments_info_mem_wr_port_dat_r;
reg subfragments_info_mem_wr_port_we = 1'd0;
reg [15:0] subfragments_info_mem_wr_port_dat_w = 16'd0;
wire [1:0] subfragments_info_mem_rd_port_adr;
wire [15:0] subfragments_info_mem_rd_port_dat_r;
reg subfragments_sink_sink_valid = 1'd0;
reg subfragments_sink_sink_ready = 1'd0;
wire subfragments_sink_sink_first;
wire subfragments_sink_sink_last;
wire [31:0] subfragments_sink_sink_payload_adr;
wire [9:0] subfragments_sink_sink_payload_len;
wire subfragments_sink_sink_payload_end;
wire [15:0] subfragments_sink_sink_payload_req_id;
wire [15:0] subfragments_sink_sink_payload_cmp_id;
wire subfragments_sink_sink_payload_err;
wire [7:0] subfragments_sink_sink_payload_tag;
wire [63:0] subfragments_sink_sink_payload_dat;
reg [7:0] subfragments_sink_sink_payload_channel = 8'd0;
reg [7:0] subfragments_sink_sink_payload_user_id = 8'd0;
reg subfragments_source_source_valid = 1'd0;
wire subfragments_source_source_ready;
reg subfragments_source_source_first = 1'd0;
reg subfragments_source_source_last = 1'd0;
reg [31:0] subfragments_source_source_payload_adr = 32'd0;
reg [9:0] subfragments_source_source_payload_len = 10'd0;
reg subfragments_source_source_payload_end = 1'd0;
reg [15:0] subfragments_source_source_payload_req_id = 16'd0;
reg [15:0] subfragments_source_source_payload_cmp_id = 16'd0;
reg subfragments_source_source_payload_err = 1'd0;
reg [7:0] subfragments_source_source_payload_tag = 8'd0;
reg [63:0] subfragments_source_source_payload_dat = 64'd0;
reg [7:0] subfragments_source_source_payload_channel = 8'd0;
reg [7:0] subfragments_source_source_payload_user_id = 8'd0;
wire subfragments_tag_valid;
wire subfragments_tag_ready;
reg subfragments_tag_first = 1'd0;
reg subfragments_tag_last = 1'd0;
wire [1:0] subfragments_tag_payload_data;
wire subfragments_tags_sink_valid1;
wire subfragments_tags_sink_ready1;
wire subfragments_tags_sink_first1;
wire subfragments_tags_sink_last1;
wire [1:0] subfragments_tags_sink_payload_data1;
wire subfragments_tags_source_valid1;
reg subfragments_tags_source_ready1 = 1'd0;
wire subfragments_tags_source_first1;
wire subfragments_tags_source_last1;
wire [1:0] subfragments_tags_source_payload_data1;
wire subfragments_tags_re1;
reg subfragments_tags_readable1 = 1'd0;
wire subfragments_tags_syncfifo_we1;
wire subfragments_tags_syncfifo_writable1;
wire subfragments_tags_syncfifo_re1;
wire subfragments_tags_syncfifo_readable1;
wire [3:0] subfragments_tags_syncfifo_din1;
wire [3:0] subfragments_tags_syncfifo_dout1;
reg [5:0] subfragments_tags_level2 = 6'd0;
reg subfragments_tags_replace1 = 1'd0;
reg [4:0] subfragments_tags_produce1 = 5'd0;
reg [4:0] subfragments_tags_consume1 = 5'd0;
reg [4:0] subfragments_tags_wrport_adr1 = 5'd0;
wire [3:0] subfragments_tags_wrport_dat_r1;
wire subfragments_tags_wrport_we1;
wire [3:0] subfragments_tags_wrport_dat_w1;
wire subfragments_tags_do_read1;
wire [4:0] subfragments_tags_rdport_adr1;
wire [3:0] subfragments_tags_rdport_dat_r1;
wire subfragments_tags_rdport_re1;
wire [5:0] subfragments_tags_level3;
wire [1:0] subfragments_tags_fifo_in_payload_data1;
wire subfragments_tags_fifo_in_first1;
wire subfragments_tags_fifo_in_last1;
wire [1:0] subfragments_tags_fifo_out_payload_data1;
wire subfragments_tags_fifo_out_first1;
wire subfragments_tags_fifo_out_last1;
reg subfragments_syncfifo0_sink_valid = 1'd0;
wire subfragments_syncfifo0_sink_ready;
reg subfragments_syncfifo0_sink_first = 1'd0;
reg subfragments_syncfifo0_sink_last = 1'd0;
reg [31:0] subfragments_syncfifo0_sink_payload_adr = 32'd0;
reg [9:0] subfragments_syncfifo0_sink_payload_len = 10'd0;
reg subfragments_syncfifo0_sink_payload_end = 1'd0;
reg [15:0] subfragments_syncfifo0_sink_payload_req_id = 16'd0;
reg [15:0] subfragments_syncfifo0_sink_payload_cmp_id = 16'd0;
reg subfragments_syncfifo0_sink_payload_err = 1'd0;
reg [7:0] subfragments_syncfifo0_sink_payload_tag = 8'd0;
reg [63:0] subfragments_syncfifo0_sink_payload_dat = 64'd0;
reg [7:0] subfragments_syncfifo0_sink_payload_channel = 8'd0;
reg [7:0] subfragments_syncfifo0_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo0_source_valid;
reg subfragments_syncfifo0_source_ready = 1'd0;
wire subfragments_syncfifo0_source_first;
wire subfragments_syncfifo0_source_last;
wire [31:0] subfragments_syncfifo0_source_payload_adr;
wire [9:0] subfragments_syncfifo0_source_payload_len;
wire subfragments_syncfifo0_source_payload_end;
wire [15:0] subfragments_syncfifo0_source_payload_req_id;
wire [15:0] subfragments_syncfifo0_source_payload_cmp_id;
wire subfragments_syncfifo0_source_payload_err;
wire [7:0] subfragments_syncfifo0_source_payload_tag;
wire [63:0] subfragments_syncfifo0_source_payload_dat;
wire [7:0] subfragments_syncfifo0_source_payload_channel;
wire [7:0] subfragments_syncfifo0_source_payload_user_id;
wire subfragments_syncfifo0_re;
reg subfragments_syncfifo0_readable = 1'd0;
wire subfragments_syncfifo0_syncfifo0_we;
wire subfragments_syncfifo0_syncfifo0_writable;
wire subfragments_syncfifo0_syncfifo0_re;
wire subfragments_syncfifo0_syncfifo0_readable;
wire [165:0] subfragments_syncfifo0_syncfifo0_din;
wire [165:0] subfragments_syncfifo0_syncfifo0_dout;
reg [9:0] subfragments_syncfifo0_level0 = 10'd0;
reg subfragments_syncfifo0_replace = 1'd0;
reg [8:0] subfragments_syncfifo0_produce = 9'd0;
reg [8:0] subfragments_syncfifo0_consume = 9'd0;
reg [8:0] subfragments_syncfifo0_wrport_adr = 9'd0;
wire [165:0] subfragments_syncfifo0_wrport_dat_r;
wire subfragments_syncfifo0_wrport_we;
wire [165:0] subfragments_syncfifo0_wrport_dat_w;
wire subfragments_syncfifo0_do_read;
wire [8:0] subfragments_syncfifo0_rdport_adr;
wire [165:0] subfragments_syncfifo0_rdport_dat_r;
wire subfragments_syncfifo0_rdport_re;
wire [9:0] subfragments_syncfifo0_level1;
wire [31:0] subfragments_syncfifo0_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo0_fifo_in_payload_len;
wire subfragments_syncfifo0_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo0_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo0_fifo_in_payload_cmp_id;
wire subfragments_syncfifo0_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo0_fifo_in_payload_tag;
wire [63:0] subfragments_syncfifo0_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo0_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo0_fifo_in_payload_user_id;
wire subfragments_syncfifo0_fifo_in_first;
wire subfragments_syncfifo0_fifo_in_last;
wire [31:0] subfragments_syncfifo0_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo0_fifo_out_payload_len;
wire subfragments_syncfifo0_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo0_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo0_fifo_out_payload_cmp_id;
wire subfragments_syncfifo0_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo0_fifo_out_payload_tag;
wire [63:0] subfragments_syncfifo0_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo0_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo0_fifo_out_payload_user_id;
wire subfragments_syncfifo0_fifo_out_first;
wire subfragments_syncfifo0_fifo_out_last;
reg subfragments_syncfifo1_sink_valid = 1'd0;
wire subfragments_syncfifo1_sink_ready;
reg subfragments_syncfifo1_sink_first = 1'd0;
reg subfragments_syncfifo1_sink_last = 1'd0;
reg [31:0] subfragments_syncfifo1_sink_payload_adr = 32'd0;
reg [9:0] subfragments_syncfifo1_sink_payload_len = 10'd0;
reg subfragments_syncfifo1_sink_payload_end = 1'd0;
reg [15:0] subfragments_syncfifo1_sink_payload_req_id = 16'd0;
reg [15:0] subfragments_syncfifo1_sink_payload_cmp_id = 16'd0;
reg subfragments_syncfifo1_sink_payload_err = 1'd0;
reg [7:0] subfragments_syncfifo1_sink_payload_tag = 8'd0;
reg [63:0] subfragments_syncfifo1_sink_payload_dat = 64'd0;
reg [7:0] subfragments_syncfifo1_sink_payload_channel = 8'd0;
reg [7:0] subfragments_syncfifo1_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo1_source_valid;
reg subfragments_syncfifo1_source_ready = 1'd0;
wire subfragments_syncfifo1_source_first;
wire subfragments_syncfifo1_source_last;
wire [31:0] subfragments_syncfifo1_source_payload_adr;
wire [9:0] subfragments_syncfifo1_source_payload_len;
wire subfragments_syncfifo1_source_payload_end;
wire [15:0] subfragments_syncfifo1_source_payload_req_id;
wire [15:0] subfragments_syncfifo1_source_payload_cmp_id;
wire subfragments_syncfifo1_source_payload_err;
wire [7:0] subfragments_syncfifo1_source_payload_tag;
wire [63:0] subfragments_syncfifo1_source_payload_dat;
wire [7:0] subfragments_syncfifo1_source_payload_channel;
wire [7:0] subfragments_syncfifo1_source_payload_user_id;
wire subfragments_syncfifo1_re;
reg subfragments_syncfifo1_readable = 1'd0;
wire subfragments_syncfifo1_syncfifo1_we;
wire subfragments_syncfifo1_syncfifo1_writable;
wire subfragments_syncfifo1_syncfifo1_re;
wire subfragments_syncfifo1_syncfifo1_readable;
wire [165:0] subfragments_syncfifo1_syncfifo1_din;
wire [165:0] subfragments_syncfifo1_syncfifo1_dout;
reg [9:0] subfragments_syncfifo1_level0 = 10'd0;
reg subfragments_syncfifo1_replace = 1'd0;
reg [8:0] subfragments_syncfifo1_produce = 9'd0;
reg [8:0] subfragments_syncfifo1_consume = 9'd0;
reg [8:0] subfragments_syncfifo1_wrport_adr = 9'd0;
wire [165:0] subfragments_syncfifo1_wrport_dat_r;
wire subfragments_syncfifo1_wrport_we;
wire [165:0] subfragments_syncfifo1_wrport_dat_w;
wire subfragments_syncfifo1_do_read;
wire [8:0] subfragments_syncfifo1_rdport_adr;
wire [165:0] subfragments_syncfifo1_rdport_dat_r;
wire subfragments_syncfifo1_rdport_re;
wire [9:0] subfragments_syncfifo1_level1;
wire [31:0] subfragments_syncfifo1_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo1_fifo_in_payload_len;
wire subfragments_syncfifo1_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo1_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo1_fifo_in_payload_cmp_id;
wire subfragments_syncfifo1_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo1_fifo_in_payload_tag;
wire [63:0] subfragments_syncfifo1_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo1_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo1_fifo_in_payload_user_id;
wire subfragments_syncfifo1_fifo_in_first;
wire subfragments_syncfifo1_fifo_in_last;
wire [31:0] subfragments_syncfifo1_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo1_fifo_out_payload_len;
wire subfragments_syncfifo1_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo1_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo1_fifo_out_payload_cmp_id;
wire subfragments_syncfifo1_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo1_fifo_out_payload_tag;
wire [63:0] subfragments_syncfifo1_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo1_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo1_fifo_out_payload_user_id;
wire subfragments_syncfifo1_fifo_out_first;
wire subfragments_syncfifo1_fifo_out_last;
reg subfragments_syncfifo2_sink_valid = 1'd0;
wire subfragments_syncfifo2_sink_ready;
reg subfragments_syncfifo2_sink_first = 1'd0;
reg subfragments_syncfifo2_sink_last = 1'd0;
reg [31:0] subfragments_syncfifo2_sink_payload_adr = 32'd0;
reg [9:0] subfragments_syncfifo2_sink_payload_len = 10'd0;
reg subfragments_syncfifo2_sink_payload_end = 1'd0;
reg [15:0] subfragments_syncfifo2_sink_payload_req_id = 16'd0;
reg [15:0] subfragments_syncfifo2_sink_payload_cmp_id = 16'd0;
reg subfragments_syncfifo2_sink_payload_err = 1'd0;
reg [7:0] subfragments_syncfifo2_sink_payload_tag = 8'd0;
reg [63:0] subfragments_syncfifo2_sink_payload_dat = 64'd0;
reg [7:0] subfragments_syncfifo2_sink_payload_channel = 8'd0;
reg [7:0] subfragments_syncfifo2_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo2_source_valid;
reg subfragments_syncfifo2_source_ready = 1'd0;
wire subfragments_syncfifo2_source_first;
wire subfragments_syncfifo2_source_last;
wire [31:0] subfragments_syncfifo2_source_payload_adr;
wire [9:0] subfragments_syncfifo2_source_payload_len;
wire subfragments_syncfifo2_source_payload_end;
wire [15:0] subfragments_syncfifo2_source_payload_req_id;
wire [15:0] subfragments_syncfifo2_source_payload_cmp_id;
wire subfragments_syncfifo2_source_payload_err;
wire [7:0] subfragments_syncfifo2_source_payload_tag;
wire [63:0] subfragments_syncfifo2_source_payload_dat;
wire [7:0] subfragments_syncfifo2_source_payload_channel;
wire [7:0] subfragments_syncfifo2_source_payload_user_id;
wire subfragments_syncfifo2_re;
reg subfragments_syncfifo2_readable = 1'd0;
wire subfragments_syncfifo2_syncfifo2_we;
wire subfragments_syncfifo2_syncfifo2_writable;
wire subfragments_syncfifo2_syncfifo2_re;
wire subfragments_syncfifo2_syncfifo2_readable;
wire [165:0] subfragments_syncfifo2_syncfifo2_din;
wire [165:0] subfragments_syncfifo2_syncfifo2_dout;
reg [9:0] subfragments_syncfifo2_level0 = 10'd0;
reg subfragments_syncfifo2_replace = 1'd0;
reg [8:0] subfragments_syncfifo2_produce = 9'd0;
reg [8:0] subfragments_syncfifo2_consume = 9'd0;
reg [8:0] subfragments_syncfifo2_wrport_adr = 9'd0;
wire [165:0] subfragments_syncfifo2_wrport_dat_r;
wire subfragments_syncfifo2_wrport_we;
wire [165:0] subfragments_syncfifo2_wrport_dat_w;
wire subfragments_syncfifo2_do_read;
wire [8:0] subfragments_syncfifo2_rdport_adr;
wire [165:0] subfragments_syncfifo2_rdport_dat_r;
wire subfragments_syncfifo2_rdport_re;
wire [9:0] subfragments_syncfifo2_level1;
wire [31:0] subfragments_syncfifo2_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo2_fifo_in_payload_len;
wire subfragments_syncfifo2_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo2_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo2_fifo_in_payload_cmp_id;
wire subfragments_syncfifo2_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo2_fifo_in_payload_tag;
wire [63:0] subfragments_syncfifo2_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo2_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo2_fifo_in_payload_user_id;
wire subfragments_syncfifo2_fifo_in_first;
wire subfragments_syncfifo2_fifo_in_last;
wire [31:0] subfragments_syncfifo2_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo2_fifo_out_payload_len;
wire subfragments_syncfifo2_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo2_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo2_fifo_out_payload_cmp_id;
wire subfragments_syncfifo2_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo2_fifo_out_payload_tag;
wire [63:0] subfragments_syncfifo2_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo2_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo2_fifo_out_payload_user_id;
wire subfragments_syncfifo2_fifo_out_first;
wire subfragments_syncfifo2_fifo_out_last;
reg subfragments_syncfifo3_sink_valid = 1'd0;
wire subfragments_syncfifo3_sink_ready;
reg subfragments_syncfifo3_sink_first = 1'd0;
reg subfragments_syncfifo3_sink_last = 1'd0;
reg [31:0] subfragments_syncfifo3_sink_payload_adr = 32'd0;
reg [9:0] subfragments_syncfifo3_sink_payload_len = 10'd0;
reg subfragments_syncfifo3_sink_payload_end = 1'd0;
reg [15:0] subfragments_syncfifo3_sink_payload_req_id = 16'd0;
reg [15:0] subfragments_syncfifo3_sink_payload_cmp_id = 16'd0;
reg subfragments_syncfifo3_sink_payload_err = 1'd0;
reg [7:0] subfragments_syncfifo3_sink_payload_tag = 8'd0;
reg [63:0] subfragments_syncfifo3_sink_payload_dat = 64'd0;
reg [7:0] subfragments_syncfifo3_sink_payload_channel = 8'd0;
reg [7:0] subfragments_syncfifo3_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo3_source_valid;
reg subfragments_syncfifo3_source_ready = 1'd0;
wire subfragments_syncfifo3_source_first;
wire subfragments_syncfifo3_source_last;
wire [31:0] subfragments_syncfifo3_source_payload_adr;
wire [9:0] subfragments_syncfifo3_source_payload_len;
wire subfragments_syncfifo3_source_payload_end;
wire [15:0] subfragments_syncfifo3_source_payload_req_id;
wire [15:0] subfragments_syncfifo3_source_payload_cmp_id;
wire subfragments_syncfifo3_source_payload_err;
wire [7:0] subfragments_syncfifo3_source_payload_tag;
wire [63:0] subfragments_syncfifo3_source_payload_dat;
wire [7:0] subfragments_syncfifo3_source_payload_channel;
wire [7:0] subfragments_syncfifo3_source_payload_user_id;
wire subfragments_syncfifo3_re;
reg subfragments_syncfifo3_readable = 1'd0;
wire subfragments_syncfifo3_syncfifo3_we;
wire subfragments_syncfifo3_syncfifo3_writable;
wire subfragments_syncfifo3_syncfifo3_re;
wire subfragments_syncfifo3_syncfifo3_readable;
wire [165:0] subfragments_syncfifo3_syncfifo3_din;
wire [165:0] subfragments_syncfifo3_syncfifo3_dout;
reg [9:0] subfragments_syncfifo3_level0 = 10'd0;
reg subfragments_syncfifo3_replace = 1'd0;
reg [8:0] subfragments_syncfifo3_produce = 9'd0;
reg [8:0] subfragments_syncfifo3_consume = 9'd0;
reg [8:0] subfragments_syncfifo3_wrport_adr = 9'd0;
wire [165:0] subfragments_syncfifo3_wrport_dat_r;
wire subfragments_syncfifo3_wrport_we;
wire [165:0] subfragments_syncfifo3_wrport_dat_w;
wire subfragments_syncfifo3_do_read;
wire [8:0] subfragments_syncfifo3_rdport_adr;
wire [165:0] subfragments_syncfifo3_rdport_dat_r;
wire subfragments_syncfifo3_rdport_re;
wire [9:0] subfragments_syncfifo3_level1;
wire [31:0] subfragments_syncfifo3_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo3_fifo_in_payload_len;
wire subfragments_syncfifo3_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo3_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo3_fifo_in_payload_cmp_id;
wire subfragments_syncfifo3_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo3_fifo_in_payload_tag;
wire [63:0] subfragments_syncfifo3_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo3_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo3_fifo_in_payload_user_id;
wire subfragments_syncfifo3_fifo_in_first;
wire subfragments_syncfifo3_fifo_in_last;
wire [31:0] subfragments_syncfifo3_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo3_fifo_out_payload_len;
wire subfragments_syncfifo3_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo3_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo3_fifo_out_payload_cmp_id;
wire subfragments_syncfifo3_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo3_fifo_out_payload_tag;
wire [63:0] subfragments_syncfifo3_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo3_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo3_fifo_out_payload_user_id;
wire subfragments_syncfifo3_fifo_out_first;
wire subfragments_syncfifo3_fifo_out_last;
reg [1:0] subfragments_tag_init = 2'd0;
reg [2:0] subfragments_arbiter0_request = 3'd0;
reg [1:0] subfragments_arbiter0_grant = 2'd0;
reg subfragments_arbiter0_status0_first = 1'd1;
reg subfragments_arbiter0_status0_last = 1'd0;
wire subfragments_arbiter0_status0_ongoing0;
reg subfragments_arbiter0_status0_ongoing1 = 1'd0;
reg subfragments_arbiter0_status1_first = 1'd1;
reg subfragments_arbiter0_status1_last = 1'd0;
wire subfragments_arbiter0_status1_ongoing0;
reg subfragments_arbiter0_status1_ongoing1 = 1'd0;
reg subfragments_arbiter0_status2_first = 1'd1;
reg subfragments_arbiter0_status2_last = 1'd0;
wire subfragments_arbiter0_status2_ongoing0;
reg subfragments_arbiter0_status2_ongoing1 = 1'd0;
reg [2:0] subfragments_dispatcher0_sel0 = 3'd0;
reg subfragments_dispatcher0_first = 1'd1;
reg subfragments_dispatcher0_last = 1'd0;
wire subfragments_dispatcher0_ongoing0;
reg subfragments_dispatcher0_ongoing1 = 1'd0;
reg [2:0] subfragments_dispatcher0_sel1 = 3'd0;
reg [2:0] subfragments_dispatcher0_sel_ongoing = 3'd0;
reg subfragments_sink_valid = 1'd0;
reg subfragments_sink_ready = 1'd0;
reg subfragments_sink_first = 1'd0;
reg subfragments_sink_last = 1'd0;
reg subfragments_sink_payload_we = 1'd0;
reg [31:0] subfragments_sink_payload_adr = 32'd0;
reg [9:0] subfragments_sink_payload_len = 10'd0;
reg [15:0] subfragments_sink_payload_req_id = 16'd0;
reg [7:0] subfragments_sink_payload_tag = 8'd0;
reg [63:0] subfragments_sink_payload_dat = 64'd0;
reg [7:0] subfragments_sink_payload_channel = 8'd0;
reg [7:0] subfragments_sink_payload_user_id = 8'd0;
reg subfragments_source_valid = 1'd0;
reg subfragments_source_ready = 1'd0;
reg subfragments_source_first = 1'd0;
reg subfragments_source_last = 1'd0;
reg [31:0] subfragments_source_payload_adr = 32'd0;
reg [9:0] subfragments_source_payload_len = 10'd0;
reg subfragments_source_payload_end = 1'd0;
reg [15:0] subfragments_source_payload_req_id = 16'd0;
reg [15:0] subfragments_source_payload_cmp_id = 16'd0;
reg subfragments_source_payload_err = 1'd0;
reg [7:0] subfragments_source_payload_tag = 8'd0;
reg [63:0] subfragments_source_payload_dat = 64'd0;
reg [7:0] subfragments_source_payload_channel = 8'd0;
reg [7:0] subfragments_source_payload_user_id = 8'd0;
reg [2:0] subfragments_arbiter1_request = 3'd0;
reg [1:0] subfragments_arbiter1_grant = 2'd0;
reg subfragments_arbiter1_status3_first = 1'd1;
reg subfragments_arbiter1_status3_last = 1'd0;
wire subfragments_arbiter1_status3_ongoing0;
reg subfragments_arbiter1_status3_ongoing1 = 1'd0;
reg subfragments_arbiter1_status4_first = 1'd1;
reg subfragments_arbiter1_status4_last = 1'd0;
wire subfragments_arbiter1_status4_ongoing0;
reg subfragments_arbiter1_status4_ongoing1 = 1'd0;
reg subfragments_arbiter1_status5_first = 1'd1;
reg subfragments_arbiter1_status5_last = 1'd0;
wire subfragments_arbiter1_status5_ongoing0;
reg subfragments_arbiter1_status5_ongoing1 = 1'd0;
reg [2:0] subfragments_dispatcher1_sel0 = 3'd0;
reg subfragments_dispatcher1_first = 1'd1;
reg subfragments_dispatcher1_last = 1'd0;
wire subfragments_dispatcher1_ongoing0;
reg subfragments_dispatcher1_ongoing1 = 1'd0;
reg [2:0] subfragments_dispatcher1_sel1 = 3'd0;
reg [2:0] subfragments_dispatcher1_sel_ongoing = 3'd0;
reg [1:0] subfragments_arbiter2_request = 2'd0;
reg subfragments_arbiter2_grant = 1'd0;
reg subfragments_arbiter2_status6_first = 1'd1;
reg subfragments_arbiter2_status6_last = 1'd0;
wire subfragments_arbiter2_status6_ongoing0;
reg subfragments_arbiter2_status6_ongoing1 = 1'd0;
reg subfragments_arbiter2_status7_first = 1'd1;
reg subfragments_arbiter2_status7_last = 1'd0;
wire subfragments_arbiter2_status7_ongoing0;
reg subfragments_arbiter2_status7_ongoing1 = 1'd0;
reg [1:0] subfragments_fsm0_state0 = 2'd0;
reg [1:0] subfragments_fsm0_next_state0 = 2'd0;
reg [1:0] subfragments_fsm1_state0 = 2'd0;
reg [1:0] subfragments_fsm1_next_state0 = 2'd0;
reg [1:0] subfragments_tag_init_litepciecrossbar_next_value = 2'd0;
reg subfragments_tag_init_litepciecrossbar_next_value_ce = 1'd0;
reg [2:0] subfragments_state = 3'd0;
reg [2:0] subfragments_next_state = 3'd0;
reg [1:0] subfragments_bufferizeendpoints0_state0 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints0_next_state0 = 2'd0;
reg subfragments_fsm0_state1 = 1'd0;
reg subfragments_fsm0_next_state1 = 1'd0;
reg [1:0] subfragments_bufferizeendpoints0_state1 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints0_next_state1 = 2'd0;
reg subfragments_fsm0_state2 = 1'd0;
reg subfragments_fsm0_next_state2 = 1'd0;
reg [1:0] subfragments_bufferizeendpoints1_state0 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints1_next_state0 = 2'd0;
reg subfragments_fsm1_state1 = 1'd0;
reg subfragments_fsm1_next_state1 = 1'd0;
reg [1:0] subfragments_bufferizeendpoints1_state1 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints1_next_state1 = 2'd0;
reg subfragments_fsm1_state2 = 1'd0;
reg subfragments_fsm1_next_state2 = 1'd0;
reg [1:0] subfragments_bufferizeendpoints2_state0 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints2_next_state0 = 2'd0;
reg subfragments_fsm2_state0 = 1'd0;
reg subfragments_fsm2_next_state0 = 1'd0;
reg [1:0] subfragments_bufferizeendpoints2_state1 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints2_next_state1 = 2'd0;
reg subfragments_fsm2_state1 = 1'd0;
reg subfragments_fsm2_next_state1 = 1'd0;
wire [29:0] litepciecore_shared_adr;
wire [31:0] litepciecore_shared_dat_w;
reg [31:0] litepciecore_shared_dat_r = 32'd0;
wire [3:0] litepciecore_shared_sel;
wire litepciecore_shared_cyc;
wire litepciecore_shared_stb;
reg litepciecore_shared_ack = 1'd0;
wire litepciecore_shared_we;
wire [2:0] litepciecore_shared_cti;
wire [1:0] litepciecore_shared_bte;
wire litepciecore_shared_err;
wire litepciecore_request;
wire litepciecore_grant;
reg [1:0] litepciecore_slave_sel = 2'd0;
reg [1:0] litepciecore_slave_sel_r = 2'd0;
reg litepciecore_error = 1'd0;
wire litepciecore_wait;
wire litepciecore_done;
reg [19:0] litepciecore_count = 20'd1000000;
wire [13:0] litepciecore_interface0_bank_bus_adr;
wire litepciecore_interface0_bank_bus_we;
wire [31:0] litepciecore_interface0_bank_bus_dat_w;
reg [31:0] litepciecore_interface0_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank0_cntrl15_re;
wire [31:0] litepciecore_csrbank0_cntrl15_r;
wire [31:0] litepciecore_csrbank0_cntrl15_w;
wire litepciecore_csrbank0_cntrl14_re;
wire [31:0] litepciecore_csrbank0_cntrl14_r;
wire [31:0] litepciecore_csrbank0_cntrl14_w;
wire litepciecore_csrbank0_cntrl13_re;
wire [31:0] litepciecore_csrbank0_cntrl13_r;
wire [31:0] litepciecore_csrbank0_cntrl13_w;
wire litepciecore_csrbank0_cntrl12_re;
wire [31:0] litepciecore_csrbank0_cntrl12_r;
wire [31:0] litepciecore_csrbank0_cntrl12_w;
wire litepciecore_csrbank0_cntrl11_re;
wire [31:0] litepciecore_csrbank0_cntrl11_r;
wire [31:0] litepciecore_csrbank0_cntrl11_w;
wire litepciecore_csrbank0_cntrl10_re;
wire [31:0] litepciecore_csrbank0_cntrl10_r;
wire [31:0] litepciecore_csrbank0_cntrl10_w;
wire litepciecore_csrbank0_cntrl9_re;
wire [31:0] litepciecore_csrbank0_cntrl9_r;
wire [31:0] litepciecore_csrbank0_cntrl9_w;
wire litepciecore_csrbank0_cntrl8_re;
wire [31:0] litepciecore_csrbank0_cntrl8_r;
wire [31:0] litepciecore_csrbank0_cntrl8_w;
wire litepciecore_csrbank0_cntrl7_re;
wire [31:0] litepciecore_csrbank0_cntrl7_r;
wire [31:0] litepciecore_csrbank0_cntrl7_w;
wire litepciecore_csrbank0_cntrl6_re;
wire [31:0] litepciecore_csrbank0_cntrl6_r;
wire [31:0] litepciecore_csrbank0_cntrl6_w;
wire litepciecore_csrbank0_cntrl5_re;
wire [31:0] litepciecore_csrbank0_cntrl5_r;
wire [31:0] litepciecore_csrbank0_cntrl5_w;
wire litepciecore_csrbank0_cntrl4_re;
wire [31:0] litepciecore_csrbank0_cntrl4_r;
wire [31:0] litepciecore_csrbank0_cntrl4_w;
wire litepciecore_csrbank0_cntrl3_re;
wire [31:0] litepciecore_csrbank0_cntrl3_r;
wire [31:0] litepciecore_csrbank0_cntrl3_w;
wire litepciecore_csrbank0_cntrl2_re;
wire [31:0] litepciecore_csrbank0_cntrl2_r;
wire [31:0] litepciecore_csrbank0_cntrl2_w;
wire litepciecore_csrbank0_cntrl1_re;
wire [31:0] litepciecore_csrbank0_cntrl1_r;
wire [31:0] litepciecore_csrbank0_cntrl1_w;
wire litepciecore_csrbank0_cntrl0_re;
wire [31:0] litepciecore_csrbank0_cntrl0_r;
wire [31:0] litepciecore_csrbank0_cntrl0_w;
wire litepciecore_csrbank0_enable0_re;
wire litepciecore_csrbank0_enable0_r;
wire litepciecore_csrbank0_enable0_w;
wire litepciecore_csrbank0_sel;
wire [13:0] litepciecore_interface1_bank_bus_adr;
wire litepciecore_interface1_bank_bus_we;
wire [31:0] litepciecore_interface1_bank_bus_dat_w;
reg [31:0] litepciecore_interface1_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank1_scratch0_re;
wire [31:0] litepciecore_csrbank1_scratch0_r;
wire [31:0] litepciecore_csrbank1_scratch0_w;
wire litepciecore_csrbank1_bus_errors_re;
wire [31:0] litepciecore_csrbank1_bus_errors_r;
wire [31:0] litepciecore_csrbank1_bus_errors_w;
wire litepciecore_csrbank1_sel;
wire [13:0] litepciecore_sram_bus_adr1;
wire litepciecore_sram_bus_we1;
wire [31:0] litepciecore_sram_bus_dat_w1;
reg [31:0] litepciecore_sram_bus_dat_r1 = 32'd0;
wire [5:0] litepciecore_adr;
wire [7:0] litepciecore_dat_r;
wire litepciecore_sel;
reg litepciecore_sel_r = 1'd0;
wire [13:0] litepciecore_interface2_bank_bus_adr;
wire litepciecore_interface2_bank_bus_we;
wire [31:0] litepciecore_interface2_bank_bus_dat_w;
reg [31:0] litepciecore_interface2_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank2_writer_enable0_re;
wire litepciecore_csrbank2_writer_enable0_r;
wire litepciecore_csrbank2_writer_enable0_w;
wire litepciecore_csrbank2_writer_sCounter0_re;
wire [31:0] litepciecore_csrbank2_writer_sCounter0_r;
wire [31:0] litepciecore_csrbank2_writer_sCounter0_w;
wire litepciecore_csrbank2_writer_table_value1_re;
wire [31:0] litepciecore_csrbank2_writer_table_value1_r;
wire [31:0] litepciecore_csrbank2_writer_table_value1_w;
wire litepciecore_csrbank2_writer_table_value0_re;
wire [31:0] litepciecore_csrbank2_writer_table_value0_r;
wire [31:0] litepciecore_csrbank2_writer_table_value0_w;
wire litepciecore_csrbank2_writer_table_loop_prog_n0_re;
wire litepciecore_csrbank2_writer_table_loop_prog_n0_r;
wire litepciecore_csrbank2_writer_table_loop_prog_n0_w;
wire litepciecore_csrbank2_writer_table_loop_status_re;
wire [15:0] litepciecore_csrbank2_writer_table_loop_status_r;
wire [15:0] litepciecore_csrbank2_writer_table_loop_status_w;
wire litepciecore_csrbank2_writer_table_level_re;
wire [7:0] litepciecore_csrbank2_writer_table_level_r;
wire [7:0] litepciecore_csrbank2_writer_table_level_w;
wire litepciecore_csrbank2_reader_enable0_re;
wire litepciecore_csrbank2_reader_enable0_r;
wire litepciecore_csrbank2_reader_enable0_w;
wire litepciecore_csrbank2_reader_sCounter0_re;
wire [15:0] litepciecore_csrbank2_reader_sCounter0_r;
wire [15:0] litepciecore_csrbank2_reader_sCounter0_w;
wire litepciecore_csrbank2_reader_table_value1_re;
wire [31:0] litepciecore_csrbank2_reader_table_value1_r;
wire [31:0] litepciecore_csrbank2_reader_table_value1_w;
wire litepciecore_csrbank2_reader_table_value0_re;
wire [31:0] litepciecore_csrbank2_reader_table_value0_r;
wire [31:0] litepciecore_csrbank2_reader_table_value0_w;
wire litepciecore_csrbank2_reader_table_loop_prog_n0_re;
wire litepciecore_csrbank2_reader_table_loop_prog_n0_r;
wire litepciecore_csrbank2_reader_table_loop_prog_n0_w;
wire litepciecore_csrbank2_reader_table_loop_status_re;
wire [15:0] litepciecore_csrbank2_reader_table_loop_status_r;
wire [15:0] litepciecore_csrbank2_reader_table_loop_status_w;
wire litepciecore_csrbank2_reader_table_level_re;
wire [7:0] litepciecore_csrbank2_reader_table_level_r;
wire [7:0] litepciecore_csrbank2_reader_table_level_w;
wire litepciecore_csrbank2_loopback_enable0_re;
wire litepciecore_csrbank2_loopback_enable0_r;
wire litepciecore_csrbank2_loopback_enable0_w;
wire litepciecore_csrbank2_sel;
wire [13:0] litepciecore_interface3_bank_bus_adr;
wire litepciecore_interface3_bank_bus_we;
wire [31:0] litepciecore_interface3_bank_bus_dat_w;
reg [31:0] litepciecore_interface3_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank3_writer_enable0_re;
wire litepciecore_csrbank3_writer_enable0_r;
wire litepciecore_csrbank3_writer_enable0_w;
wire litepciecore_csrbank3_writer_sCounter0_re;
wire [31:0] litepciecore_csrbank3_writer_sCounter0_r;
wire [31:0] litepciecore_csrbank3_writer_sCounter0_w;
wire litepciecore_csrbank3_writer_table_value1_re;
wire [31:0] litepciecore_csrbank3_writer_table_value1_r;
wire [31:0] litepciecore_csrbank3_writer_table_value1_w;
wire litepciecore_csrbank3_writer_table_value0_re;
wire [31:0] litepciecore_csrbank3_writer_table_value0_r;
wire [31:0] litepciecore_csrbank3_writer_table_value0_w;
wire litepciecore_csrbank3_writer_table_loop_prog_n0_re;
wire litepciecore_csrbank3_writer_table_loop_prog_n0_r;
wire litepciecore_csrbank3_writer_table_loop_prog_n0_w;
wire litepciecore_csrbank3_writer_table_loop_status_re;
wire [15:0] litepciecore_csrbank3_writer_table_loop_status_r;
wire [15:0] litepciecore_csrbank3_writer_table_loop_status_w;
wire litepciecore_csrbank3_writer_table_level_re;
wire [7:0] litepciecore_csrbank3_writer_table_level_r;
wire [7:0] litepciecore_csrbank3_writer_table_level_w;
wire litepciecore_csrbank3_reader_enable0_re;
wire litepciecore_csrbank3_reader_enable0_r;
wire litepciecore_csrbank3_reader_enable0_w;
wire litepciecore_csrbank3_reader_sCounter0_re;
wire [15:0] litepciecore_csrbank3_reader_sCounter0_r;
wire [15:0] litepciecore_csrbank3_reader_sCounter0_w;
wire litepciecore_csrbank3_reader_table_value1_re;
wire [31:0] litepciecore_csrbank3_reader_table_value1_r;
wire [31:0] litepciecore_csrbank3_reader_table_value1_w;
wire litepciecore_csrbank3_reader_table_value0_re;
wire [31:0] litepciecore_csrbank3_reader_table_value0_r;
wire [31:0] litepciecore_csrbank3_reader_table_value0_w;
wire litepciecore_csrbank3_reader_table_loop_prog_n0_re;
wire litepciecore_csrbank3_reader_table_loop_prog_n0_r;
wire litepciecore_csrbank3_reader_table_loop_prog_n0_w;
wire litepciecore_csrbank3_reader_table_loop_status_re;
wire [15:0] litepciecore_csrbank3_reader_table_loop_status_r;
wire [15:0] litepciecore_csrbank3_reader_table_loop_status_w;
wire litepciecore_csrbank3_reader_table_level_re;
wire [7:0] litepciecore_csrbank3_reader_table_level_r;
wire [7:0] litepciecore_csrbank3_reader_table_level_w;
wire litepciecore_csrbank3_loopback_enable0_re;
wire litepciecore_csrbank3_loopback_enable0_r;
wire litepciecore_csrbank3_loopback_enable0_w;
wire litepciecore_csrbank3_sel;
wire [13:0] litepciecore_interface4_bank_bus_adr;
wire litepciecore_interface4_bank_bus_we;
wire [31:0] litepciecore_interface4_bank_bus_dat_w;
reg [31:0] litepciecore_interface4_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank4_writer_enable0_re;
wire litepciecore_csrbank4_writer_enable0_r;
wire litepciecore_csrbank4_writer_enable0_w;
wire litepciecore_csrbank4_writer_sCounter0_re;
wire [31:0] litepciecore_csrbank4_writer_sCounter0_r;
wire [31:0] litepciecore_csrbank4_writer_sCounter0_w;
wire litepciecore_csrbank4_writer_table_value1_re;
wire [31:0] litepciecore_csrbank4_writer_table_value1_r;
wire [31:0] litepciecore_csrbank4_writer_table_value1_w;
wire litepciecore_csrbank4_writer_table_value0_re;
wire [31:0] litepciecore_csrbank4_writer_table_value0_r;
wire [31:0] litepciecore_csrbank4_writer_table_value0_w;
wire litepciecore_csrbank4_writer_table_loop_prog_n0_re;
wire litepciecore_csrbank4_writer_table_loop_prog_n0_r;
wire litepciecore_csrbank4_writer_table_loop_prog_n0_w;
wire litepciecore_csrbank4_writer_table_loop_status_re;
wire [15:0] litepciecore_csrbank4_writer_table_loop_status_r;
wire [15:0] litepciecore_csrbank4_writer_table_loop_status_w;
wire litepciecore_csrbank4_writer_table_level_re;
wire [7:0] litepciecore_csrbank4_writer_table_level_r;
wire [7:0] litepciecore_csrbank4_writer_table_level_w;
wire litepciecore_csrbank4_reader_enable0_re;
wire litepciecore_csrbank4_reader_enable0_r;
wire litepciecore_csrbank4_reader_enable0_w;
wire litepciecore_csrbank4_reader_sCounter0_re;
wire [15:0] litepciecore_csrbank4_reader_sCounter0_r;
wire [15:0] litepciecore_csrbank4_reader_sCounter0_w;
wire litepciecore_csrbank4_reader_table_value1_re;
wire [31:0] litepciecore_csrbank4_reader_table_value1_r;
wire [31:0] litepciecore_csrbank4_reader_table_value1_w;
wire litepciecore_csrbank4_reader_table_value0_re;
wire [31:0] litepciecore_csrbank4_reader_table_value0_r;
wire [31:0] litepciecore_csrbank4_reader_table_value0_w;
wire litepciecore_csrbank4_reader_table_loop_prog_n0_re;
wire litepciecore_csrbank4_reader_table_loop_prog_n0_r;
wire litepciecore_csrbank4_reader_table_loop_prog_n0_w;
wire litepciecore_csrbank4_reader_table_loop_status_re;
wire [15:0] litepciecore_csrbank4_reader_table_loop_status_r;
wire [15:0] litepciecore_csrbank4_reader_table_loop_status_w;
wire litepciecore_csrbank4_reader_table_level_re;
wire [7:0] litepciecore_csrbank4_reader_table_level_r;
wire [7:0] litepciecore_csrbank4_reader_table_level_w;
wire litepciecore_csrbank4_loopback_enable0_re;
wire litepciecore_csrbank4_loopback_enable0_r;
wire litepciecore_csrbank4_loopback_enable0_w;
wire litepciecore_csrbank4_sel;
wire [13:0] litepciecore_interface5_bank_bus_adr;
wire litepciecore_interface5_bank_bus_we;
wire [31:0] litepciecore_interface5_bank_bus_dat_w;
reg [31:0] litepciecore_interface5_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank5_enable0_re;
wire [31:0] litepciecore_csrbank5_enable0_r;
wire [31:0] litepciecore_csrbank5_enable0_w;
wire litepciecore_csrbank5_vector_re;
wire [31:0] litepciecore_csrbank5_vector_r;
wire [31:0] litepciecore_csrbank5_vector_w;
wire litepciecore_csrbank5_sel;
reg [29:0] array_muxed0 = 30'd0;
reg [31:0] array_muxed1 = 32'd0;
reg [3:0] array_muxed2 = 4'd0;
reg array_muxed3 = 1'd0;
reg array_muxed4 = 1'd0;
reg array_muxed5 = 1'd0;
reg [2:0] array_muxed6 = 3'd0;
reg [1:0] array_muxed7 = 2'd0;
(* no_retiming = "true" *) reg [5:0] multiregimpl0_regs0 = 6'd0;
(* no_retiming = "true" *) reg [5:0] multiregimpl0_regs1 = 6'd0;
(* no_retiming = "true" *) reg [5:0] multiregimpl1_regs0 = 6'd0;
(* no_retiming = "true" *) reg [5:0] multiregimpl1_regs1 = 6'd0;
(* no_retiming = "true" *) reg [5:0] multiregimpl2_regs0 = 6'd0;
(* no_retiming = "true" *) reg [5:0] multiregimpl2_regs1 = 6'd0;
(* no_retiming = "true" *) reg [5:0] multiregimpl3_regs0 = 6'd0;
(* no_retiming = "true" *) reg [5:0] multiregimpl3_regs1 = 6'd0;
(* no_retiming = "true" *) reg [2:0] multiregimpl4_regs0 = 3'd0;
(* no_retiming = "true" *) reg [2:0] multiregimpl4_regs1 = 3'd0;
(* no_retiming = "true" *) reg [2:0] multiregimpl5_regs0 = 3'd0;
(* no_retiming = "true" *) reg [2:0] multiregimpl5_regs1 = 3'd0;

assign dma_writer0_valid = litepciedma0_tx_fifo_source_valid;
assign litepciedma0_tx_fifo_source_ready = dma_writer0_ready;
assign dma_writer0_last = litepciedma0_tx_fifo_source_last;
assign dma_writer0_data = litepciedma0_tx_fifo_source_payload_data;
assign dma_writer0_enable = litepciedma0_reader_enable_storage;
assign litepciedma0_rx_fifo_sink_valid = dma_reader0_valid;
assign dma_reader0_ready = litepciedma0_rx_fifo_sink_ready;
assign litepciedma0_rx_fifo_sink_last = dma_reader0_last;
assign litepciedma0_rx_fifo_sink_payload_data = dma_reader0_data;
assign dma_reader0_enable = litepciedma0_writer_enable_storage;
assign dma_writer1_valid = litepciedma1_tx_fifo_source_valid;
assign litepciedma1_tx_fifo_source_ready = dma_writer1_ready;
assign dma_writer1_last = litepciedma1_tx_fifo_source_last;
assign dma_writer1_data = litepciedma1_tx_fifo_source_payload_data;
assign dma_writer1_enable = litepciedma1_reader_enable_storage;
assign litepciedma1_rx_fifo_sink_valid = dma_reader1_valid;
assign dma_reader1_ready = litepciedma1_rx_fifo_sink_ready;
assign litepciedma1_rx_fifo_sink_last = dma_reader1_last;
assign litepciedma1_rx_fifo_sink_payload_data = dma_reader1_data;
assign dma_reader1_enable = litepciedma1_writer_enable_storage;
assign dma_writer2_valid = litepciedma2_tx_fifo_source_valid;
assign litepciedma2_tx_fifo_source_ready = dma_writer2_ready;
assign dma_writer2_last = litepciedma2_tx_fifo_source_last;
assign dma_writer2_data = litepciedma2_tx_fifo_source_payload_data;
assign dma_writer2_enable = litepciedma2_reader_enable_storage;
assign litepciedma2_rx_fifo_sink_valid = dma_reader2_valid;
assign dma_reader2_ready = litepciedma2_rx_fifo_sink_ready;
assign litepciedma2_rx_fifo_sink_last = dma_reader2_last;
assign litepciedma2_rx_fifo_sink_payload_data = dma_reader2_data;
assign dma_reader2_enable = litepciedma2_writer_enable_storage;
assign pcie_phy_msi_valid = pcie_msi_source_valid;
assign pcie_msi_source_ready = pcie_phy_msi_ready;
assign pcie_phy_msi_first = pcie_msi_source_first;
assign pcie_phy_msi_last = pcie_msi_source_last;
assign pcie_phy_msi_payload_dat = pcie_msi_source_payload_dat;
always @(*) begin
	pcie_msi_irqs <= 32'd0;
	pcie_msi_irqs[1] <= litepciedma0_reader_irq;
	pcie_msi_irqs[0] <= litepciedma0_writer_irq;
	pcie_msi_irqs[3] <= litepciedma1_reader_irq;
	pcie_msi_irqs[2] <= litepciedma1_writer_irq;
	pcie_msi_irqs[5] <= litepciedma2_reader_irq;
	pcie_msi_irqs[4] <= litepciedma2_writer_irq;
end
assign cntrl_writer_data = cntrl_storage;
assign cntrl_writer_valid = cntrl_re;
assign cntrl_dat_w = cntrl_reader_data;
assign cntrl_we = cntrl_reader_valid;
assign cntrl_enable = enable_storage;
assign litepciecore_bus_error = litepciecore_error;
assign litepciecore_reset = litepciecore_reset_reset_re;
assign litepciecore_bus_errors_status = litepciecore_bus_errors;
always @(*) begin
	litepciecore_sram_we <= 4'd0;
	litepciecore_sram_we[0] <= (((litepciecore_sram_bus_cyc & litepciecore_sram_bus_stb) & litepciecore_sram_bus_we0) & litepciecore_sram_bus_sel[0]);
	litepciecore_sram_we[1] <= (((litepciecore_sram_bus_cyc & litepciecore_sram_bus_stb) & litepciecore_sram_bus_we0) & litepciecore_sram_bus_sel[1]);
	litepciecore_sram_we[2] <= (((litepciecore_sram_bus_cyc & litepciecore_sram_bus_stb) & litepciecore_sram_bus_we0) & litepciecore_sram_bus_sel[2]);
	litepciecore_sram_we[3] <= (((litepciecore_sram_bus_cyc & litepciecore_sram_bus_stb) & litepciecore_sram_bus_we0) & litepciecore_sram_bus_sel[3]);
end
assign litepciecore_sram_adr = litepciecore_sram_bus_adr0[9:0];
assign litepciecore_sram_bus_dat_r0 = litepciecore_sram_dat_r;
assign litepciecore_sram_dat_w = litepciecore_sram_bus_dat_w0;
assign sys_clk = clk125;
assign pcie_phy_tx_buffer_sink_valid = pcie_phy_sink_sink_valid0;
assign pcie_phy_sink_sink_ready0 = pcie_phy_tx_buffer_sink_ready;
assign pcie_phy_tx_buffer_sink_first = pcie_phy_sink_sink_first0;
assign pcie_phy_tx_buffer_sink_last = pcie_phy_sink_sink_last0;
assign pcie_phy_tx_buffer_sink_payload_dat = pcie_phy_sink_sink_payload_dat0;
assign pcie_phy_tx_buffer_sink_payload_be = pcie_phy_sink_sink_payload_be0;
assign pcie_phy_tx_cdc_sink_valid = pcie_phy_tx_buffer_source_valid;
assign pcie_phy_tx_buffer_source_ready = pcie_phy_tx_cdc_sink_ready;
assign pcie_phy_tx_cdc_sink_first = pcie_phy_tx_buffer_source_first;
assign pcie_phy_tx_cdc_sink_last = pcie_phy_tx_buffer_source_last;
assign pcie_phy_tx_cdc_sink_payload_dat = pcie_phy_tx_buffer_source_payload_dat;
assign pcie_phy_tx_cdc_sink_payload_be = pcie_phy_tx_buffer_source_payload_be;
assign pcie_phy_rx_buffer_sink_valid = pcie_phy_rx_cdc_source_valid;
assign pcie_phy_rx_cdc_source_ready = pcie_phy_rx_buffer_sink_ready;
assign pcie_phy_rx_buffer_sink_first = pcie_phy_rx_cdc_source_first;
assign pcie_phy_rx_buffer_sink_last = pcie_phy_rx_cdc_source_last;
assign pcie_phy_rx_buffer_sink_payload_dat = pcie_phy_rx_cdc_source_payload_dat;
assign pcie_phy_rx_buffer_sink_payload_be = pcie_phy_rx_cdc_source_payload_be;
assign pcie_phy_source_source_valid0 = pcie_phy_rx_buffer_source_valid;
assign pcie_phy_rx_buffer_source_ready = pcie_phy_source_source_ready0;
assign pcie_phy_source_source_first0 = pcie_phy_rx_buffer_source_first;
assign pcie_phy_source_source_last0 = pcie_phy_rx_buffer_source_last;
assign pcie_phy_source_source_payload_dat0 = pcie_phy_rx_buffer_source_payload_dat;
assign pcie_phy_source_source_payload_be0 = pcie_phy_rx_buffer_source_payload_be;
assign pcie_phy_msi_cdc_sink_valid = pcie_phy_msi_valid;
assign pcie_phy_msi_ready = pcie_phy_msi_cdc_sink_ready;
assign pcie_phy_msi_cdc_sink_first = pcie_phy_msi_first;
assign pcie_phy_msi_cdc_sink_last = pcie_phy_msi_last;
assign pcie_phy_msi_cdc_sink_payload_dat = pcie_phy_msi_payload_dat;
assign pcie_phy_function_number = 1'd0;
assign pcie_phy_tx_n2av_sink_valid = pcie_phy_tx_cdc_source_valid;
assign pcie_phy_tx_cdc_source_ready = pcie_phy_tx_n2av_sink_ready;
assign pcie_phy_tx_n2av_sink_first = pcie_phy_tx_cdc_source_first;
assign pcie_phy_tx_n2av_sink_last = pcie_phy_tx_cdc_source_last;
assign pcie_phy_tx_n2av_sink_payload_dat = pcie_phy_tx_cdc_source_payload_dat;
assign pcie_phy_tx_n2av_sink_payload_be = pcie_phy_tx_cdc_source_payload_be;
assign pcie_phy_rx_cdc_sink_valid = pcie_phy_source_source_valid1;
assign pcie_phy_source_source_ready1 = pcie_phy_rx_cdc_sink_ready;
assign pcie_phy_rx_cdc_sink_first = pcie_phy_source_source_first1;
assign pcie_phy_rx_cdc_sink_last = pcie_phy_source_source_last1;
assign pcie_phy_rx_cdc_sink_payload_dat = pcie_phy_source_source_payload_dat1;
assign pcie_phy_rx_cdc_sink_payload_be = pcie_phy_source_source_payload_be1;
assign pcie_phy_tx_buffer_pipe_ce = (pcie_phy_tx_buffer_source_ready | (~pcie_phy_tx_buffer_valid_n));
assign pcie_phy_tx_buffer_sink_ready = pcie_phy_tx_buffer_pipe_ce;
assign pcie_phy_tx_buffer_source_valid = pcie_phy_tx_buffer_valid_n;
assign pcie_phy_tx_buffer_busy = (1'd0 | pcie_phy_tx_buffer_valid_n);
assign pcie_phy_tx_buffer_source_first = pcie_phy_tx_buffer_first_n;
assign pcie_phy_tx_buffer_source_last = pcie_phy_tx_buffer_last_n;
assign pcie_phy_tx_cdc_asyncfifo_din = {pcie_phy_tx_cdc_fifo_in_last, pcie_phy_tx_cdc_fifo_in_first, pcie_phy_tx_cdc_fifo_in_payload_be, pcie_phy_tx_cdc_fifo_in_payload_dat};
assign {pcie_phy_tx_cdc_fifo_out_last, pcie_phy_tx_cdc_fifo_out_first, pcie_phy_tx_cdc_fifo_out_payload_be, pcie_phy_tx_cdc_fifo_out_payload_dat} = pcie_phy_tx_cdc_asyncfifo_dout;
assign pcie_phy_tx_cdc_sink_ready = pcie_phy_tx_cdc_asyncfifo_writable;
assign pcie_phy_tx_cdc_asyncfifo_we = pcie_phy_tx_cdc_sink_valid;
assign pcie_phy_tx_cdc_fifo_in_first = pcie_phy_tx_cdc_sink_first;
assign pcie_phy_tx_cdc_fifo_in_last = pcie_phy_tx_cdc_sink_last;
assign pcie_phy_tx_cdc_fifo_in_payload_dat = pcie_phy_tx_cdc_sink_payload_dat;
assign pcie_phy_tx_cdc_fifo_in_payload_be = pcie_phy_tx_cdc_sink_payload_be;
assign pcie_phy_tx_cdc_source_valid = pcie_phy_tx_cdc_asyncfifo_readable;
assign pcie_phy_tx_cdc_source_first = pcie_phy_tx_cdc_fifo_out_first;
assign pcie_phy_tx_cdc_source_last = pcie_phy_tx_cdc_fifo_out_last;
assign pcie_phy_tx_cdc_source_payload_dat = pcie_phy_tx_cdc_fifo_out_payload_dat;
assign pcie_phy_tx_cdc_source_payload_be = pcie_phy_tx_cdc_fifo_out_payload_be;
assign pcie_phy_tx_cdc_asyncfifo_re = pcie_phy_tx_cdc_source_ready;
assign pcie_phy_tx_cdc_graycounter0_ce = (pcie_phy_tx_cdc_asyncfifo_writable & pcie_phy_tx_cdc_asyncfifo_we);
assign pcie_phy_tx_cdc_graycounter1_ce = (pcie_phy_tx_cdc_asyncfifo_readable & pcie_phy_tx_cdc_asyncfifo_re);
assign pcie_phy_tx_cdc_asyncfifo_writable = (((pcie_phy_tx_cdc_graycounter0_q[5] == pcie_phy_tx_cdc_consume_wdomain[5]) | (pcie_phy_tx_cdc_graycounter0_q[4] == pcie_phy_tx_cdc_consume_wdomain[4])) | (pcie_phy_tx_cdc_graycounter0_q[3:0] != pcie_phy_tx_cdc_consume_wdomain[3:0]));
assign pcie_phy_tx_cdc_asyncfifo_readable = (pcie_phy_tx_cdc_graycounter1_q != pcie_phy_tx_cdc_produce_rdomain);
assign pcie_phy_tx_cdc_wrport_adr = pcie_phy_tx_cdc_graycounter0_q_binary[4:0];
assign pcie_phy_tx_cdc_wrport_dat_w = pcie_phy_tx_cdc_asyncfifo_din;
assign pcie_phy_tx_cdc_wrport_we = pcie_phy_tx_cdc_graycounter0_ce;
assign pcie_phy_tx_cdc_rdport_adr = pcie_phy_tx_cdc_graycounter1_q_next_binary[4:0];
assign pcie_phy_tx_cdc_asyncfifo_dout = pcie_phy_tx_cdc_rdport_dat_r;
always @(*) begin
	pcie_phy_tx_cdc_graycounter0_q_next_binary <= 6'd0;
	if (pcie_phy_tx_cdc_graycounter0_ce) begin
		pcie_phy_tx_cdc_graycounter0_q_next_binary <= (pcie_phy_tx_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		pcie_phy_tx_cdc_graycounter0_q_next_binary <= pcie_phy_tx_cdc_graycounter0_q_binary;
	end
end
assign pcie_phy_tx_cdc_graycounter0_q_next = (pcie_phy_tx_cdc_graycounter0_q_next_binary ^ pcie_phy_tx_cdc_graycounter0_q_next_binary[5:1]);
always @(*) begin
	pcie_phy_tx_cdc_graycounter1_q_next_binary <= 6'd0;
	if (pcie_phy_tx_cdc_graycounter1_ce) begin
		pcie_phy_tx_cdc_graycounter1_q_next_binary <= (pcie_phy_tx_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		pcie_phy_tx_cdc_graycounter1_q_next_binary <= pcie_phy_tx_cdc_graycounter1_q_binary;
	end
end
assign pcie_phy_tx_cdc_graycounter1_q_next = (pcie_phy_tx_cdc_graycounter1_q_next_binary ^ pcie_phy_tx_cdc_graycounter1_q_next_binary[5:1]);
assign pcie_phy_rx_buffer_pipe_ce = (pcie_phy_rx_buffer_source_ready | (~pcie_phy_rx_buffer_valid_n));
assign pcie_phy_rx_buffer_sink_ready = pcie_phy_rx_buffer_pipe_ce;
assign pcie_phy_rx_buffer_source_valid = pcie_phy_rx_buffer_valid_n;
assign pcie_phy_rx_buffer_busy = (1'd0 | pcie_phy_rx_buffer_valid_n);
assign pcie_phy_rx_buffer_source_first = pcie_phy_rx_buffer_first_n;
assign pcie_phy_rx_buffer_source_last = pcie_phy_rx_buffer_last_n;
assign pcie_phy_rx_cdc_asyncfifo_din = {pcie_phy_rx_cdc_fifo_in_last, pcie_phy_rx_cdc_fifo_in_first, pcie_phy_rx_cdc_fifo_in_payload_be, pcie_phy_rx_cdc_fifo_in_payload_dat};
assign {pcie_phy_rx_cdc_fifo_out_last, pcie_phy_rx_cdc_fifo_out_first, pcie_phy_rx_cdc_fifo_out_payload_be, pcie_phy_rx_cdc_fifo_out_payload_dat} = pcie_phy_rx_cdc_asyncfifo_dout;
assign pcie_phy_rx_cdc_sink_ready = pcie_phy_rx_cdc_asyncfifo_writable;
assign pcie_phy_rx_cdc_asyncfifo_we = pcie_phy_rx_cdc_sink_valid;
assign pcie_phy_rx_cdc_fifo_in_first = pcie_phy_rx_cdc_sink_first;
assign pcie_phy_rx_cdc_fifo_in_last = pcie_phy_rx_cdc_sink_last;
assign pcie_phy_rx_cdc_fifo_in_payload_dat = pcie_phy_rx_cdc_sink_payload_dat;
assign pcie_phy_rx_cdc_fifo_in_payload_be = pcie_phy_rx_cdc_sink_payload_be;
assign pcie_phy_rx_cdc_source_valid = pcie_phy_rx_cdc_asyncfifo_readable;
assign pcie_phy_rx_cdc_source_first = pcie_phy_rx_cdc_fifo_out_first;
assign pcie_phy_rx_cdc_source_last = pcie_phy_rx_cdc_fifo_out_last;
assign pcie_phy_rx_cdc_source_payload_dat = pcie_phy_rx_cdc_fifo_out_payload_dat;
assign pcie_phy_rx_cdc_source_payload_be = pcie_phy_rx_cdc_fifo_out_payload_be;
assign pcie_phy_rx_cdc_asyncfifo_re = pcie_phy_rx_cdc_source_ready;
assign pcie_phy_rx_cdc_graycounter0_ce = (pcie_phy_rx_cdc_asyncfifo_writable & pcie_phy_rx_cdc_asyncfifo_we);
assign pcie_phy_rx_cdc_graycounter1_ce = (pcie_phy_rx_cdc_asyncfifo_readable & pcie_phy_rx_cdc_asyncfifo_re);
assign pcie_phy_rx_cdc_asyncfifo_writable = (((pcie_phy_rx_cdc_graycounter0_q[5] == pcie_phy_rx_cdc_consume_wdomain[5]) | (pcie_phy_rx_cdc_graycounter0_q[4] == pcie_phy_rx_cdc_consume_wdomain[4])) | (pcie_phy_rx_cdc_graycounter0_q[3:0] != pcie_phy_rx_cdc_consume_wdomain[3:0]));
assign pcie_phy_rx_cdc_asyncfifo_readable = (pcie_phy_rx_cdc_graycounter1_q != pcie_phy_rx_cdc_produce_rdomain);
assign pcie_phy_rx_cdc_wrport_adr = pcie_phy_rx_cdc_graycounter0_q_binary[4:0];
assign pcie_phy_rx_cdc_wrport_dat_w = pcie_phy_rx_cdc_asyncfifo_din;
assign pcie_phy_rx_cdc_wrport_we = pcie_phy_rx_cdc_graycounter0_ce;
assign pcie_phy_rx_cdc_rdport_adr = pcie_phy_rx_cdc_graycounter1_q_next_binary[4:0];
assign pcie_phy_rx_cdc_asyncfifo_dout = pcie_phy_rx_cdc_rdport_dat_r;
always @(*) begin
	pcie_phy_rx_cdc_graycounter0_q_next_binary <= 6'd0;
	if (pcie_phy_rx_cdc_graycounter0_ce) begin
		pcie_phy_rx_cdc_graycounter0_q_next_binary <= (pcie_phy_rx_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		pcie_phy_rx_cdc_graycounter0_q_next_binary <= pcie_phy_rx_cdc_graycounter0_q_binary;
	end
end
assign pcie_phy_rx_cdc_graycounter0_q_next = (pcie_phy_rx_cdc_graycounter0_q_next_binary ^ pcie_phy_rx_cdc_graycounter0_q_next_binary[5:1]);
always @(*) begin
	pcie_phy_rx_cdc_graycounter1_q_next_binary <= 6'd0;
	if (pcie_phy_rx_cdc_graycounter1_ce) begin
		pcie_phy_rx_cdc_graycounter1_q_next_binary <= (pcie_phy_rx_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		pcie_phy_rx_cdc_graycounter1_q_next_binary <= pcie_phy_rx_cdc_graycounter1_q_binary;
	end
end
assign pcie_phy_rx_cdc_graycounter1_q_next = (pcie_phy_rx_cdc_graycounter1_q_next_binary ^ pcie_phy_rx_cdc_graycounter1_q_next_binary[5:1]);
assign pcie_phy_msi_cdc_asyncfifo_din = {pcie_phy_msi_cdc_fifo_in_last, pcie_phy_msi_cdc_fifo_in_first, pcie_phy_msi_cdc_fifo_in_payload_dat};
assign {pcie_phy_msi_cdc_fifo_out_last, pcie_phy_msi_cdc_fifo_out_first, pcie_phy_msi_cdc_fifo_out_payload_dat} = pcie_phy_msi_cdc_asyncfifo_dout;
assign pcie_phy_msi_cdc_sink_ready = pcie_phy_msi_cdc_asyncfifo_writable;
assign pcie_phy_msi_cdc_asyncfifo_we = pcie_phy_msi_cdc_sink_valid;
assign pcie_phy_msi_cdc_fifo_in_first = pcie_phy_msi_cdc_sink_first;
assign pcie_phy_msi_cdc_fifo_in_last = pcie_phy_msi_cdc_sink_last;
assign pcie_phy_msi_cdc_fifo_in_payload_dat = pcie_phy_msi_cdc_sink_payload_dat;
assign pcie_phy_msi_cdc_source_valid = pcie_phy_msi_cdc_asyncfifo_readable;
assign pcie_phy_msi_cdc_source_first = pcie_phy_msi_cdc_fifo_out_first;
assign pcie_phy_msi_cdc_source_last = pcie_phy_msi_cdc_fifo_out_last;
assign pcie_phy_msi_cdc_source_payload_dat = pcie_phy_msi_cdc_fifo_out_payload_dat;
assign pcie_phy_msi_cdc_asyncfifo_re = pcie_phy_msi_cdc_source_ready;
assign pcie_phy_msi_cdc_graycounter0_ce = (pcie_phy_msi_cdc_asyncfifo_writable & pcie_phy_msi_cdc_asyncfifo_we);
assign pcie_phy_msi_cdc_graycounter1_ce = (pcie_phy_msi_cdc_asyncfifo_readable & pcie_phy_msi_cdc_asyncfifo_re);
assign pcie_phy_msi_cdc_asyncfifo_writable = (((pcie_phy_msi_cdc_graycounter0_q[2] == pcie_phy_msi_cdc_consume_wdomain[2]) | (pcie_phy_msi_cdc_graycounter0_q[1] == pcie_phy_msi_cdc_consume_wdomain[1])) | (pcie_phy_msi_cdc_graycounter0_q[0] != pcie_phy_msi_cdc_consume_wdomain[0]));
assign pcie_phy_msi_cdc_asyncfifo_readable = (pcie_phy_msi_cdc_graycounter1_q != pcie_phy_msi_cdc_produce_rdomain);
assign pcie_phy_msi_cdc_wrport_adr = pcie_phy_msi_cdc_graycounter0_q_binary[1:0];
assign pcie_phy_msi_cdc_wrport_dat_w = pcie_phy_msi_cdc_asyncfifo_din;
assign pcie_phy_msi_cdc_wrport_we = pcie_phy_msi_cdc_graycounter0_ce;
assign pcie_phy_msi_cdc_rdport_adr = pcie_phy_msi_cdc_graycounter1_q_next_binary[1:0];
assign pcie_phy_msi_cdc_asyncfifo_dout = pcie_phy_msi_cdc_rdport_dat_r;
always @(*) begin
	pcie_phy_msi_cdc_graycounter0_q_next_binary <= 3'd0;
	if (pcie_phy_msi_cdc_graycounter0_ce) begin
		pcie_phy_msi_cdc_graycounter0_q_next_binary <= (pcie_phy_msi_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		pcie_phy_msi_cdc_graycounter0_q_next_binary <= pcie_phy_msi_cdc_graycounter0_q_binary;
	end
end
assign pcie_phy_msi_cdc_graycounter0_q_next = (pcie_phy_msi_cdc_graycounter0_q_next_binary ^ pcie_phy_msi_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
	pcie_phy_msi_cdc_graycounter1_q_next_binary <= 3'd0;
	if (pcie_phy_msi_cdc_graycounter1_ce) begin
		pcie_phy_msi_cdc_graycounter1_q_next_binary <= (pcie_phy_msi_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		pcie_phy_msi_cdc_graycounter1_q_next_binary <= pcie_phy_msi_cdc_graycounter1_q_binary;
	end
end
assign pcie_phy_msi_cdc_graycounter1_q_next = (pcie_phy_msi_cdc_graycounter1_q_next_binary ^ pcie_phy_msi_cdc_graycounter1_q_next_binary[2:1]);
assign pcie_phy_tx_n2av_source_valid = pcie_phy_tx_n2av_endpoint1_to_valid;
assign pcie_phy_tx_n2av_source_first = pcie_phy_tx_n2av_endpoint1_to_first;
assign pcie_phy_tx_n2av_source_last = pcie_phy_tx_n2av_endpoint1_to_last;
assign pcie_phy_tx_n2av_source_payload_dat = pcie_phy_tx_n2av_endpoint1_to_payload_dat;
assign pcie_phy_tx_n2av_source_payload_be = pcie_phy_tx_n2av_endpoint1_to_payload_be;
assign pcie_phy_tx_n2av_sink_ready = pcie_phy_tx_n2av_source_ready;
assign pcie_phy_buf_sink_valid = pcie_phy_sink_sink_valid1;
assign pcie_phy_buf_sink_first = pcie_phy_sink_sink_first1;
assign pcie_phy_buf_sink_last = pcie_phy_sink_sink_last1;
assign pcie_phy_buf_sink_payload_dat = pcie_phy_sink_sink_payload_dat1;
assign pcie_phy_buf_sink_payload_be = pcie_phy_sink_sink_payload_be1;
assign pcie_phy_sink_sink_ready1 = pcie_phy_source_source_ready1;
assign pcie_phy_source_source_valid1 = pcie_phy_buf_source_valid;
assign pcie_phy_buf_source_ready = pcie_phy_source_source_ready1;
assign pcie_phy_source_source_first1 = pcie_phy_buf_source_first;
assign pcie_phy_source_source_last1 = pcie_phy_buf_source_last;
assign pcie_phy_source_source_payload_dat1 = pcie_phy_buf_source_payload_dat;
assign pcie_phy_source_source_payload_be1 = pcie_phy_buf_source_payload_be;
assign pcie_phy_buf_syncfifo_din = {pcie_phy_buf_fifo_in_last, pcie_phy_buf_fifo_in_first, pcie_phy_buf_fifo_in_payload_be, pcie_phy_buf_fifo_in_payload_dat};
assign {pcie_phy_buf_fifo_out_last, pcie_phy_buf_fifo_out_first, pcie_phy_buf_fifo_out_payload_be, pcie_phy_buf_fifo_out_payload_dat} = pcie_phy_buf_syncfifo_dout;
assign pcie_phy_buf_sink_ready = pcie_phy_buf_syncfifo_writable;
assign pcie_phy_buf_syncfifo_we = pcie_phy_buf_sink_valid;
assign pcie_phy_buf_fifo_in_first = pcie_phy_buf_sink_first;
assign pcie_phy_buf_fifo_in_last = pcie_phy_buf_sink_last;
assign pcie_phy_buf_fifo_in_payload_dat = pcie_phy_buf_sink_payload_dat;
assign pcie_phy_buf_fifo_in_payload_be = pcie_phy_buf_sink_payload_be;
assign pcie_phy_buf_source_valid = pcie_phy_buf_syncfifo_readable;
assign pcie_phy_buf_source_first = pcie_phy_buf_fifo_out_first;
assign pcie_phy_buf_source_last = pcie_phy_buf_fifo_out_last;
assign pcie_phy_buf_source_payload_dat = pcie_phy_buf_fifo_out_payload_dat;
assign pcie_phy_buf_source_payload_be = pcie_phy_buf_fifo_out_payload_be;
assign pcie_phy_buf_syncfifo_re = pcie_phy_buf_source_ready;
always @(*) begin
	pcie_phy_buf_wrport_adr <= 2'd0;
	if (pcie_phy_buf_replace) begin
		pcie_phy_buf_wrport_adr <= (pcie_phy_buf_produce - 1'd1);
	end else begin
		pcie_phy_buf_wrport_adr <= pcie_phy_buf_produce;
	end
end
assign pcie_phy_buf_wrport_dat_w = pcie_phy_buf_syncfifo_din;
assign pcie_phy_buf_wrport_we = (pcie_phy_buf_syncfifo_we & (pcie_phy_buf_syncfifo_writable | pcie_phy_buf_replace));
assign pcie_phy_buf_do_read = (pcie_phy_buf_syncfifo_readable & pcie_phy_buf_syncfifo_re);
assign pcie_phy_buf_rdport_adr = pcie_phy_buf_consume;
assign pcie_phy_buf_syncfifo_dout = pcie_phy_buf_rdport_dat_r;
assign pcie_phy_buf_syncfifo_writable = (pcie_phy_buf_level != 3'd4);
assign pcie_phy_buf_syncfifo_readable = (pcie_phy_buf_level != 1'd0);
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_valid = pcie_phy_source_source_valid0;
assign pcie_phy_source_source_ready0 = pcie_endpoint_litepcietlpdepacketizer_sink_sink_ready;
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_first = pcie_phy_source_source_first0;
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_last = pcie_phy_source_source_last0;
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_dat = pcie_phy_source_source_payload_dat0;
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_be = pcie_phy_source_source_payload_be0;
assign pcie_phy_sink_sink_valid0 = pcie_endpoint_source_source_valid;
assign pcie_endpoint_source_source_ready = pcie_phy_sink_sink_ready0;
assign pcie_phy_sink_sink_first0 = pcie_endpoint_source_source_first;
assign pcie_phy_sink_sink_last0 = pcie_endpoint_source_source_last;
assign pcie_phy_sink_sink_payload_dat0 = pcie_endpoint_source_source_payload_dat;
assign pcie_phy_sink_sink_payload_be0 = pcie_endpoint_source_source_payload_be;
assign pcie_endpoint_slave_source_valid = pcie_endpoint_litepcietlpdepacketizer_req_source_valid;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_ready = pcie_endpoint_slave_source_ready;
assign pcie_endpoint_slave_source_first = pcie_endpoint_litepcietlpdepacketizer_req_source_first;
assign pcie_endpoint_slave_source_last = pcie_endpoint_litepcietlpdepacketizer_req_source_last;
assign pcie_endpoint_slave_source_payload_we = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_we;
assign pcie_endpoint_slave_source_payload_adr = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_adr;
assign pcie_endpoint_slave_source_payload_len = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_len;
assign pcie_endpoint_slave_source_payload_req_id = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_req_id;
assign pcie_endpoint_slave_source_payload_tag = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_tag;
assign pcie_endpoint_slave_source_payload_dat = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_dat;
assign pcie_endpoint_slave_source_payload_channel = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_channel;
assign pcie_endpoint_slave_source_payload_user_id = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_user_id;
assign pcie_endpoint_cmp_sink_valid = pcie_endpoint_slave_sink_valid;
assign pcie_endpoint_slave_sink_ready = pcie_endpoint_cmp_sink_ready;
assign pcie_endpoint_cmp_sink_first = pcie_endpoint_slave_sink_first;
assign pcie_endpoint_cmp_sink_last = pcie_endpoint_slave_sink_last;
assign pcie_endpoint_cmp_sink_payload_adr = pcie_endpoint_slave_sink_payload_adr;
assign pcie_endpoint_cmp_sink_payload_len = pcie_endpoint_slave_sink_payload_len;
assign pcie_endpoint_cmp_sink_payload_end = pcie_endpoint_slave_sink_payload_end;
assign pcie_endpoint_cmp_sink_payload_req_id = pcie_endpoint_slave_sink_payload_req_id;
assign pcie_endpoint_cmp_sink_payload_cmp_id = pcie_endpoint_slave_sink_payload_cmp_id;
assign pcie_endpoint_cmp_sink_payload_err = pcie_endpoint_slave_sink_payload_err;
assign pcie_endpoint_cmp_sink_payload_tag = pcie_endpoint_slave_sink_payload_tag;
assign pcie_endpoint_cmp_sink_payload_dat = pcie_endpoint_slave_sink_payload_dat;
assign pcie_endpoint_cmp_sink_payload_channel = pcie_endpoint_slave_sink_payload_channel;
assign pcie_endpoint_cmp_sink_payload_user_id = pcie_endpoint_slave_sink_payload_user_id;
assign pcie_endpoint_req_sink_valid = pcie_endpoint_master_sink_valid;
assign pcie_endpoint_master_sink_ready = pcie_endpoint_req_sink_ready;
assign pcie_endpoint_req_sink_first = pcie_endpoint_master_sink_first;
assign pcie_endpoint_req_sink_last = pcie_endpoint_master_sink_last;
assign pcie_endpoint_req_sink_payload_we = pcie_endpoint_master_sink_payload_we;
assign pcie_endpoint_req_sink_payload_adr = pcie_endpoint_master_sink_payload_adr;
assign pcie_endpoint_req_sink_payload_len = pcie_endpoint_master_sink_payload_len;
assign pcie_endpoint_req_sink_payload_req_id = pcie_endpoint_master_sink_payload_req_id;
assign pcie_endpoint_req_sink_payload_tag = pcie_endpoint_master_sink_payload_tag;
assign pcie_endpoint_req_sink_payload_dat = pcie_endpoint_master_sink_payload_dat;
assign pcie_endpoint_req_sink_payload_channel = pcie_endpoint_master_sink_payload_channel;
assign pcie_endpoint_req_sink_payload_user_id = pcie_endpoint_master_sink_payload_user_id;
assign pcie_endpoint_master_source_valid = pcie_endpoint_litepcietlpdepacketizer_cmp_source_valid;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_ready = pcie_endpoint_master_source_ready;
assign pcie_endpoint_master_source_first = pcie_endpoint_litepcietlpdepacketizer_cmp_source_first;
assign pcie_endpoint_master_source_last = pcie_endpoint_litepcietlpdepacketizer_cmp_source_last;
assign pcie_endpoint_master_source_payload_adr = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_adr;
assign pcie_endpoint_master_source_payload_len = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_len;
assign pcie_endpoint_master_source_payload_end = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_end;
assign pcie_endpoint_master_source_payload_req_id = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_req_id;
assign pcie_endpoint_master_source_payload_cmp_id = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_cmp_id;
assign pcie_endpoint_master_source_payload_err = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_err;
assign pcie_endpoint_master_source_payload_tag = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_tag;
assign pcie_endpoint_master_source_payload_dat = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_dat;
assign pcie_endpoint_master_source_payload_channel = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_channel;
assign pcie_endpoint_master_source_payload_user_id = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_user_id;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid = pcie_endpoint_litepcietlpdepacketizer_sink_sink_valid;
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_ready = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_first = pcie_endpoint_litepcietlpdepacketizer_sink_sink_first;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_last = pcie_endpoint_litepcietlpdepacketizer_sink_sink_last;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat = pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be = pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_be;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_valid;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_ready = pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_first = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_first;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_last = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_last;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_dat = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_be = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[30:29];
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[28:24];
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0 <= 1'd0;
	if ((({pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt, pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type} == 1'd0) | ({pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt, pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type} == 7'd64))) begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0 <= 1'd0;
	end else begin
		if ((({pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt, pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type} == 7'd74) | ({pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt, pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type} == 4'd10))) begin
			pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0 <= 1'd1;
		end
	end
end
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_valid = pcie_endpoint_litepcietlpdepacketizer_endpoint0_valid;
assign pcie_endpoint_litepcietlpdepacketizer_endpoint0_ready = pcie_endpoint_litepcietlpdepacketizer_tlp_req_ready;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_first = pcie_endpoint_litepcietlpdepacketizer_endpoint0_first;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_last = pcie_endpoint_litepcietlpdepacketizer_endpoint0_last;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_dat = pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_be = pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_be;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_address = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[95:66];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_attr = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[13:12];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_ep = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[14];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_first_be = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[35:32];
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_fmt <= 2'd0;
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_fmt;
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[30:29];
end
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_last_be = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[39:36];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_length = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[9:0];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_requester_id = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[63:48];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_tag = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[47:40];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_tc = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[22:20];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_td = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[15];
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_type <= 5'd0;
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_type <= pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_type;
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_type <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[28:24];
end
assign pcie_endpoint_litepcietlpdepacketizer_req_source_valid = pcie_endpoint_litepcietlpdepacketizer_tlp_req_valid;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_we = (pcie_endpoint_litepcietlpdepacketizer_tlp_req_valid & ({pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_fmt, pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_type} == 7'd64));
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_ready = pcie_endpoint_litepcietlpdepacketizer_req_source_ready;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_first = pcie_endpoint_litepcietlpdepacketizer_tlp_req_first;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_last = pcie_endpoint_litepcietlpdepacketizer_tlp_req_last;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_adr = {($signed({1'd0, pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_address}) & 33'sd4295098367), pcie_endpoint_litepcietlpdepacketizer};
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_len = pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_length;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_req_id = pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_requester_id;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_tag = pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_tag;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_dat = pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_valid = pcie_endpoint_litepcietlpdepacketizer_endpoint1_valid;
assign pcie_endpoint_litepcietlpdepacketizer_endpoint1_ready = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_ready;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_first = pcie_endpoint_litepcietlpdepacketizer_endpoint1_first;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_last = pcie_endpoint_litepcietlpdepacketizer_endpoint1_last;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_dat = pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_be = pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_be;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_attr = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[13:12];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_bcm = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[44];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_byte_count = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[43:32];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_completer_id = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[63:48];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_ep = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[14];
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_fmt <= 2'd0;
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_fmt;
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[30:29];
end
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_length = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[9:0];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_lower_address = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[70:64];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_requester_id = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[95:80];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_status = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[47:45];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_tag = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[79:72];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_tc = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[22:20];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_td = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[15];
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_type <= 5'd0;
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_type <= pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_type;
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_type <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[28:24];
end
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_valid = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_valid;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_ready = pcie_endpoint_litepcietlpdepacketizer_cmp_source_ready;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_first = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_first;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_last = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_last;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_len = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_length;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_end = (pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_length == pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_byte_count[11:2]);
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_adr = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_lower_address;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_req_id = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_requester_id;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_cmp_id = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_completer_id;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_err = (pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_status != 1'd0);
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_tag = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_tag;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_dat = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_dat;
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat <= 64'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat[31:0] <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_dat[63:32];
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat[63:32] <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[31:0];
end
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be <= 8'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be[3:0] <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_be[7:4];
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be[7:4] <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[3:0];
end
always @(*) begin
	subfragments_litepcietlpdepacketizer_next_value_ce2 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value3 <= 32'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce3 <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_valid <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_first <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_state <= 2'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_last <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_count_litepcietlpdepacketizer_next_value2 <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_count_litepcietlpdepacketizer_next_value_ce2 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value0 <= 32'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce0 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value1 <= 32'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce1 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value2 <= 32'd0;
	subfragments_litepcietlpdepacketizer_next_state <= subfragments_litepcietlpdepacketizer_state;
	case (subfragments_litepcietlpdepacketizer_state)
		1'd1: begin
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready <= 1'd1;
			if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid) begin
				pcie_endpoint_litepcietlpdepacketizer_header_extracter_count_litepcietlpdepacketizer_next_value2 <= (pcie_endpoint_litepcietlpdepacketizer_header_extracter_count + 1'd1);
				pcie_endpoint_litepcietlpdepacketizer_header_extracter_count_litepcietlpdepacketizer_next_value_ce2 <= 1'd1;
				subfragments_litepcietlpdepacketizer_next_value0 <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[95:64];
				subfragments_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
				subfragments_litepcietlpdepacketizer_next_value1 <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[127:96];
				subfragments_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
				subfragments_litepcietlpdepacketizer_next_value2 <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[31:0];
				subfragments_litepcietlpdepacketizer_next_value_ce2 <= 1'd1;
				subfragments_litepcietlpdepacketizer_next_value3 <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[63:32];
				subfragments_litepcietlpdepacketizer_next_value_ce3 <= 1'd1;
				if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_count) begin
					if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_last) begin
						pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd1;
						pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
					end
					subfragments_litepcietlpdepacketizer_next_state <= 2'd2;
				end
			end
		end
		2'd2: begin
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_valid <= (pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid | pcie_endpoint_litepcietlpdepacketizer_header_extracter_last);
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_first <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_first;
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_last <= (pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_last | pcie_endpoint_litepcietlpdepacketizer_header_extracter_last);
			if ((pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_valid & pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_ready)) begin
				pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd0;
				pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
				pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready <= (1'd1 & (~pcie_endpoint_litepcietlpdepacketizer_header_extracter_last));
				if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_last) begin
					subfragments_litepcietlpdepacketizer_next_state <= 1'd0;
				end
			end
		end
		default: begin
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd1;
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd0;
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_count_litepcietlpdepacketizer_next_value2 <= 1'd0;
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_count_litepcietlpdepacketizer_next_value_ce2 <= 1'd1;
			if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid) begin
				subfragments_litepcietlpdepacketizer_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel1 <= 1'd0;
	if (pcie_endpoint_litepcietlpdepacketizer_dispatcher_first) begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel1 <= pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0;
	end else begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel1 <= pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel_ongoing;
	end
end
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_first <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_last <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_fmt <= 2'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_type <= 5'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_dat <= 64'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_be <= 8'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_valid <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_first <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_last <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_fmt <= 2'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_type <= 5'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_dat <= 64'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_be <= 8'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_valid <= 1'd0;
	case (pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel1)
		1'd0: begin
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_valid <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid;
			pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready <= pcie_endpoint_litepcietlpdepacketizer_endpoint0_ready;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_first <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_first;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_last <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_last;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_type <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_dat <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_dat;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_be <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_be;
		end
		1'd1: begin
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_valid <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid;
			pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready <= pcie_endpoint_litepcietlpdepacketizer_endpoint1_ready;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_first <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_first;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_last <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_last;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_type <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_dat <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_dat;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_be <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_be;
		end
		default: begin
			pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_dispatcher_last <= 1'd0;
	if (pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid) begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_last <= (pcie_endpoint_litepcietlpdepacketizer_dispatch_source_last & pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready);
	end
end
assign pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing0 = ((pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid | pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing1) & (~pcie_endpoint_litepcietlpdepacketizer_dispatcher_last));
assign pcie_endpoint_tlp_req_valid = pcie_endpoint_req_sink_valid;
assign pcie_endpoint_req_sink_ready = pcie_endpoint_tlp_req_ready;
assign pcie_endpoint_tlp_req_first = pcie_endpoint_req_sink_first;
assign pcie_endpoint_tlp_req_last = pcie_endpoint_req_sink_last;
always @(*) begin
	pcie_endpoint_tlp_req_payload_fmt <= 2'd0;
	pcie_endpoint_tlp_req_payload_type <= 5'd0;
	if (pcie_endpoint_req_sink_payload_we) begin
		{pcie_endpoint_tlp_req_payload_fmt, pcie_endpoint_tlp_req_payload_type} <= 7'd64;
	end else begin
		{pcie_endpoint_tlp_req_payload_fmt, pcie_endpoint_tlp_req_payload_type} <= 1'd0;
	end
end
assign pcie_endpoint_tlp_req_payload_tc = 1'd0;
assign pcie_endpoint_tlp_req_payload_td = 1'd0;
assign pcie_endpoint_tlp_req_payload_ep = 1'd0;
assign pcie_endpoint_tlp_req_payload_attr = 1'd0;
assign pcie_endpoint_tlp_req_payload_length = pcie_endpoint_req_sink_payload_len;
assign pcie_endpoint_tlp_req_payload_requester_id = pcie_endpoint_req_sink_payload_req_id;
assign pcie_endpoint_tlp_req_payload_tag = pcie_endpoint_req_sink_payload_tag;
always @(*) begin
	pcie_endpoint_tlp_req_payload_last_be <= 4'd0;
	if ((pcie_endpoint_req_sink_payload_len > 1'd1)) begin
		pcie_endpoint_tlp_req_payload_last_be <= 4'd15;
	end else begin
		pcie_endpoint_tlp_req_payload_last_be <= 1'd0;
	end
end
assign pcie_endpoint_tlp_req_payload_first_be = 4'd15;
assign pcie_endpoint_tlp_req_payload_address = pcie_endpoint_req_sink_payload_adr[31:2];
assign pcie_endpoint_tlp_req_payload_dat = pcie_endpoint_req_sink_payload_dat;
always @(*) begin
	pcie_endpoint_tlp_req_payload_be <= 8'd0;
	if (pcie_endpoint_req_sink_payload_we) begin
		pcie_endpoint_tlp_req_payload_be <= 8'd255;
	end else begin
		pcie_endpoint_tlp_req_payload_be <= 1'd0;
	end
end
assign pcie_endpoint_tlp_raw_req_valid = pcie_endpoint_tlp_req_valid;
assign pcie_endpoint_tlp_req_ready = pcie_endpoint_tlp_raw_req_ready;
assign pcie_endpoint_tlp_raw_req_first = pcie_endpoint_tlp_req_first;
assign pcie_endpoint_tlp_raw_req_last = pcie_endpoint_tlp_req_last;
always @(*) begin
	pcie_endpoint_tlp_raw_req_payload_header <= 128'd0;
	pcie_endpoint_tlp_raw_req_payload_header[95:66] <= pcie_endpoint_tlp_req_payload_address;
	pcie_endpoint_tlp_raw_req_payload_header[13:12] <= pcie_endpoint_tlp_req_payload_attr;
	pcie_endpoint_tlp_raw_req_payload_header[14] <= pcie_endpoint_tlp_req_payload_ep;
	pcie_endpoint_tlp_raw_req_payload_header[35:32] <= pcie_endpoint_tlp_req_payload_first_be;
	pcie_endpoint_tlp_raw_req_payload_header[30:29] <= pcie_endpoint_tlp_req_payload_fmt;
	pcie_endpoint_tlp_raw_req_payload_header[39:36] <= pcie_endpoint_tlp_req_payload_last_be;
	pcie_endpoint_tlp_raw_req_payload_header[9:0] <= pcie_endpoint_tlp_req_payload_length;
	pcie_endpoint_tlp_raw_req_payload_header[63:48] <= pcie_endpoint_tlp_req_payload_requester_id;
	pcie_endpoint_tlp_raw_req_payload_header[47:40] <= pcie_endpoint_tlp_req_payload_tag;
	pcie_endpoint_tlp_raw_req_payload_header[22:20] <= pcie_endpoint_tlp_req_payload_tc;
	pcie_endpoint_tlp_raw_req_payload_header[15] <= pcie_endpoint_tlp_req_payload_td;
	pcie_endpoint_tlp_raw_req_payload_header[28:24] <= pcie_endpoint_tlp_req_payload_type;
end
assign pcie_endpoint_tlp_raw_req_payload_dat = pcie_endpoint_tlp_req_payload_dat;
assign pcie_endpoint_tlp_raw_req_payload_be = pcie_endpoint_tlp_req_payload_be;
assign pcie_endpoint_tlp_cmp_valid = pcie_endpoint_cmp_sink_valid;
assign pcie_endpoint_cmp_sink_ready = pcie_endpoint_tlp_cmp_ready;
assign pcie_endpoint_tlp_cmp_first = pcie_endpoint_cmp_sink_first;
assign pcie_endpoint_tlp_cmp_last = pcie_endpoint_cmp_sink_last;
assign pcie_endpoint_tlp_cmp_payload_tc = 1'd0;
assign pcie_endpoint_tlp_cmp_payload_td = 1'd0;
assign pcie_endpoint_tlp_cmp_payload_ep = 1'd0;
assign pcie_endpoint_tlp_cmp_payload_attr = 1'd0;
assign pcie_endpoint_tlp_cmp_payload_length = pcie_endpoint_cmp_sink_payload_len;
assign pcie_endpoint_tlp_cmp_payload_completer_id = pcie_endpoint_cmp_sink_payload_cmp_id;
always @(*) begin
	pcie_endpoint_tlp_cmp_payload_type <= 5'd0;
	pcie_endpoint_tlp_cmp_payload_status <= 3'd0;
	pcie_endpoint_tlp_cmp_payload_fmt <= 2'd0;
	if (pcie_endpoint_cmp_sink_payload_err) begin
		{pcie_endpoint_tlp_cmp_payload_fmt, pcie_endpoint_tlp_cmp_payload_type} <= 4'd10;
		pcie_endpoint_tlp_cmp_payload_status <= 1'd1;
	end else begin
		{pcie_endpoint_tlp_cmp_payload_fmt, pcie_endpoint_tlp_cmp_payload_type} <= 7'd74;
		pcie_endpoint_tlp_cmp_payload_status <= 1'd0;
	end
end
assign pcie_endpoint_tlp_cmp_payload_bcm = 1'd0;
assign pcie_endpoint_tlp_cmp_payload_byte_count = (pcie_endpoint_cmp_sink_payload_len * 3'd4);
assign pcie_endpoint_tlp_cmp_payload_requester_id = pcie_endpoint_cmp_sink_payload_req_id;
assign pcie_endpoint_tlp_cmp_payload_tag = pcie_endpoint_cmp_sink_payload_tag;
assign pcie_endpoint_tlp_cmp_payload_lower_address = pcie_endpoint_cmp_sink_payload_adr;
assign pcie_endpoint_tlp_cmp_payload_dat = pcie_endpoint_cmp_sink_payload_dat;
assign pcie_endpoint_tlp_cmp_payload_be = 8'd255;
assign pcie_endpoint_tlp_raw_cmp_valid = pcie_endpoint_tlp_cmp_valid;
assign pcie_endpoint_tlp_cmp_ready = pcie_endpoint_tlp_raw_cmp_ready;
assign pcie_endpoint_tlp_raw_cmp_first = pcie_endpoint_tlp_cmp_first;
assign pcie_endpoint_tlp_raw_cmp_last = pcie_endpoint_tlp_cmp_last;
always @(*) begin
	pcie_endpoint_tlp_raw_cmp_payload_header <= 128'd0;
	pcie_endpoint_tlp_raw_cmp_payload_header[13:12] <= pcie_endpoint_tlp_cmp_payload_attr;
	pcie_endpoint_tlp_raw_cmp_payload_header[44] <= pcie_endpoint_tlp_cmp_payload_bcm;
	pcie_endpoint_tlp_raw_cmp_payload_header[43:32] <= pcie_endpoint_tlp_cmp_payload_byte_count;
	pcie_endpoint_tlp_raw_cmp_payload_header[63:48] <= pcie_endpoint_tlp_cmp_payload_completer_id;
	pcie_endpoint_tlp_raw_cmp_payload_header[14] <= pcie_endpoint_tlp_cmp_payload_ep;
	pcie_endpoint_tlp_raw_cmp_payload_header[30:29] <= pcie_endpoint_tlp_cmp_payload_fmt;
	pcie_endpoint_tlp_raw_cmp_payload_header[9:0] <= pcie_endpoint_tlp_cmp_payload_length;
	pcie_endpoint_tlp_raw_cmp_payload_header[70:64] <= pcie_endpoint_tlp_cmp_payload_lower_address;
	pcie_endpoint_tlp_raw_cmp_payload_header[95:80] <= pcie_endpoint_tlp_cmp_payload_requester_id;
	pcie_endpoint_tlp_raw_cmp_payload_header[47:45] <= pcie_endpoint_tlp_cmp_payload_status;
	pcie_endpoint_tlp_raw_cmp_payload_header[79:72] <= pcie_endpoint_tlp_cmp_payload_tag;
	pcie_endpoint_tlp_raw_cmp_payload_header[22:20] <= pcie_endpoint_tlp_cmp_payload_tc;
	pcie_endpoint_tlp_raw_cmp_payload_header[15] <= pcie_endpoint_tlp_cmp_payload_td;
	pcie_endpoint_tlp_raw_cmp_payload_header[28:24] <= pcie_endpoint_tlp_cmp_payload_type;
end
assign pcie_endpoint_tlp_raw_cmp_payload_dat = pcie_endpoint_tlp_cmp_payload_dat;
assign pcie_endpoint_tlp_raw_cmp_payload_be = pcie_endpoint_tlp_cmp_payload_be;
assign pcie_endpoint_header_inserter_sink_valid = pcie_endpoint_tlp_raw_valid;
assign pcie_endpoint_tlp_raw_ready = pcie_endpoint_header_inserter_sink_ready;
assign pcie_endpoint_header_inserter_sink_first = pcie_endpoint_tlp_raw_first;
assign pcie_endpoint_header_inserter_sink_last = pcie_endpoint_tlp_raw_last;
assign pcie_endpoint_header_inserter_sink_payload_header = pcie_endpoint_tlp_raw_payload_header;
assign pcie_endpoint_header_inserter_sink_payload_dat = pcie_endpoint_tlp_raw_payload_dat;
assign pcie_endpoint_header_inserter_sink_payload_be = pcie_endpoint_tlp_raw_payload_be;
assign pcie_endpoint_source_source_valid = pcie_endpoint_header_inserter_source_valid;
assign pcie_endpoint_header_inserter_source_ready = pcie_endpoint_source_source_ready;
assign pcie_endpoint_source_source_first = pcie_endpoint_header_inserter_source_first;
assign pcie_endpoint_source_source_last = pcie_endpoint_header_inserter_source_last;
assign pcie_endpoint_source_source_payload_dat = pcie_endpoint_header_inserter_source_payload_dat;
assign pcie_endpoint_source_source_payload_be = pcie_endpoint_header_inserter_source_payload_be;
always @(*) begin
	pcie_endpoint_request <= 2'd0;
	pcie_endpoint_request[0] <= pcie_endpoint_status0_ongoing0;
	pcie_endpoint_request[1] <= pcie_endpoint_status1_ongoing0;
end
always @(*) begin
	pcie_endpoint_tlp_raw_payload_header <= 128'd0;
	pcie_endpoint_tlp_raw_payload_dat <= 64'd0;
	pcie_endpoint_tlp_raw_payload_be <= 8'd0;
	pcie_endpoint_tlp_raw_cmp_ready <= 1'd0;
	pcie_endpoint_tlp_raw_req_ready <= 1'd0;
	pcie_endpoint_tlp_raw_valid <= 1'd0;
	pcie_endpoint_tlp_raw_first <= 1'd0;
	pcie_endpoint_tlp_raw_last <= 1'd0;
	case (pcie_endpoint_grant)
		1'd0: begin
			pcie_endpoint_tlp_raw_valid <= pcie_endpoint_tlp_raw_req_valid;
			pcie_endpoint_tlp_raw_req_ready <= pcie_endpoint_tlp_raw_ready;
			pcie_endpoint_tlp_raw_first <= pcie_endpoint_tlp_raw_req_first;
			pcie_endpoint_tlp_raw_last <= pcie_endpoint_tlp_raw_req_last;
			pcie_endpoint_tlp_raw_payload_header <= pcie_endpoint_tlp_raw_req_payload_header;
			pcie_endpoint_tlp_raw_payload_dat <= pcie_endpoint_tlp_raw_req_payload_dat;
			pcie_endpoint_tlp_raw_payload_be <= pcie_endpoint_tlp_raw_req_payload_be;
		end
		1'd1: begin
			pcie_endpoint_tlp_raw_valid <= pcie_endpoint_tlp_raw_cmp_valid;
			pcie_endpoint_tlp_raw_cmp_ready <= pcie_endpoint_tlp_raw_ready;
			pcie_endpoint_tlp_raw_first <= pcie_endpoint_tlp_raw_cmp_first;
			pcie_endpoint_tlp_raw_last <= pcie_endpoint_tlp_raw_cmp_last;
			pcie_endpoint_tlp_raw_payload_header <= pcie_endpoint_tlp_raw_cmp_payload_header;
			pcie_endpoint_tlp_raw_payload_dat <= pcie_endpoint_tlp_raw_cmp_payload_dat;
			pcie_endpoint_tlp_raw_payload_be <= pcie_endpoint_tlp_raw_cmp_payload_be;
		end
	endcase
end
always @(*) begin
	pcie_endpoint_status0_last <= 1'd0;
	if (pcie_endpoint_tlp_raw_req_valid) begin
		pcie_endpoint_status0_last <= (pcie_endpoint_tlp_raw_req_last & pcie_endpoint_tlp_raw_req_ready);
	end
end
assign pcie_endpoint_status0_ongoing0 = ((pcie_endpoint_tlp_raw_req_valid | pcie_endpoint_status0_ongoing1) & (~pcie_endpoint_status0_last));
always @(*) begin
	pcie_endpoint_status1_last <= 1'd0;
	if (pcie_endpoint_tlp_raw_cmp_valid) begin
		pcie_endpoint_status1_last <= (pcie_endpoint_tlp_raw_cmp_last & pcie_endpoint_tlp_raw_cmp_ready);
	end
end
assign pcie_endpoint_status1_ongoing0 = ((pcie_endpoint_tlp_raw_cmp_valid | pcie_endpoint_status1_ongoing1) & (~pcie_endpoint_status1_last));
always @(*) begin
	pcie_endpoint_header_inserter_source_last <= 1'd0;
	subfragments_litepcietlppacketizer_next_state <= 2'd0;
	pcie_endpoint_header_inserter_source_payload_dat <= 64'd0;
	pcie_endpoint_header_inserter_source_payload_be <= 8'd0;
	pcie_endpoint_header_inserter_sink_ready <= 1'd0;
	pcie_endpoint_header_inserter_source_valid <= 1'd0;
	pcie_endpoint_header_inserter_source_first <= 1'd0;
	subfragments_litepcietlppacketizer_next_state <= subfragments_litepcietlppacketizer_state;
	case (subfragments_litepcietlppacketizer_state)
		1'd1: begin
			pcie_endpoint_header_inserter_source_valid <= 1'd1;
			pcie_endpoint_header_inserter_source_last <= pcie_endpoint_header_inserter_sink_last;
			pcie_endpoint_header_inserter_source_payload_dat[31:0] <= pcie_endpoint_header_inserter_sink_payload_header[95:64];
			pcie_endpoint_header_inserter_source_payload_be[3:0] <= 4'd15;
			pcie_endpoint_header_inserter_source_payload_dat[63:32] <= pcie_endpoint_header_inserter_sink_payload_dat[31:0];
			pcie_endpoint_header_inserter_source_payload_be[7:4] <= pcie_endpoint_header_inserter_sink_payload_be[3:0];
			if ((pcie_endpoint_header_inserter_source_valid & pcie_endpoint_header_inserter_source_ready)) begin
				pcie_endpoint_header_inserter_sink_ready <= 1'd1;
				if (pcie_endpoint_header_inserter_source_last) begin
					subfragments_litepcietlppacketizer_next_state <= 1'd0;
				end else begin
					subfragments_litepcietlppacketizer_next_state <= 2'd2;
				end
			end
		end
		2'd2: begin
			pcie_endpoint_header_inserter_source_valid <= (pcie_endpoint_header_inserter_sink_valid | pcie_endpoint_header_inserter_last);
			pcie_endpoint_header_inserter_source_last <= pcie_endpoint_header_inserter_last;
			pcie_endpoint_header_inserter_source_payload_dat[31:0] <= pcie_endpoint_header_inserter_dat[63:32];
			pcie_endpoint_header_inserter_source_payload_be[3:0] <= 4'd15;
			pcie_endpoint_header_inserter_source_payload_dat[63:32] <= pcie_endpoint_header_inserter_sink_payload_dat[31:0];
			if (pcie_endpoint_header_inserter_last) begin
				pcie_endpoint_header_inserter_source_payload_be[7:4] <= 1'd0;
			end else begin
				pcie_endpoint_header_inserter_source_payload_be[7:4] <= 4'd15;
			end
			if ((pcie_endpoint_header_inserter_source_valid & pcie_endpoint_header_inserter_source_ready)) begin
				pcie_endpoint_header_inserter_sink_ready <= (~pcie_endpoint_header_inserter_last);
				if (pcie_endpoint_header_inserter_source_last) begin
					subfragments_litepcietlppacketizer_next_state <= 1'd0;
				end
			end
		end
		default: begin
			pcie_endpoint_header_inserter_sink_ready <= 1'd1;
			if (pcie_endpoint_header_inserter_sink_first) begin
				pcie_endpoint_header_inserter_sink_ready <= 1'd0;
				pcie_endpoint_header_inserter_source_valid <= pcie_endpoint_header_inserter_sink_valid;
				pcie_endpoint_header_inserter_source_first <= pcie_endpoint_header_inserter_sink_first;
				pcie_endpoint_header_inserter_source_last <= 1'd0;
				pcie_endpoint_header_inserter_source_payload_dat[31:0] <= pcie_endpoint_header_inserter_sink_payload_header[31:0];
				pcie_endpoint_header_inserter_source_payload_be[3:0] <= 4'd15;
				pcie_endpoint_header_inserter_source_payload_dat[63:32] <= pcie_endpoint_header_inserter_sink_payload_header[63:32];
				pcie_endpoint_header_inserter_source_payload_be[7:4] <= 4'd15;
				if ((pcie_endpoint_header_inserter_source_valid & pcie_endpoint_header_inserter_source_ready)) begin
					subfragments_litepcietlppacketizer_next_state <= 1'd1;
				end
			end
		end
	endcase
end
assign subfragments_sel = 1'd1;
always @(*) begin
	subfragments_dispatcher0_sel0 <= 3'd0;
	subfragments_dispatcher0_sel0[0] <= (subfragments_master_in_source_payload_channel == 1'd1);
	subfragments_dispatcher0_sel0[1] <= (subfragments_master_in_source_payload_channel == 2'd3);
	subfragments_dispatcher0_sel0[2] <= (subfragments_master_in_source_payload_channel == 3'd5);
end
always @(*) begin
	subfragments_dispatcher1_sel0 <= 3'd0;
	subfragments_dispatcher1_sel0[0] <= (subfragments_source_payload_channel == 1'd0);
	subfragments_dispatcher1_sel0[1] <= (subfragments_source_payload_channel == 2'd2);
	subfragments_dispatcher1_sel0[2] <= (subfragments_source_payload_channel == 3'd4);
end
assign subfragments_master_out_source_valid = pcie_endpoint_master_source_valid;
assign pcie_endpoint_master_source_ready = subfragments_master_out_source_ready;
assign subfragments_master_out_source_first = pcie_endpoint_master_source_first;
assign subfragments_master_out_source_last = pcie_endpoint_master_source_last;
assign subfragments_master_out_source_payload_adr = pcie_endpoint_master_source_payload_adr;
assign subfragments_master_out_source_payload_len = pcie_endpoint_master_source_payload_len;
assign subfragments_master_out_source_payload_end = pcie_endpoint_master_source_payload_end;
assign subfragments_master_out_source_payload_req_id = pcie_endpoint_master_source_payload_req_id;
assign subfragments_master_out_source_payload_cmp_id = pcie_endpoint_master_source_payload_cmp_id;
assign subfragments_master_out_source_payload_err = pcie_endpoint_master_source_payload_err;
assign subfragments_master_out_source_payload_tag = pcie_endpoint_master_source_payload_tag;
assign subfragments_master_out_source_payload_dat = pcie_endpoint_master_source_payload_dat;
assign subfragments_master_out_source_payload_channel = pcie_endpoint_master_source_payload_channel;
assign subfragments_master_out_source_payload_user_id = pcie_endpoint_master_source_payload_user_id;
assign pcie_wishbone_source_valid = pcie_endpoint_slave_source_valid;
assign pcie_endpoint_slave_source_ready = pcie_wishbone_source_ready;
assign pcie_wishbone_source_first = pcie_endpoint_slave_source_first;
assign pcie_wishbone_source_last = pcie_endpoint_slave_source_last;
assign pcie_wishbone_source_payload_we = pcie_endpoint_slave_source_payload_we;
assign pcie_wishbone_source_payload_adr = pcie_endpoint_slave_source_payload_adr;
assign pcie_wishbone_source_payload_len = pcie_endpoint_slave_source_payload_len;
assign pcie_wishbone_source_payload_req_id = pcie_endpoint_slave_source_payload_req_id;
assign pcie_wishbone_source_payload_tag = pcie_endpoint_slave_source_payload_tag;
assign pcie_wishbone_source_payload_dat = pcie_endpoint_slave_source_payload_dat;
assign pcie_wishbone_source_payload_channel = pcie_endpoint_slave_source_payload_channel;
assign pcie_wishbone_source_payload_user_id = pcie_endpoint_slave_source_payload_user_id;
assign pcie_endpoint_slave_sink_valid = pcie_wishbone_sink_valid;
assign pcie_wishbone_sink_ready = pcie_endpoint_slave_sink_ready;
assign pcie_endpoint_slave_sink_first = pcie_wishbone_sink_first;
assign pcie_endpoint_slave_sink_last = pcie_wishbone_sink_last;
assign pcie_endpoint_slave_sink_payload_adr = pcie_wishbone_sink_payload_adr;
assign pcie_endpoint_slave_sink_payload_len = pcie_wishbone_sink_payload_len;
assign pcie_endpoint_slave_sink_payload_end = pcie_wishbone_sink_payload_end;
assign pcie_endpoint_slave_sink_payload_req_id = pcie_wishbone_sink_payload_req_id;
assign pcie_endpoint_slave_sink_payload_cmp_id = pcie_wishbone_sink_payload_cmp_id;
assign pcie_endpoint_slave_sink_payload_err = pcie_wishbone_sink_payload_err;
assign pcie_endpoint_slave_sink_payload_tag = pcie_wishbone_sink_payload_tag;
assign pcie_endpoint_slave_sink_payload_dat = pcie_wishbone_sink_payload_dat;
assign pcie_endpoint_slave_sink_payload_channel = pcie_wishbone_sink_payload_channel;
assign pcie_endpoint_slave_sink_payload_user_id = pcie_wishbone_sink_payload_user_id;
assign subfragments_master_out_sink_first = subfragments_master_in_sink_first;
assign subfragments_master_out_sink_last = subfragments_master_in_sink_last;
assign subfragments_master_out_sink_payload_we = subfragments_master_in_sink_payload_we;
assign subfragments_master_out_sink_payload_adr = subfragments_master_in_sink_payload_adr;
assign subfragments_master_out_sink_payload_len = subfragments_master_in_sink_payload_len;
assign subfragments_master_out_sink_payload_req_id = subfragments_master_in_sink_payload_req_id;
assign subfragments_master_out_sink_payload_dat = subfragments_master_in_sink_payload_dat;
assign subfragments_master_out_sink_payload_channel = subfragments_master_in_sink_payload_channel;
assign subfragments_master_out_sink_payload_user_id = subfragments_master_in_sink_payload_user_id;
assign subfragments_info_mem_wr_port_adr = subfragments_tags_source_payload_data0;
always @(*) begin
	subfragments_info_mem_wr_port_dat_w <= 16'd0;
	subfragments_info_mem_wr_port_dat_w[7:0] <= subfragments_master_in_sink_payload_channel;
	subfragments_info_mem_wr_port_dat_w[15:8] <= subfragments_master_in_sink_payload_user_id;
end
assign subfragments_tag_valid = subfragments_info_mem_wr_port_we;
assign subfragments_tag_payload_data = subfragments_info_mem_wr_port_adr;
assign subfragments_master_in_source_valid = subfragments_source_source_valid;
assign subfragments_source_source_ready = subfragments_master_in_source_ready;
assign subfragments_master_in_source_first = subfragments_source_source_first;
assign subfragments_master_in_source_last = subfragments_source_source_last;
assign subfragments_master_in_source_payload_adr = subfragments_source_source_payload_adr;
assign subfragments_master_in_source_payload_len = subfragments_source_source_payload_len;
assign subfragments_master_in_source_payload_end = subfragments_source_source_payload_end;
assign subfragments_master_in_source_payload_req_id = subfragments_source_source_payload_req_id;
assign subfragments_master_in_source_payload_cmp_id = subfragments_source_source_payload_cmp_id;
assign subfragments_master_in_source_payload_err = subfragments_source_source_payload_err;
assign subfragments_master_in_source_payload_tag = subfragments_source_source_payload_tag;
assign subfragments_master_in_source_payload_dat = subfragments_source_source_payload_dat;
assign subfragments_master_in_source_payload_channel = subfragments_source_source_payload_channel;
assign subfragments_master_in_source_payload_user_id = subfragments_source_source_payload_user_id;
assign subfragments_info_mem_rd_port_adr = subfragments_master_out_source_payload_tag;
assign subfragments_sink_sink_first = subfragments_master_out_source_first;
assign subfragments_sink_sink_last = subfragments_master_out_source_last;
assign subfragments_sink_sink_payload_adr = subfragments_master_out_source_payload_adr;
assign subfragments_sink_sink_payload_len = subfragments_master_out_source_payload_len;
assign subfragments_sink_sink_payload_end = subfragments_master_out_source_payload_end;
assign subfragments_sink_sink_payload_req_id = subfragments_master_out_source_payload_req_id;
assign subfragments_sink_sink_payload_cmp_id = subfragments_master_out_source_payload_cmp_id;
assign subfragments_sink_sink_payload_err = subfragments_master_out_source_payload_err;
assign subfragments_sink_sink_payload_tag = subfragments_master_out_source_payload_tag;
assign subfragments_sink_sink_payload_dat = subfragments_master_out_source_payload_dat;
always @(*) begin
	subfragments_sink_sink_payload_channel <= 8'd0;
	subfragments_sink_sink_payload_channel <= subfragments_master_out_source_payload_channel;
	subfragments_sink_sink_payload_channel <= subfragments_info_mem_rd_port_dat_r[7:0];
end
always @(*) begin
	subfragments_sink_sink_payload_user_id <= 8'd0;
	subfragments_sink_sink_payload_user_id <= subfragments_master_out_source_payload_user_id;
	subfragments_sink_sink_payload_user_id <= subfragments_info_mem_rd_port_dat_r[15:8];
end
assign subfragments_tags_syncfifo_din0 = {subfragments_tags_fifo_in_last0, subfragments_tags_fifo_in_first0, subfragments_tags_fifo_in_payload_data0};
assign {subfragments_tags_fifo_out_last0, subfragments_tags_fifo_out_first0, subfragments_tags_fifo_out_payload_data0} = subfragments_tags_syncfifo_dout0;
assign subfragments_tags_sink_ready0 = subfragments_tags_syncfifo_writable0;
assign subfragments_tags_syncfifo_we0 = subfragments_tags_sink_valid0;
assign subfragments_tags_fifo_in_first0 = subfragments_tags_sink_first0;
assign subfragments_tags_fifo_in_last0 = subfragments_tags_sink_last0;
assign subfragments_tags_fifo_in_payload_data0 = subfragments_tags_sink_payload_data0;
assign subfragments_tags_source_valid0 = subfragments_tags_readable0;
assign subfragments_tags_source_first0 = subfragments_tags_fifo_out_first0;
assign subfragments_tags_source_last0 = subfragments_tags_fifo_out_last0;
assign subfragments_tags_source_payload_data0 = subfragments_tags_fifo_out_payload_data0;
assign subfragments_tags_re0 = subfragments_tags_source_ready0;
assign subfragments_tags_syncfifo_re0 = (subfragments_tags_syncfifo_readable0 & ((~subfragments_tags_readable0) | subfragments_tags_re0));
assign subfragments_tags_level1 = (subfragments_tags_level0 + subfragments_tags_readable0);
always @(*) begin
	subfragments_tags_wrport_adr0 <= 2'd0;
	if (subfragments_tags_replace0) begin
		subfragments_tags_wrport_adr0 <= (subfragments_tags_produce0 - 1'd1);
	end else begin
		subfragments_tags_wrport_adr0 <= subfragments_tags_produce0;
	end
end
assign subfragments_tags_wrport_dat_w0 = subfragments_tags_syncfifo_din0;
assign subfragments_tags_wrport_we0 = (subfragments_tags_syncfifo_we0 & (subfragments_tags_syncfifo_writable0 | subfragments_tags_replace0));
assign subfragments_tags_do_read0 = (subfragments_tags_syncfifo_readable0 & subfragments_tags_syncfifo_re0);
assign subfragments_tags_rdport_adr0 = subfragments_tags_consume0;
assign subfragments_tags_syncfifo_dout0 = subfragments_tags_rdport_dat_r0;
assign subfragments_tags_rdport_re0 = subfragments_tags_do_read0;
assign subfragments_tags_syncfifo_writable0 = (subfragments_tags_level0 != 3'd4);
assign subfragments_tags_syncfifo_readable0 = (subfragments_tags_level0 != 1'd0);
always @(*) begin
	subfragments_fsm0_next_state0 <= 2'd0;
	subfragments_master_out_sink_payload_tag <= 8'd0;
	subfragments_tags_source_ready0 <= 1'd0;
	subfragments_info_mem_wr_port_we <= 1'd0;
	subfragments_master_in_sink_ready <= 1'd0;
	subfragments_master_out_sink_valid <= 1'd0;
	subfragments_master_out_sink_payload_tag <= subfragments_master_in_sink_payload_tag;
	subfragments_fsm0_next_state0 <= subfragments_fsm0_state0;
	case (subfragments_fsm0_state0)
		1'd1: begin
			subfragments_master_out_sink_valid <= subfragments_master_in_sink_valid;
			subfragments_master_out_sink_payload_tag <= subfragments_tags_source_payload_data0;
			if (((subfragments_master_out_sink_valid & subfragments_master_out_sink_last) & subfragments_master_out_sink_ready)) begin
				subfragments_fsm0_next_state0 <= 2'd3;
			end else begin
				subfragments_master_in_sink_ready <= subfragments_master_out_sink_ready;
			end
		end
		2'd2: begin
			subfragments_master_out_sink_valid <= subfragments_master_in_sink_valid;
			subfragments_master_in_sink_ready <= subfragments_master_out_sink_ready;
			subfragments_master_out_sink_payload_tag <= 6'd32;
			if (((subfragments_master_out_sink_valid & subfragments_master_out_sink_last) & subfragments_master_out_sink_ready)) begin
				subfragments_fsm0_next_state0 <= 1'd0;
			end
		end
		2'd3: begin
			subfragments_info_mem_wr_port_we <= 1'd1;
			subfragments_master_in_sink_ready <= 1'd1;
			subfragments_tags_source_ready0 <= 1'd1;
			subfragments_fsm0_next_state0 <= 1'd0;
		end
		default: begin
			if ((subfragments_master_in_sink_valid & subfragments_master_in_sink_first)) begin
				if (subfragments_master_in_sink_payload_we) begin
					subfragments_fsm0_next_state0 <= 2'd2;
				end else begin
					if (subfragments_tags_source_valid0) begin
						subfragments_fsm0_next_state0 <= 1'd1;
					end
				end
			end
		end
	endcase
end
assign subfragments_tags_sink_valid1 = subfragments_tag_valid;
assign subfragments_tag_ready = subfragments_tags_sink_ready1;
assign subfragments_tags_sink_first1 = subfragments_tag_first;
assign subfragments_tags_sink_last1 = subfragments_tag_last;
assign subfragments_tags_sink_payload_data1 = subfragments_tag_payload_data;
always @(*) begin
	subfragments_syncfifo0_sink_payload_err <= 1'd0;
	subfragments_syncfifo2_sink_payload_tag <= 8'd0;
	subfragments_syncfifo0_sink_payload_tag <= 8'd0;
	subfragments_syncfifo2_sink_payload_dat <= 64'd0;
	subfragments_syncfifo0_sink_payload_dat <= 64'd0;
	subfragments_syncfifo2_sink_payload_channel <= 8'd0;
	subfragments_syncfifo0_sink_payload_channel <= 8'd0;
	subfragments_syncfifo2_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo0_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo3_sink_valid <= 1'd0;
	subfragments_syncfifo1_sink_valid <= 1'd0;
	subfragments_syncfifo3_sink_first <= 1'd0;
	subfragments_syncfifo2_sink_payload_end <= 1'd0;
	subfragments_syncfifo1_sink_first <= 1'd0;
	subfragments_syncfifo3_sink_last <= 1'd0;
	subfragments_syncfifo1_sink_last <= 1'd0;
	subfragments_syncfifo3_sink_payload_adr <= 32'd0;
	subfragments_syncfifo1_sink_payload_adr <= 32'd0;
	subfragments_syncfifo3_sink_payload_len <= 10'd0;
	subfragments_syncfifo1_sink_payload_len <= 10'd0;
	subfragments_sink_sink_ready <= 1'd0;
	subfragments_syncfifo1_sink_payload_end <= 1'd0;
	subfragments_syncfifo2_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo1_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo3_sink_payload_end <= 1'd0;
	subfragments_syncfifo1_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo3_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo1_sink_payload_err <= 1'd0;
	subfragments_syncfifo3_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo1_sink_payload_tag <= 8'd0;
	subfragments_syncfifo3_sink_payload_err <= 1'd0;
	subfragments_syncfifo1_sink_payload_dat <= 64'd0;
	subfragments_syncfifo2_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo1_sink_payload_channel <= 8'd0;
	subfragments_syncfifo3_sink_payload_tag <= 8'd0;
	subfragments_syncfifo1_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo3_sink_payload_dat <= 64'd0;
	subfragments_syncfifo3_sink_payload_channel <= 8'd0;
	subfragments_syncfifo3_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo2_sink_payload_err <= 1'd0;
	subfragments_syncfifo2_sink_valid <= 1'd0;
	subfragments_syncfifo0_sink_valid <= 1'd0;
	subfragments_syncfifo2_sink_first <= 1'd0;
	subfragments_syncfifo0_sink_first <= 1'd0;
	subfragments_syncfifo2_sink_last <= 1'd0;
	subfragments_syncfifo0_sink_last <= 1'd0;
	subfragments_syncfifo2_sink_payload_adr <= 32'd0;
	subfragments_syncfifo0_sink_payload_adr <= 32'd0;
	subfragments_syncfifo2_sink_payload_len <= 10'd0;
	subfragments_syncfifo0_sink_payload_len <= 10'd0;
	subfragments_syncfifo0_sink_payload_end <= 1'd0;
	subfragments_syncfifo0_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo0_sink_payload_cmp_id <= 16'd0;
	case (subfragments_sink_sink_payload_tag)
		1'd0: begin
			subfragments_syncfifo0_sink_valid <= subfragments_sink_sink_valid;
			subfragments_sink_sink_ready <= subfragments_syncfifo0_sink_ready;
			subfragments_syncfifo0_sink_first <= subfragments_sink_sink_first;
			subfragments_syncfifo0_sink_last <= subfragments_sink_sink_last;
			subfragments_syncfifo0_sink_payload_adr <= subfragments_sink_sink_payload_adr;
			subfragments_syncfifo0_sink_payload_len <= subfragments_sink_sink_payload_len;
			subfragments_syncfifo0_sink_payload_end <= subfragments_sink_sink_payload_end;
			subfragments_syncfifo0_sink_payload_req_id <= subfragments_sink_sink_payload_req_id;
			subfragments_syncfifo0_sink_payload_cmp_id <= subfragments_sink_sink_payload_cmp_id;
			subfragments_syncfifo0_sink_payload_err <= subfragments_sink_sink_payload_err;
			subfragments_syncfifo0_sink_payload_tag <= subfragments_sink_sink_payload_tag;
			subfragments_syncfifo0_sink_payload_dat <= subfragments_sink_sink_payload_dat;
			subfragments_syncfifo0_sink_payload_channel <= subfragments_sink_sink_payload_channel;
			subfragments_syncfifo0_sink_payload_user_id <= subfragments_sink_sink_payload_user_id;
		end
		1'd1: begin
			subfragments_syncfifo1_sink_valid <= subfragments_sink_sink_valid;
			subfragments_sink_sink_ready <= subfragments_syncfifo1_sink_ready;
			subfragments_syncfifo1_sink_first <= subfragments_sink_sink_first;
			subfragments_syncfifo1_sink_last <= subfragments_sink_sink_last;
			subfragments_syncfifo1_sink_payload_adr <= subfragments_sink_sink_payload_adr;
			subfragments_syncfifo1_sink_payload_len <= subfragments_sink_sink_payload_len;
			subfragments_syncfifo1_sink_payload_end <= subfragments_sink_sink_payload_end;
			subfragments_syncfifo1_sink_payload_req_id <= subfragments_sink_sink_payload_req_id;
			subfragments_syncfifo1_sink_payload_cmp_id <= subfragments_sink_sink_payload_cmp_id;
			subfragments_syncfifo1_sink_payload_err <= subfragments_sink_sink_payload_err;
			subfragments_syncfifo1_sink_payload_tag <= subfragments_sink_sink_payload_tag;
			subfragments_syncfifo1_sink_payload_dat <= subfragments_sink_sink_payload_dat;
			subfragments_syncfifo1_sink_payload_channel <= subfragments_sink_sink_payload_channel;
			subfragments_syncfifo1_sink_payload_user_id <= subfragments_sink_sink_payload_user_id;
		end
		2'd2: begin
			subfragments_syncfifo2_sink_valid <= subfragments_sink_sink_valid;
			subfragments_sink_sink_ready <= subfragments_syncfifo2_sink_ready;
			subfragments_syncfifo2_sink_first <= subfragments_sink_sink_first;
			subfragments_syncfifo2_sink_last <= subfragments_sink_sink_last;
			subfragments_syncfifo2_sink_payload_adr <= subfragments_sink_sink_payload_adr;
			subfragments_syncfifo2_sink_payload_len <= subfragments_sink_sink_payload_len;
			subfragments_syncfifo2_sink_payload_end <= subfragments_sink_sink_payload_end;
			subfragments_syncfifo2_sink_payload_req_id <= subfragments_sink_sink_payload_req_id;
			subfragments_syncfifo2_sink_payload_cmp_id <= subfragments_sink_sink_payload_cmp_id;
			subfragments_syncfifo2_sink_payload_err <= subfragments_sink_sink_payload_err;
			subfragments_syncfifo2_sink_payload_tag <= subfragments_sink_sink_payload_tag;
			subfragments_syncfifo2_sink_payload_dat <= subfragments_sink_sink_payload_dat;
			subfragments_syncfifo2_sink_payload_channel <= subfragments_sink_sink_payload_channel;
			subfragments_syncfifo2_sink_payload_user_id <= subfragments_sink_sink_payload_user_id;
		end
		2'd3: begin
			subfragments_syncfifo3_sink_valid <= subfragments_sink_sink_valid;
			subfragments_sink_sink_ready <= subfragments_syncfifo3_sink_ready;
			subfragments_syncfifo3_sink_first <= subfragments_sink_sink_first;
			subfragments_syncfifo3_sink_last <= subfragments_sink_sink_last;
			subfragments_syncfifo3_sink_payload_adr <= subfragments_sink_sink_payload_adr;
			subfragments_syncfifo3_sink_payload_len <= subfragments_sink_sink_payload_len;
			subfragments_syncfifo3_sink_payload_end <= subfragments_sink_sink_payload_end;
			subfragments_syncfifo3_sink_payload_req_id <= subfragments_sink_sink_payload_req_id;
			subfragments_syncfifo3_sink_payload_cmp_id <= subfragments_sink_sink_payload_cmp_id;
			subfragments_syncfifo3_sink_payload_err <= subfragments_sink_sink_payload_err;
			subfragments_syncfifo3_sink_payload_tag <= subfragments_sink_sink_payload_tag;
			subfragments_syncfifo3_sink_payload_dat <= subfragments_sink_sink_payload_dat;
			subfragments_syncfifo3_sink_payload_channel <= subfragments_sink_sink_payload_channel;
			subfragments_syncfifo3_sink_payload_user_id <= subfragments_sink_sink_payload_user_id;
		end
		default: begin
			subfragments_sink_sink_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	subfragments_syncfifo3_source_ready <= 1'd0;
	subfragments_syncfifo2_source_ready <= 1'd0;
	subfragments_syncfifo1_source_ready <= 1'd0;
	subfragments_syncfifo0_source_ready <= 1'd0;
	subfragments_source_source_valid <= 1'd0;
	subfragments_source_source_first <= 1'd0;
	subfragments_source_source_last <= 1'd0;
	subfragments_source_source_payload_adr <= 32'd0;
	subfragments_source_source_payload_len <= 10'd0;
	subfragments_source_source_payload_end <= 1'd0;
	subfragments_source_source_payload_req_id <= 16'd0;
	subfragments_source_source_payload_cmp_id <= 16'd0;
	subfragments_source_source_payload_err <= 1'd0;
	subfragments_source_source_payload_tag <= 8'd0;
	subfragments_source_source_payload_dat <= 64'd0;
	subfragments_source_source_payload_channel <= 8'd0;
	subfragments_source_source_payload_user_id <= 8'd0;
	case (subfragments_tags_source_payload_data1)
		1'd0: begin
			subfragments_source_source_valid <= subfragments_syncfifo0_source_valid;
			subfragments_syncfifo0_source_ready <= subfragments_source_source_ready;
			subfragments_source_source_first <= subfragments_syncfifo0_source_first;
			subfragments_source_source_last <= subfragments_syncfifo0_source_last;
			subfragments_source_source_payload_adr <= subfragments_syncfifo0_source_payload_adr;
			subfragments_source_source_payload_len <= subfragments_syncfifo0_source_payload_len;
			subfragments_source_source_payload_end <= subfragments_syncfifo0_source_payload_end;
			subfragments_source_source_payload_req_id <= subfragments_syncfifo0_source_payload_req_id;
			subfragments_source_source_payload_cmp_id <= subfragments_syncfifo0_source_payload_cmp_id;
			subfragments_source_source_payload_err <= subfragments_syncfifo0_source_payload_err;
			subfragments_source_source_payload_tag <= subfragments_syncfifo0_source_payload_tag;
			subfragments_source_source_payload_dat <= subfragments_syncfifo0_source_payload_dat;
			subfragments_source_source_payload_channel <= subfragments_syncfifo0_source_payload_channel;
			subfragments_source_source_payload_user_id <= subfragments_syncfifo0_source_payload_user_id;
		end
		1'd1: begin
			subfragments_source_source_valid <= subfragments_syncfifo1_source_valid;
			subfragments_syncfifo1_source_ready <= subfragments_source_source_ready;
			subfragments_source_source_first <= subfragments_syncfifo1_source_first;
			subfragments_source_source_last <= subfragments_syncfifo1_source_last;
			subfragments_source_source_payload_adr <= subfragments_syncfifo1_source_payload_adr;
			subfragments_source_source_payload_len <= subfragments_syncfifo1_source_payload_len;
			subfragments_source_source_payload_end <= subfragments_syncfifo1_source_payload_end;
			subfragments_source_source_payload_req_id <= subfragments_syncfifo1_source_payload_req_id;
			subfragments_source_source_payload_cmp_id <= subfragments_syncfifo1_source_payload_cmp_id;
			subfragments_source_source_payload_err <= subfragments_syncfifo1_source_payload_err;
			subfragments_source_source_payload_tag <= subfragments_syncfifo1_source_payload_tag;
			subfragments_source_source_payload_dat <= subfragments_syncfifo1_source_payload_dat;
			subfragments_source_source_payload_channel <= subfragments_syncfifo1_source_payload_channel;
			subfragments_source_source_payload_user_id <= subfragments_syncfifo1_source_payload_user_id;
		end
		2'd2: begin
			subfragments_source_source_valid <= subfragments_syncfifo2_source_valid;
			subfragments_syncfifo2_source_ready <= subfragments_source_source_ready;
			subfragments_source_source_first <= subfragments_syncfifo2_source_first;
			subfragments_source_source_last <= subfragments_syncfifo2_source_last;
			subfragments_source_source_payload_adr <= subfragments_syncfifo2_source_payload_adr;
			subfragments_source_source_payload_len <= subfragments_syncfifo2_source_payload_len;
			subfragments_source_source_payload_end <= subfragments_syncfifo2_source_payload_end;
			subfragments_source_source_payload_req_id <= subfragments_syncfifo2_source_payload_req_id;
			subfragments_source_source_payload_cmp_id <= subfragments_syncfifo2_source_payload_cmp_id;
			subfragments_source_source_payload_err <= subfragments_syncfifo2_source_payload_err;
			subfragments_source_source_payload_tag <= subfragments_syncfifo2_source_payload_tag;
			subfragments_source_source_payload_dat <= subfragments_syncfifo2_source_payload_dat;
			subfragments_source_source_payload_channel <= subfragments_syncfifo2_source_payload_channel;
			subfragments_source_source_payload_user_id <= subfragments_syncfifo2_source_payload_user_id;
		end
		2'd3: begin
			subfragments_source_source_valid <= subfragments_syncfifo3_source_valid;
			subfragments_syncfifo3_source_ready <= subfragments_source_source_ready;
			subfragments_source_source_first <= subfragments_syncfifo3_source_first;
			subfragments_source_source_last <= subfragments_syncfifo3_source_last;
			subfragments_source_source_payload_adr <= subfragments_syncfifo3_source_payload_adr;
			subfragments_source_source_payload_len <= subfragments_syncfifo3_source_payload_len;
			subfragments_source_source_payload_end <= subfragments_syncfifo3_source_payload_end;
			subfragments_source_source_payload_req_id <= subfragments_syncfifo3_source_payload_req_id;
			subfragments_source_source_payload_cmp_id <= subfragments_syncfifo3_source_payload_cmp_id;
			subfragments_source_source_payload_err <= subfragments_syncfifo3_source_payload_err;
			subfragments_source_source_payload_tag <= subfragments_syncfifo3_source_payload_tag;
			subfragments_source_source_payload_dat <= subfragments_syncfifo3_source_payload_dat;
			subfragments_source_source_payload_channel <= subfragments_syncfifo3_source_payload_channel;
			subfragments_source_source_payload_user_id <= subfragments_syncfifo3_source_payload_user_id;
		end
	endcase
end
always @(*) begin
	subfragments_tags_source_ready1 <= 1'd0;
	if (((subfragments_source_source_valid & subfragments_source_source_last) & subfragments_source_source_payload_end)) begin
		subfragments_tags_source_ready1 <= subfragments_source_source_ready;
	end
end
assign subfragments_tags_syncfifo_din1 = {subfragments_tags_fifo_in_last1, subfragments_tags_fifo_in_first1, subfragments_tags_fifo_in_payload_data1};
assign {subfragments_tags_fifo_out_last1, subfragments_tags_fifo_out_first1, subfragments_tags_fifo_out_payload_data1} = subfragments_tags_syncfifo_dout1;
assign subfragments_tags_sink_ready1 = subfragments_tags_syncfifo_writable1;
assign subfragments_tags_syncfifo_we1 = subfragments_tags_sink_valid1;
assign subfragments_tags_fifo_in_first1 = subfragments_tags_sink_first1;
assign subfragments_tags_fifo_in_last1 = subfragments_tags_sink_last1;
assign subfragments_tags_fifo_in_payload_data1 = subfragments_tags_sink_payload_data1;
assign subfragments_tags_source_valid1 = subfragments_tags_readable1;
assign subfragments_tags_source_first1 = subfragments_tags_fifo_out_first1;
assign subfragments_tags_source_last1 = subfragments_tags_fifo_out_last1;
assign subfragments_tags_source_payload_data1 = subfragments_tags_fifo_out_payload_data1;
assign subfragments_tags_re1 = subfragments_tags_source_ready1;
assign subfragments_tags_syncfifo_re1 = (subfragments_tags_syncfifo_readable1 & ((~subfragments_tags_readable1) | subfragments_tags_re1));
assign subfragments_tags_level3 = (subfragments_tags_level2 + subfragments_tags_readable1);
always @(*) begin
	subfragments_tags_wrport_adr1 <= 5'd0;
	if (subfragments_tags_replace1) begin
		subfragments_tags_wrport_adr1 <= (subfragments_tags_produce1 - 1'd1);
	end else begin
		subfragments_tags_wrport_adr1 <= subfragments_tags_produce1;
	end
end
assign subfragments_tags_wrport_dat_w1 = subfragments_tags_syncfifo_din1;
assign subfragments_tags_wrport_we1 = (subfragments_tags_syncfifo_we1 & (subfragments_tags_syncfifo_writable1 | subfragments_tags_replace1));
assign subfragments_tags_do_read1 = (subfragments_tags_syncfifo_readable1 & subfragments_tags_syncfifo_re1);
assign subfragments_tags_rdport_adr1 = subfragments_tags_consume1;
assign subfragments_tags_syncfifo_dout1 = subfragments_tags_rdport_dat_r1;
assign subfragments_tags_rdport_re1 = subfragments_tags_do_read1;
assign subfragments_tags_syncfifo_writable1 = (subfragments_tags_level2 != 6'd32);
assign subfragments_tags_syncfifo_readable1 = (subfragments_tags_level2 != 1'd0);
assign subfragments_syncfifo0_syncfifo0_din = {subfragments_syncfifo0_fifo_in_last, subfragments_syncfifo0_fifo_in_first, subfragments_syncfifo0_fifo_in_payload_user_id, subfragments_syncfifo0_fifo_in_payload_channel, subfragments_syncfifo0_fifo_in_payload_dat, subfragments_syncfifo0_fifo_in_payload_tag, subfragments_syncfifo0_fifo_in_payload_err, subfragments_syncfifo0_fifo_in_payload_cmp_id, subfragments_syncfifo0_fifo_in_payload_req_id, subfragments_syncfifo0_fifo_in_payload_end, subfragments_syncfifo0_fifo_in_payload_len, subfragments_syncfifo0_fifo_in_payload_adr};
assign {subfragments_syncfifo0_fifo_out_last, subfragments_syncfifo0_fifo_out_first, subfragments_syncfifo0_fifo_out_payload_user_id, subfragments_syncfifo0_fifo_out_payload_channel, subfragments_syncfifo0_fifo_out_payload_dat, subfragments_syncfifo0_fifo_out_payload_tag, subfragments_syncfifo0_fifo_out_payload_err, subfragments_syncfifo0_fifo_out_payload_cmp_id, subfragments_syncfifo0_fifo_out_payload_req_id, subfragments_syncfifo0_fifo_out_payload_end, subfragments_syncfifo0_fifo_out_payload_len, subfragments_syncfifo0_fifo_out_payload_adr} = subfragments_syncfifo0_syncfifo0_dout;
assign subfragments_syncfifo0_sink_ready = subfragments_syncfifo0_syncfifo0_writable;
assign subfragments_syncfifo0_syncfifo0_we = subfragments_syncfifo0_sink_valid;
assign subfragments_syncfifo0_fifo_in_first = subfragments_syncfifo0_sink_first;
assign subfragments_syncfifo0_fifo_in_last = subfragments_syncfifo0_sink_last;
assign subfragments_syncfifo0_fifo_in_payload_adr = subfragments_syncfifo0_sink_payload_adr;
assign subfragments_syncfifo0_fifo_in_payload_len = subfragments_syncfifo0_sink_payload_len;
assign subfragments_syncfifo0_fifo_in_payload_end = subfragments_syncfifo0_sink_payload_end;
assign subfragments_syncfifo0_fifo_in_payload_req_id = subfragments_syncfifo0_sink_payload_req_id;
assign subfragments_syncfifo0_fifo_in_payload_cmp_id = subfragments_syncfifo0_sink_payload_cmp_id;
assign subfragments_syncfifo0_fifo_in_payload_err = subfragments_syncfifo0_sink_payload_err;
assign subfragments_syncfifo0_fifo_in_payload_tag = subfragments_syncfifo0_sink_payload_tag;
assign subfragments_syncfifo0_fifo_in_payload_dat = subfragments_syncfifo0_sink_payload_dat;
assign subfragments_syncfifo0_fifo_in_payload_channel = subfragments_syncfifo0_sink_payload_channel;
assign subfragments_syncfifo0_fifo_in_payload_user_id = subfragments_syncfifo0_sink_payload_user_id;
assign subfragments_syncfifo0_source_valid = subfragments_syncfifo0_readable;
assign subfragments_syncfifo0_source_first = subfragments_syncfifo0_fifo_out_first;
assign subfragments_syncfifo0_source_last = subfragments_syncfifo0_fifo_out_last;
assign subfragments_syncfifo0_source_payload_adr = subfragments_syncfifo0_fifo_out_payload_adr;
assign subfragments_syncfifo0_source_payload_len = subfragments_syncfifo0_fifo_out_payload_len;
assign subfragments_syncfifo0_source_payload_end = subfragments_syncfifo0_fifo_out_payload_end;
assign subfragments_syncfifo0_source_payload_req_id = subfragments_syncfifo0_fifo_out_payload_req_id;
assign subfragments_syncfifo0_source_payload_cmp_id = subfragments_syncfifo0_fifo_out_payload_cmp_id;
assign subfragments_syncfifo0_source_payload_err = subfragments_syncfifo0_fifo_out_payload_err;
assign subfragments_syncfifo0_source_payload_tag = subfragments_syncfifo0_fifo_out_payload_tag;
assign subfragments_syncfifo0_source_payload_dat = subfragments_syncfifo0_fifo_out_payload_dat;
assign subfragments_syncfifo0_source_payload_channel = subfragments_syncfifo0_fifo_out_payload_channel;
assign subfragments_syncfifo0_source_payload_user_id = subfragments_syncfifo0_fifo_out_payload_user_id;
assign subfragments_syncfifo0_re = subfragments_syncfifo0_source_ready;
assign subfragments_syncfifo0_syncfifo0_re = (subfragments_syncfifo0_syncfifo0_readable & ((~subfragments_syncfifo0_readable) | subfragments_syncfifo0_re));
assign subfragments_syncfifo0_level1 = (subfragments_syncfifo0_level0 + subfragments_syncfifo0_readable);
always @(*) begin
	subfragments_syncfifo0_wrport_adr <= 9'd0;
	if (subfragments_syncfifo0_replace) begin
		subfragments_syncfifo0_wrport_adr <= (subfragments_syncfifo0_produce - 1'd1);
	end else begin
		subfragments_syncfifo0_wrport_adr <= subfragments_syncfifo0_produce;
	end
end
assign subfragments_syncfifo0_wrport_dat_w = subfragments_syncfifo0_syncfifo0_din;
assign subfragments_syncfifo0_wrport_we = (subfragments_syncfifo0_syncfifo0_we & (subfragments_syncfifo0_syncfifo0_writable | subfragments_syncfifo0_replace));
assign subfragments_syncfifo0_do_read = (subfragments_syncfifo0_syncfifo0_readable & subfragments_syncfifo0_syncfifo0_re);
assign subfragments_syncfifo0_rdport_adr = subfragments_syncfifo0_consume;
assign subfragments_syncfifo0_syncfifo0_dout = subfragments_syncfifo0_rdport_dat_r;
assign subfragments_syncfifo0_rdport_re = subfragments_syncfifo0_do_read;
assign subfragments_syncfifo0_syncfifo0_writable = (subfragments_syncfifo0_level0 != 10'd512);
assign subfragments_syncfifo0_syncfifo0_readable = (subfragments_syncfifo0_level0 != 1'd0);
assign subfragments_syncfifo1_syncfifo1_din = {subfragments_syncfifo1_fifo_in_last, subfragments_syncfifo1_fifo_in_first, subfragments_syncfifo1_fifo_in_payload_user_id, subfragments_syncfifo1_fifo_in_payload_channel, subfragments_syncfifo1_fifo_in_payload_dat, subfragments_syncfifo1_fifo_in_payload_tag, subfragments_syncfifo1_fifo_in_payload_err, subfragments_syncfifo1_fifo_in_payload_cmp_id, subfragments_syncfifo1_fifo_in_payload_req_id, subfragments_syncfifo1_fifo_in_payload_end, subfragments_syncfifo1_fifo_in_payload_len, subfragments_syncfifo1_fifo_in_payload_adr};
assign {subfragments_syncfifo1_fifo_out_last, subfragments_syncfifo1_fifo_out_first, subfragments_syncfifo1_fifo_out_payload_user_id, subfragments_syncfifo1_fifo_out_payload_channel, subfragments_syncfifo1_fifo_out_payload_dat, subfragments_syncfifo1_fifo_out_payload_tag, subfragments_syncfifo1_fifo_out_payload_err, subfragments_syncfifo1_fifo_out_payload_cmp_id, subfragments_syncfifo1_fifo_out_payload_req_id, subfragments_syncfifo1_fifo_out_payload_end, subfragments_syncfifo1_fifo_out_payload_len, subfragments_syncfifo1_fifo_out_payload_adr} = subfragments_syncfifo1_syncfifo1_dout;
assign subfragments_syncfifo1_sink_ready = subfragments_syncfifo1_syncfifo1_writable;
assign subfragments_syncfifo1_syncfifo1_we = subfragments_syncfifo1_sink_valid;
assign subfragments_syncfifo1_fifo_in_first = subfragments_syncfifo1_sink_first;
assign subfragments_syncfifo1_fifo_in_last = subfragments_syncfifo1_sink_last;
assign subfragments_syncfifo1_fifo_in_payload_adr = subfragments_syncfifo1_sink_payload_adr;
assign subfragments_syncfifo1_fifo_in_payload_len = subfragments_syncfifo1_sink_payload_len;
assign subfragments_syncfifo1_fifo_in_payload_end = subfragments_syncfifo1_sink_payload_end;
assign subfragments_syncfifo1_fifo_in_payload_req_id = subfragments_syncfifo1_sink_payload_req_id;
assign subfragments_syncfifo1_fifo_in_payload_cmp_id = subfragments_syncfifo1_sink_payload_cmp_id;
assign subfragments_syncfifo1_fifo_in_payload_err = subfragments_syncfifo1_sink_payload_err;
assign subfragments_syncfifo1_fifo_in_payload_tag = subfragments_syncfifo1_sink_payload_tag;
assign subfragments_syncfifo1_fifo_in_payload_dat = subfragments_syncfifo1_sink_payload_dat;
assign subfragments_syncfifo1_fifo_in_payload_channel = subfragments_syncfifo1_sink_payload_channel;
assign subfragments_syncfifo1_fifo_in_payload_user_id = subfragments_syncfifo1_sink_payload_user_id;
assign subfragments_syncfifo1_source_valid = subfragments_syncfifo1_readable;
assign subfragments_syncfifo1_source_first = subfragments_syncfifo1_fifo_out_first;
assign subfragments_syncfifo1_source_last = subfragments_syncfifo1_fifo_out_last;
assign subfragments_syncfifo1_source_payload_adr = subfragments_syncfifo1_fifo_out_payload_adr;
assign subfragments_syncfifo1_source_payload_len = subfragments_syncfifo1_fifo_out_payload_len;
assign subfragments_syncfifo1_source_payload_end = subfragments_syncfifo1_fifo_out_payload_end;
assign subfragments_syncfifo1_source_payload_req_id = subfragments_syncfifo1_fifo_out_payload_req_id;
assign subfragments_syncfifo1_source_payload_cmp_id = subfragments_syncfifo1_fifo_out_payload_cmp_id;
assign subfragments_syncfifo1_source_payload_err = subfragments_syncfifo1_fifo_out_payload_err;
assign subfragments_syncfifo1_source_payload_tag = subfragments_syncfifo1_fifo_out_payload_tag;
assign subfragments_syncfifo1_source_payload_dat = subfragments_syncfifo1_fifo_out_payload_dat;
assign subfragments_syncfifo1_source_payload_channel = subfragments_syncfifo1_fifo_out_payload_channel;
assign subfragments_syncfifo1_source_payload_user_id = subfragments_syncfifo1_fifo_out_payload_user_id;
assign subfragments_syncfifo1_re = subfragments_syncfifo1_source_ready;
assign subfragments_syncfifo1_syncfifo1_re = (subfragments_syncfifo1_syncfifo1_readable & ((~subfragments_syncfifo1_readable) | subfragments_syncfifo1_re));
assign subfragments_syncfifo1_level1 = (subfragments_syncfifo1_level0 + subfragments_syncfifo1_readable);
always @(*) begin
	subfragments_syncfifo1_wrport_adr <= 9'd0;
	if (subfragments_syncfifo1_replace) begin
		subfragments_syncfifo1_wrport_adr <= (subfragments_syncfifo1_produce - 1'd1);
	end else begin
		subfragments_syncfifo1_wrport_adr <= subfragments_syncfifo1_produce;
	end
end
assign subfragments_syncfifo1_wrport_dat_w = subfragments_syncfifo1_syncfifo1_din;
assign subfragments_syncfifo1_wrport_we = (subfragments_syncfifo1_syncfifo1_we & (subfragments_syncfifo1_syncfifo1_writable | subfragments_syncfifo1_replace));
assign subfragments_syncfifo1_do_read = (subfragments_syncfifo1_syncfifo1_readable & subfragments_syncfifo1_syncfifo1_re);
assign subfragments_syncfifo1_rdport_adr = subfragments_syncfifo1_consume;
assign subfragments_syncfifo1_syncfifo1_dout = subfragments_syncfifo1_rdport_dat_r;
assign subfragments_syncfifo1_rdport_re = subfragments_syncfifo1_do_read;
assign subfragments_syncfifo1_syncfifo1_writable = (subfragments_syncfifo1_level0 != 10'd512);
assign subfragments_syncfifo1_syncfifo1_readable = (subfragments_syncfifo1_level0 != 1'd0);
assign subfragments_syncfifo2_syncfifo2_din = {subfragments_syncfifo2_fifo_in_last, subfragments_syncfifo2_fifo_in_first, subfragments_syncfifo2_fifo_in_payload_user_id, subfragments_syncfifo2_fifo_in_payload_channel, subfragments_syncfifo2_fifo_in_payload_dat, subfragments_syncfifo2_fifo_in_payload_tag, subfragments_syncfifo2_fifo_in_payload_err, subfragments_syncfifo2_fifo_in_payload_cmp_id, subfragments_syncfifo2_fifo_in_payload_req_id, subfragments_syncfifo2_fifo_in_payload_end, subfragments_syncfifo2_fifo_in_payload_len, subfragments_syncfifo2_fifo_in_payload_adr};
assign {subfragments_syncfifo2_fifo_out_last, subfragments_syncfifo2_fifo_out_first, subfragments_syncfifo2_fifo_out_payload_user_id, subfragments_syncfifo2_fifo_out_payload_channel, subfragments_syncfifo2_fifo_out_payload_dat, subfragments_syncfifo2_fifo_out_payload_tag, subfragments_syncfifo2_fifo_out_payload_err, subfragments_syncfifo2_fifo_out_payload_cmp_id, subfragments_syncfifo2_fifo_out_payload_req_id, subfragments_syncfifo2_fifo_out_payload_end, subfragments_syncfifo2_fifo_out_payload_len, subfragments_syncfifo2_fifo_out_payload_adr} = subfragments_syncfifo2_syncfifo2_dout;
assign subfragments_syncfifo2_sink_ready = subfragments_syncfifo2_syncfifo2_writable;
assign subfragments_syncfifo2_syncfifo2_we = subfragments_syncfifo2_sink_valid;
assign subfragments_syncfifo2_fifo_in_first = subfragments_syncfifo2_sink_first;
assign subfragments_syncfifo2_fifo_in_last = subfragments_syncfifo2_sink_last;
assign subfragments_syncfifo2_fifo_in_payload_adr = subfragments_syncfifo2_sink_payload_adr;
assign subfragments_syncfifo2_fifo_in_payload_len = subfragments_syncfifo2_sink_payload_len;
assign subfragments_syncfifo2_fifo_in_payload_end = subfragments_syncfifo2_sink_payload_end;
assign subfragments_syncfifo2_fifo_in_payload_req_id = subfragments_syncfifo2_sink_payload_req_id;
assign subfragments_syncfifo2_fifo_in_payload_cmp_id = subfragments_syncfifo2_sink_payload_cmp_id;
assign subfragments_syncfifo2_fifo_in_payload_err = subfragments_syncfifo2_sink_payload_err;
assign subfragments_syncfifo2_fifo_in_payload_tag = subfragments_syncfifo2_sink_payload_tag;
assign subfragments_syncfifo2_fifo_in_payload_dat = subfragments_syncfifo2_sink_payload_dat;
assign subfragments_syncfifo2_fifo_in_payload_channel = subfragments_syncfifo2_sink_payload_channel;
assign subfragments_syncfifo2_fifo_in_payload_user_id = subfragments_syncfifo2_sink_payload_user_id;
assign subfragments_syncfifo2_source_valid = subfragments_syncfifo2_readable;
assign subfragments_syncfifo2_source_first = subfragments_syncfifo2_fifo_out_first;
assign subfragments_syncfifo2_source_last = subfragments_syncfifo2_fifo_out_last;
assign subfragments_syncfifo2_source_payload_adr = subfragments_syncfifo2_fifo_out_payload_adr;
assign subfragments_syncfifo2_source_payload_len = subfragments_syncfifo2_fifo_out_payload_len;
assign subfragments_syncfifo2_source_payload_end = subfragments_syncfifo2_fifo_out_payload_end;
assign subfragments_syncfifo2_source_payload_req_id = subfragments_syncfifo2_fifo_out_payload_req_id;
assign subfragments_syncfifo2_source_payload_cmp_id = subfragments_syncfifo2_fifo_out_payload_cmp_id;
assign subfragments_syncfifo2_source_payload_err = subfragments_syncfifo2_fifo_out_payload_err;
assign subfragments_syncfifo2_source_payload_tag = subfragments_syncfifo2_fifo_out_payload_tag;
assign subfragments_syncfifo2_source_payload_dat = subfragments_syncfifo2_fifo_out_payload_dat;
assign subfragments_syncfifo2_source_payload_channel = subfragments_syncfifo2_fifo_out_payload_channel;
assign subfragments_syncfifo2_source_payload_user_id = subfragments_syncfifo2_fifo_out_payload_user_id;
assign subfragments_syncfifo2_re = subfragments_syncfifo2_source_ready;
assign subfragments_syncfifo2_syncfifo2_re = (subfragments_syncfifo2_syncfifo2_readable & ((~subfragments_syncfifo2_readable) | subfragments_syncfifo2_re));
assign subfragments_syncfifo2_level1 = (subfragments_syncfifo2_level0 + subfragments_syncfifo2_readable);
always @(*) begin
	subfragments_syncfifo2_wrport_adr <= 9'd0;
	if (subfragments_syncfifo2_replace) begin
		subfragments_syncfifo2_wrport_adr <= (subfragments_syncfifo2_produce - 1'd1);
	end else begin
		subfragments_syncfifo2_wrport_adr <= subfragments_syncfifo2_produce;
	end
end
assign subfragments_syncfifo2_wrport_dat_w = subfragments_syncfifo2_syncfifo2_din;
assign subfragments_syncfifo2_wrport_we = (subfragments_syncfifo2_syncfifo2_we & (subfragments_syncfifo2_syncfifo2_writable | subfragments_syncfifo2_replace));
assign subfragments_syncfifo2_do_read = (subfragments_syncfifo2_syncfifo2_readable & subfragments_syncfifo2_syncfifo2_re);
assign subfragments_syncfifo2_rdport_adr = subfragments_syncfifo2_consume;
assign subfragments_syncfifo2_syncfifo2_dout = subfragments_syncfifo2_rdport_dat_r;
assign subfragments_syncfifo2_rdport_re = subfragments_syncfifo2_do_read;
assign subfragments_syncfifo2_syncfifo2_writable = (subfragments_syncfifo2_level0 != 10'd512);
assign subfragments_syncfifo2_syncfifo2_readable = (subfragments_syncfifo2_level0 != 1'd0);
assign subfragments_syncfifo3_syncfifo3_din = {subfragments_syncfifo3_fifo_in_last, subfragments_syncfifo3_fifo_in_first, subfragments_syncfifo3_fifo_in_payload_user_id, subfragments_syncfifo3_fifo_in_payload_channel, subfragments_syncfifo3_fifo_in_payload_dat, subfragments_syncfifo3_fifo_in_payload_tag, subfragments_syncfifo3_fifo_in_payload_err, subfragments_syncfifo3_fifo_in_payload_cmp_id, subfragments_syncfifo3_fifo_in_payload_req_id, subfragments_syncfifo3_fifo_in_payload_end, subfragments_syncfifo3_fifo_in_payload_len, subfragments_syncfifo3_fifo_in_payload_adr};
assign {subfragments_syncfifo3_fifo_out_last, subfragments_syncfifo3_fifo_out_first, subfragments_syncfifo3_fifo_out_payload_user_id, subfragments_syncfifo3_fifo_out_payload_channel, subfragments_syncfifo3_fifo_out_payload_dat, subfragments_syncfifo3_fifo_out_payload_tag, subfragments_syncfifo3_fifo_out_payload_err, subfragments_syncfifo3_fifo_out_payload_cmp_id, subfragments_syncfifo3_fifo_out_payload_req_id, subfragments_syncfifo3_fifo_out_payload_end, subfragments_syncfifo3_fifo_out_payload_len, subfragments_syncfifo3_fifo_out_payload_adr} = subfragments_syncfifo3_syncfifo3_dout;
assign subfragments_syncfifo3_sink_ready = subfragments_syncfifo3_syncfifo3_writable;
assign subfragments_syncfifo3_syncfifo3_we = subfragments_syncfifo3_sink_valid;
assign subfragments_syncfifo3_fifo_in_first = subfragments_syncfifo3_sink_first;
assign subfragments_syncfifo3_fifo_in_last = subfragments_syncfifo3_sink_last;
assign subfragments_syncfifo3_fifo_in_payload_adr = subfragments_syncfifo3_sink_payload_adr;
assign subfragments_syncfifo3_fifo_in_payload_len = subfragments_syncfifo3_sink_payload_len;
assign subfragments_syncfifo3_fifo_in_payload_end = subfragments_syncfifo3_sink_payload_end;
assign subfragments_syncfifo3_fifo_in_payload_req_id = subfragments_syncfifo3_sink_payload_req_id;
assign subfragments_syncfifo3_fifo_in_payload_cmp_id = subfragments_syncfifo3_sink_payload_cmp_id;
assign subfragments_syncfifo3_fifo_in_payload_err = subfragments_syncfifo3_sink_payload_err;
assign subfragments_syncfifo3_fifo_in_payload_tag = subfragments_syncfifo3_sink_payload_tag;
assign subfragments_syncfifo3_fifo_in_payload_dat = subfragments_syncfifo3_sink_payload_dat;
assign subfragments_syncfifo3_fifo_in_payload_channel = subfragments_syncfifo3_sink_payload_channel;
assign subfragments_syncfifo3_fifo_in_payload_user_id = subfragments_syncfifo3_sink_payload_user_id;
assign subfragments_syncfifo3_source_valid = subfragments_syncfifo3_readable;
assign subfragments_syncfifo3_source_first = subfragments_syncfifo3_fifo_out_first;
assign subfragments_syncfifo3_source_last = subfragments_syncfifo3_fifo_out_last;
assign subfragments_syncfifo3_source_payload_adr = subfragments_syncfifo3_fifo_out_payload_adr;
assign subfragments_syncfifo3_source_payload_len = subfragments_syncfifo3_fifo_out_payload_len;
assign subfragments_syncfifo3_source_payload_end = subfragments_syncfifo3_fifo_out_payload_end;
assign subfragments_syncfifo3_source_payload_req_id = subfragments_syncfifo3_fifo_out_payload_req_id;
assign subfragments_syncfifo3_source_payload_cmp_id = subfragments_syncfifo3_fifo_out_payload_cmp_id;
assign subfragments_syncfifo3_source_payload_err = subfragments_syncfifo3_fifo_out_payload_err;
assign subfragments_syncfifo3_source_payload_tag = subfragments_syncfifo3_fifo_out_payload_tag;
assign subfragments_syncfifo3_source_payload_dat = subfragments_syncfifo3_fifo_out_payload_dat;
assign subfragments_syncfifo3_source_payload_channel = subfragments_syncfifo3_fifo_out_payload_channel;
assign subfragments_syncfifo3_source_payload_user_id = subfragments_syncfifo3_fifo_out_payload_user_id;
assign subfragments_syncfifo3_re = subfragments_syncfifo3_source_ready;
assign subfragments_syncfifo3_syncfifo3_re = (subfragments_syncfifo3_syncfifo3_readable & ((~subfragments_syncfifo3_readable) | subfragments_syncfifo3_re));
assign subfragments_syncfifo3_level1 = (subfragments_syncfifo3_level0 + subfragments_syncfifo3_readable);
always @(*) begin
	subfragments_syncfifo3_wrport_adr <= 9'd0;
	if (subfragments_syncfifo3_replace) begin
		subfragments_syncfifo3_wrport_adr <= (subfragments_syncfifo3_produce - 1'd1);
	end else begin
		subfragments_syncfifo3_wrport_adr <= subfragments_syncfifo3_produce;
	end
end
assign subfragments_syncfifo3_wrport_dat_w = subfragments_syncfifo3_syncfifo3_din;
assign subfragments_syncfifo3_wrport_we = (subfragments_syncfifo3_syncfifo3_we & (subfragments_syncfifo3_syncfifo3_writable | subfragments_syncfifo3_replace));
assign subfragments_syncfifo3_do_read = (subfragments_syncfifo3_syncfifo3_readable & subfragments_syncfifo3_syncfifo3_re);
assign subfragments_syncfifo3_rdport_adr = subfragments_syncfifo3_consume;
assign subfragments_syncfifo3_syncfifo3_dout = subfragments_syncfifo3_rdport_dat_r;
assign subfragments_syncfifo3_rdport_re = subfragments_syncfifo3_do_read;
assign subfragments_syncfifo3_syncfifo3_writable = (subfragments_syncfifo3_level0 != 10'd512);
assign subfragments_syncfifo3_syncfifo3_readable = (subfragments_syncfifo3_level0 != 1'd0);
always @(*) begin
	subfragments_fsm1_next_state0 <= 2'd0;
	subfragments_tags_sink_valid0 <= 1'd0;
	subfragments_tag_init_litepciecrossbar_next_value <= 2'd0;
	subfragments_sink_sink_valid <= 1'd0;
	subfragments_master_out_source_ready <= 1'd0;
	subfragments_tags_sink_payload_data0 <= 2'd0;
	subfragments_tag_init_litepciecrossbar_next_value_ce <= 1'd0;
	subfragments_fsm1_next_state0 <= subfragments_fsm1_state0;
	case (subfragments_fsm1_state0)
		1'd1: begin
			if ((subfragments_master_out_source_valid & subfragments_master_out_source_first)) begin
				subfragments_fsm1_next_state0 <= 2'd2;
			end else begin
				subfragments_master_out_source_ready <= 1'd1;
			end
		end
		2'd2: begin
			subfragments_sink_sink_valid <= subfragments_master_out_source_valid;
			subfragments_master_out_source_ready <= subfragments_sink_sink_ready;
			if (((subfragments_master_out_source_valid & subfragments_master_out_source_last) & subfragments_master_out_source_ready)) begin
				if (subfragments_master_out_source_payload_end) begin
					subfragments_tags_sink_valid0 <= 1'd1;
					subfragments_tags_sink_payload_data0 <= subfragments_master_out_source_payload_tag;
				end
				subfragments_fsm1_next_state0 <= 1'd1;
			end
		end
		default: begin
			subfragments_tags_sink_valid0 <= 1'd1;
			subfragments_tags_sink_payload_data0 <= subfragments_tag_init;
			subfragments_tag_init_litepciecrossbar_next_value <= (subfragments_tag_init + 1'd1);
			subfragments_tag_init_litepciecrossbar_next_value_ce <= 1'd1;
			if ((subfragments_tag_init == 2'd3)) begin
				subfragments_fsm1_next_state0 <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	subfragments_arbiter0_request <= 3'd0;
	subfragments_arbiter0_request[0] <= subfragments_arbiter0_status0_ongoing0;
	subfragments_arbiter0_request[1] <= subfragments_arbiter0_status1_ongoing0;
	subfragments_arbiter0_request[2] <= subfragments_arbiter0_status2_ongoing0;
end
always @(*) begin
	subfragments_master_in_sink_last <= 1'd0;
	litepciedma2_litepciemasterinternalport5_sink_ready <= 1'd0;
	subfragments_master_in_sink_payload_we <= 1'd0;
	subfragments_master_in_sink_payload_adr <= 32'd0;
	litepciedma1_litepciemasterinternalport3_sink_ready <= 1'd0;
	subfragments_master_in_sink_payload_len <= 10'd0;
	subfragments_master_in_sink_payload_req_id <= 16'd0;
	litepciedma0_litepciemasterinternalport1_sink_ready <= 1'd0;
	subfragments_master_in_sink_payload_tag <= 8'd0;
	subfragments_master_in_sink_payload_dat <= 64'd0;
	subfragments_master_in_sink_payload_channel <= 8'd0;
	subfragments_master_in_sink_payload_user_id <= 8'd0;
	subfragments_master_in_sink_valid <= 1'd0;
	subfragments_master_in_sink_first <= 1'd0;
	case (subfragments_arbiter0_grant)
		1'd0: begin
			subfragments_master_in_sink_valid <= litepciedma0_litepciemasterinternalport1_sink_valid;
			litepciedma0_litepciemasterinternalport1_sink_ready <= subfragments_master_in_sink_ready;
			subfragments_master_in_sink_first <= litepciedma0_litepciemasterinternalport1_sink_first;
			subfragments_master_in_sink_last <= litepciedma0_litepciemasterinternalport1_sink_last;
			subfragments_master_in_sink_payload_we <= litepciedma0_litepciemasterinternalport1_sink_payload_we;
			subfragments_master_in_sink_payload_adr <= litepciedma0_litepciemasterinternalport1_sink_payload_adr;
			subfragments_master_in_sink_payload_len <= litepciedma0_litepciemasterinternalport1_sink_payload_len;
			subfragments_master_in_sink_payload_req_id <= litepciedma0_litepciemasterinternalport1_sink_payload_req_id;
			subfragments_master_in_sink_payload_tag <= litepciedma0_litepciemasterinternalport1_sink_payload_tag;
			subfragments_master_in_sink_payload_dat <= litepciedma0_litepciemasterinternalport1_sink_payload_dat;
			subfragments_master_in_sink_payload_channel <= litepciedma0_litepciemasterinternalport1_sink_payload_channel;
			subfragments_master_in_sink_payload_user_id <= litepciedma0_litepciemasterinternalport1_sink_payload_user_id;
		end
		1'd1: begin
			subfragments_master_in_sink_valid <= litepciedma1_litepciemasterinternalport3_sink_valid;
			litepciedma1_litepciemasterinternalport3_sink_ready <= subfragments_master_in_sink_ready;
			subfragments_master_in_sink_first <= litepciedma1_litepciemasterinternalport3_sink_first;
			subfragments_master_in_sink_last <= litepciedma1_litepciemasterinternalport3_sink_last;
			subfragments_master_in_sink_payload_we <= litepciedma1_litepciemasterinternalport3_sink_payload_we;
			subfragments_master_in_sink_payload_adr <= litepciedma1_litepciemasterinternalport3_sink_payload_adr;
			subfragments_master_in_sink_payload_len <= litepciedma1_litepciemasterinternalport3_sink_payload_len;
			subfragments_master_in_sink_payload_req_id <= litepciedma1_litepciemasterinternalport3_sink_payload_req_id;
			subfragments_master_in_sink_payload_tag <= litepciedma1_litepciemasterinternalport3_sink_payload_tag;
			subfragments_master_in_sink_payload_dat <= litepciedma1_litepciemasterinternalport3_sink_payload_dat;
			subfragments_master_in_sink_payload_channel <= litepciedma1_litepciemasterinternalport3_sink_payload_channel;
			subfragments_master_in_sink_payload_user_id <= litepciedma1_litepciemasterinternalport3_sink_payload_user_id;
		end
		2'd2: begin
			subfragments_master_in_sink_valid <= litepciedma2_litepciemasterinternalport5_sink_valid;
			litepciedma2_litepciemasterinternalport5_sink_ready <= subfragments_master_in_sink_ready;
			subfragments_master_in_sink_first <= litepciedma2_litepciemasterinternalport5_sink_first;
			subfragments_master_in_sink_last <= litepciedma2_litepciemasterinternalport5_sink_last;
			subfragments_master_in_sink_payload_we <= litepciedma2_litepciemasterinternalport5_sink_payload_we;
			subfragments_master_in_sink_payload_adr <= litepciedma2_litepciemasterinternalport5_sink_payload_adr;
			subfragments_master_in_sink_payload_len <= litepciedma2_litepciemasterinternalport5_sink_payload_len;
			subfragments_master_in_sink_payload_req_id <= litepciedma2_litepciemasterinternalport5_sink_payload_req_id;
			subfragments_master_in_sink_payload_tag <= litepciedma2_litepciemasterinternalport5_sink_payload_tag;
			subfragments_master_in_sink_payload_dat <= litepciedma2_litepciemasterinternalport5_sink_payload_dat;
			subfragments_master_in_sink_payload_channel <= litepciedma2_litepciemasterinternalport5_sink_payload_channel;
			subfragments_master_in_sink_payload_user_id <= litepciedma2_litepciemasterinternalport5_sink_payload_user_id;
		end
	endcase
end
always @(*) begin
	subfragments_arbiter0_status0_last <= 1'd0;
	if (litepciedma0_litepciemasterinternalport1_sink_valid) begin
		subfragments_arbiter0_status0_last <= (litepciedma0_litepciemasterinternalport1_sink_last & litepciedma0_litepciemasterinternalport1_sink_ready);
	end
end
assign subfragments_arbiter0_status0_ongoing0 = ((litepciedma0_litepciemasterinternalport1_sink_valid | subfragments_arbiter0_status0_ongoing1) & (~subfragments_arbiter0_status0_last));
always @(*) begin
	subfragments_arbiter0_status1_last <= 1'd0;
	if (litepciedma1_litepciemasterinternalport3_sink_valid) begin
		subfragments_arbiter0_status1_last <= (litepciedma1_litepciemasterinternalport3_sink_last & litepciedma1_litepciemasterinternalport3_sink_ready);
	end
end
assign subfragments_arbiter0_status1_ongoing0 = ((litepciedma1_litepciemasterinternalport3_sink_valid | subfragments_arbiter0_status1_ongoing1) & (~subfragments_arbiter0_status1_last));
always @(*) begin
	subfragments_arbiter0_status2_last <= 1'd0;
	if (litepciedma2_litepciemasterinternalport5_sink_valid) begin
		subfragments_arbiter0_status2_last <= (litepciedma2_litepciemasterinternalport5_sink_last & litepciedma2_litepciemasterinternalport5_sink_ready);
	end
end
assign subfragments_arbiter0_status2_ongoing0 = ((litepciedma2_litepciemasterinternalport5_sink_valid | subfragments_arbiter0_status2_ongoing1) & (~subfragments_arbiter0_status2_last));
always @(*) begin
	subfragments_dispatcher0_sel1 <= 3'd0;
	if (subfragments_dispatcher0_first) begin
		subfragments_dispatcher0_sel1 <= subfragments_dispatcher0_sel0;
	end else begin
		subfragments_dispatcher0_sel1 <= subfragments_dispatcher0_sel_ongoing;
	end
end
always @(*) begin
	litepciedma2_litepciemasterinternalport5_source_valid <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_first <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_last <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_adr <= 32'd0;
	litepciedma0_litepciemasterinternalport1_source_valid <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_len <= 10'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_end <= 1'd0;
	litepciedma0_litepciemasterinternalport1_source_first <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_req_id <= 16'd0;
	litepciedma0_litepciemasterinternalport1_source_last <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_cmp_id <= 16'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_adr <= 32'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_err <= 1'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_len <= 10'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_tag <= 8'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_end <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_dat <= 64'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_req_id <= 16'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_channel <= 8'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_cmp_id <= 16'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_user_id <= 8'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_err <= 1'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_tag <= 8'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_dat <= 64'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_channel <= 8'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_user_id <= 8'd0;
	subfragments_master_in_source_ready <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_valid <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_first <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_last <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_adr <= 32'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_len <= 10'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_end <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_req_id <= 16'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_cmp_id <= 16'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_err <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_tag <= 8'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_dat <= 64'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_channel <= 8'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_user_id <= 8'd0;
	case (subfragments_dispatcher0_sel1)
		1'd1: begin
			litepciedma0_litepciemasterinternalport1_source_valid <= subfragments_master_in_source_valid;
			subfragments_master_in_source_ready <= litepciedma0_litepciemasterinternalport1_source_ready;
			litepciedma0_litepciemasterinternalport1_source_first <= subfragments_master_in_source_first;
			litepciedma0_litepciemasterinternalport1_source_last <= subfragments_master_in_source_last;
			litepciedma0_litepciemasterinternalport1_source_payload_adr <= subfragments_master_in_source_payload_adr;
			litepciedma0_litepciemasterinternalport1_source_payload_len <= subfragments_master_in_source_payload_len;
			litepciedma0_litepciemasterinternalport1_source_payload_end <= subfragments_master_in_source_payload_end;
			litepciedma0_litepciemasterinternalport1_source_payload_req_id <= subfragments_master_in_source_payload_req_id;
			litepciedma0_litepciemasterinternalport1_source_payload_cmp_id <= subfragments_master_in_source_payload_cmp_id;
			litepciedma0_litepciemasterinternalport1_source_payload_err <= subfragments_master_in_source_payload_err;
			litepciedma0_litepciemasterinternalport1_source_payload_tag <= subfragments_master_in_source_payload_tag;
			litepciedma0_litepciemasterinternalport1_source_payload_dat <= subfragments_master_in_source_payload_dat;
			litepciedma0_litepciemasterinternalport1_source_payload_channel <= subfragments_master_in_source_payload_channel;
			litepciedma0_litepciemasterinternalport1_source_payload_user_id <= subfragments_master_in_source_payload_user_id;
		end
		2'd2: begin
			litepciedma1_litepciemasterinternalport3_source_valid <= subfragments_master_in_source_valid;
			subfragments_master_in_source_ready <= litepciedma1_litepciemasterinternalport3_source_ready;
			litepciedma1_litepciemasterinternalport3_source_first <= subfragments_master_in_source_first;
			litepciedma1_litepciemasterinternalport3_source_last <= subfragments_master_in_source_last;
			litepciedma1_litepciemasterinternalport3_source_payload_adr <= subfragments_master_in_source_payload_adr;
			litepciedma1_litepciemasterinternalport3_source_payload_len <= subfragments_master_in_source_payload_len;
			litepciedma1_litepciemasterinternalport3_source_payload_end <= subfragments_master_in_source_payload_end;
			litepciedma1_litepciemasterinternalport3_source_payload_req_id <= subfragments_master_in_source_payload_req_id;
			litepciedma1_litepciemasterinternalport3_source_payload_cmp_id <= subfragments_master_in_source_payload_cmp_id;
			litepciedma1_litepciemasterinternalport3_source_payload_err <= subfragments_master_in_source_payload_err;
			litepciedma1_litepciemasterinternalport3_source_payload_tag <= subfragments_master_in_source_payload_tag;
			litepciedma1_litepciemasterinternalport3_source_payload_dat <= subfragments_master_in_source_payload_dat;
			litepciedma1_litepciemasterinternalport3_source_payload_channel <= subfragments_master_in_source_payload_channel;
			litepciedma1_litepciemasterinternalport3_source_payload_user_id <= subfragments_master_in_source_payload_user_id;
		end
		3'd4: begin
			litepciedma2_litepciemasterinternalport5_source_valid <= subfragments_master_in_source_valid;
			subfragments_master_in_source_ready <= litepciedma2_litepciemasterinternalport5_source_ready;
			litepciedma2_litepciemasterinternalport5_source_first <= subfragments_master_in_source_first;
			litepciedma2_litepciemasterinternalport5_source_last <= subfragments_master_in_source_last;
			litepciedma2_litepciemasterinternalport5_source_payload_adr <= subfragments_master_in_source_payload_adr;
			litepciedma2_litepciemasterinternalport5_source_payload_len <= subfragments_master_in_source_payload_len;
			litepciedma2_litepciemasterinternalport5_source_payload_end <= subfragments_master_in_source_payload_end;
			litepciedma2_litepciemasterinternalport5_source_payload_req_id <= subfragments_master_in_source_payload_req_id;
			litepciedma2_litepciemasterinternalport5_source_payload_cmp_id <= subfragments_master_in_source_payload_cmp_id;
			litepciedma2_litepciemasterinternalport5_source_payload_err <= subfragments_master_in_source_payload_err;
			litepciedma2_litepciemasterinternalport5_source_payload_tag <= subfragments_master_in_source_payload_tag;
			litepciedma2_litepciemasterinternalport5_source_payload_dat <= subfragments_master_in_source_payload_dat;
			litepciedma2_litepciemasterinternalport5_source_payload_channel <= subfragments_master_in_source_payload_channel;
			litepciedma2_litepciemasterinternalport5_source_payload_user_id <= subfragments_master_in_source_payload_user_id;
		end
		default: begin
			subfragments_master_in_source_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	subfragments_dispatcher0_last <= 1'd0;
	if (subfragments_master_in_source_valid) begin
		subfragments_dispatcher0_last <= (subfragments_master_in_source_last & subfragments_master_in_source_ready);
	end
end
assign subfragments_dispatcher0_ongoing0 = ((subfragments_master_in_source_valid | subfragments_dispatcher0_ongoing1) & (~subfragments_dispatcher0_last));
always @(*) begin
	subfragments_arbiter1_request <= 3'd0;
	subfragments_arbiter1_request[0] <= subfragments_arbiter1_status3_ongoing0;
	subfragments_arbiter1_request[1] <= subfragments_arbiter1_status4_ongoing0;
	subfragments_arbiter1_request[2] <= subfragments_arbiter1_status5_ongoing0;
end
always @(*) begin
	subfragments_sink_first <= 1'd0;
	subfragments_sink_last <= 1'd0;
	litepciedma2_litepciemasterinternalport4_sink_ready <= 1'd0;
	subfragments_sink_payload_we <= 1'd0;
	subfragments_sink_payload_adr <= 32'd0;
	litepciedma1_litepciemasterinternalport2_sink_ready <= 1'd0;
	subfragments_sink_payload_len <= 10'd0;
	subfragments_sink_payload_req_id <= 16'd0;
	litepciedma0_litepciemasterinternalport0_sink_ready <= 1'd0;
	subfragments_sink_payload_tag <= 8'd0;
	subfragments_sink_payload_dat <= 64'd0;
	subfragments_sink_payload_channel <= 8'd0;
	subfragments_sink_payload_user_id <= 8'd0;
	subfragments_sink_valid <= 1'd0;
	case (subfragments_arbiter1_grant)
		1'd0: begin
			subfragments_sink_valid <= litepciedma0_litepciemasterinternalport0_sink_valid;
			litepciedma0_litepciemasterinternalport0_sink_ready <= subfragments_sink_ready;
			subfragments_sink_first <= litepciedma0_litepciemasterinternalport0_sink_first;
			subfragments_sink_last <= litepciedma0_litepciemasterinternalport0_sink_last;
			subfragments_sink_payload_we <= litepciedma0_litepciemasterinternalport0_sink_payload_we;
			subfragments_sink_payload_adr <= litepciedma0_litepciemasterinternalport0_sink_payload_adr;
			subfragments_sink_payload_len <= litepciedma0_litepciemasterinternalport0_sink_payload_len;
			subfragments_sink_payload_req_id <= litepciedma0_litepciemasterinternalport0_sink_payload_req_id;
			subfragments_sink_payload_tag <= litepciedma0_litepciemasterinternalport0_sink_payload_tag;
			subfragments_sink_payload_dat <= litepciedma0_litepciemasterinternalport0_sink_payload_dat;
			subfragments_sink_payload_channel <= litepciedma0_litepciemasterinternalport0_sink_payload_channel;
			subfragments_sink_payload_user_id <= litepciedma0_litepciemasterinternalport0_sink_payload_user_id;
		end
		1'd1: begin
			subfragments_sink_valid <= litepciedma1_litepciemasterinternalport2_sink_valid;
			litepciedma1_litepciemasterinternalport2_sink_ready <= subfragments_sink_ready;
			subfragments_sink_first <= litepciedma1_litepciemasterinternalport2_sink_first;
			subfragments_sink_last <= litepciedma1_litepciemasterinternalport2_sink_last;
			subfragments_sink_payload_we <= litepciedma1_litepciemasterinternalport2_sink_payload_we;
			subfragments_sink_payload_adr <= litepciedma1_litepciemasterinternalport2_sink_payload_adr;
			subfragments_sink_payload_len <= litepciedma1_litepciemasterinternalport2_sink_payload_len;
			subfragments_sink_payload_req_id <= litepciedma1_litepciemasterinternalport2_sink_payload_req_id;
			subfragments_sink_payload_tag <= litepciedma1_litepciemasterinternalport2_sink_payload_tag;
			subfragments_sink_payload_dat <= litepciedma1_litepciemasterinternalport2_sink_payload_dat;
			subfragments_sink_payload_channel <= litepciedma1_litepciemasterinternalport2_sink_payload_channel;
			subfragments_sink_payload_user_id <= litepciedma1_litepciemasterinternalport2_sink_payload_user_id;
		end
		2'd2: begin
			subfragments_sink_valid <= litepciedma2_litepciemasterinternalport4_sink_valid;
			litepciedma2_litepciemasterinternalport4_sink_ready <= subfragments_sink_ready;
			subfragments_sink_first <= litepciedma2_litepciemasterinternalport4_sink_first;
			subfragments_sink_last <= litepciedma2_litepciemasterinternalport4_sink_last;
			subfragments_sink_payload_we <= litepciedma2_litepciemasterinternalport4_sink_payload_we;
			subfragments_sink_payload_adr <= litepciedma2_litepciemasterinternalport4_sink_payload_adr;
			subfragments_sink_payload_len <= litepciedma2_litepciemasterinternalport4_sink_payload_len;
			subfragments_sink_payload_req_id <= litepciedma2_litepciemasterinternalport4_sink_payload_req_id;
			subfragments_sink_payload_tag <= litepciedma2_litepciemasterinternalport4_sink_payload_tag;
			subfragments_sink_payload_dat <= litepciedma2_litepciemasterinternalport4_sink_payload_dat;
			subfragments_sink_payload_channel <= litepciedma2_litepciemasterinternalport4_sink_payload_channel;
			subfragments_sink_payload_user_id <= litepciedma2_litepciemasterinternalport4_sink_payload_user_id;
		end
	endcase
end
always @(*) begin
	subfragments_arbiter1_status3_last <= 1'd0;
	if (litepciedma0_litepciemasterinternalport0_sink_valid) begin
		subfragments_arbiter1_status3_last <= (litepciedma0_litepciemasterinternalport0_sink_last & litepciedma0_litepciemasterinternalport0_sink_ready);
	end
end
assign subfragments_arbiter1_status3_ongoing0 = ((litepciedma0_litepciemasterinternalport0_sink_valid | subfragments_arbiter1_status3_ongoing1) & (~subfragments_arbiter1_status3_last));
always @(*) begin
	subfragments_arbiter1_status4_last <= 1'd0;
	if (litepciedma1_litepciemasterinternalport2_sink_valid) begin
		subfragments_arbiter1_status4_last <= (litepciedma1_litepciemasterinternalport2_sink_last & litepciedma1_litepciemasterinternalport2_sink_ready);
	end
end
assign subfragments_arbiter1_status4_ongoing0 = ((litepciedma1_litepciemasterinternalport2_sink_valid | subfragments_arbiter1_status4_ongoing1) & (~subfragments_arbiter1_status4_last));
always @(*) begin
	subfragments_arbiter1_status5_last <= 1'd0;
	if (litepciedma2_litepciemasterinternalport4_sink_valid) begin
		subfragments_arbiter1_status5_last <= (litepciedma2_litepciemasterinternalport4_sink_last & litepciedma2_litepciemasterinternalport4_sink_ready);
	end
end
assign subfragments_arbiter1_status5_ongoing0 = ((litepciedma2_litepciemasterinternalport4_sink_valid | subfragments_arbiter1_status5_ongoing1) & (~subfragments_arbiter1_status5_last));
always @(*) begin
	subfragments_dispatcher1_sel1 <= 3'd0;
	if (subfragments_dispatcher1_first) begin
		subfragments_dispatcher1_sel1 <= subfragments_dispatcher1_sel0;
	end else begin
		subfragments_dispatcher1_sel1 <= subfragments_dispatcher1_sel_ongoing;
	end
end
always @(*) begin
	subfragments_source_ready <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_valid <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_first <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_last <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_adr <= 32'd0;
	litepciedma0_litepciemasterinternalport0_source_valid <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_len <= 10'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_end <= 1'd0;
	litepciedma0_litepciemasterinternalport0_source_first <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_req_id <= 16'd0;
	litepciedma0_litepciemasterinternalport0_source_last <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_cmp_id <= 16'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_adr <= 32'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_err <= 1'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_len <= 10'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_tag <= 8'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_end <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_dat <= 64'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_req_id <= 16'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_channel <= 8'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_cmp_id <= 16'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_user_id <= 8'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_err <= 1'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_tag <= 8'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_dat <= 64'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_channel <= 8'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_user_id <= 8'd0;
	litepciedma1_litepciemasterinternalport2_source_valid <= 1'd0;
	litepciedma1_litepciemasterinternalport2_source_first <= 1'd0;
	litepciedma1_litepciemasterinternalport2_source_last <= 1'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_adr <= 32'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_len <= 10'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_end <= 1'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_req_id <= 16'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_cmp_id <= 16'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_err <= 1'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_tag <= 8'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_dat <= 64'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_channel <= 8'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_user_id <= 8'd0;
	case (subfragments_dispatcher1_sel1)
		1'd1: begin
			litepciedma0_litepciemasterinternalport0_source_valid <= subfragments_source_valid;
			subfragments_source_ready <= litepciedma0_litepciemasterinternalport0_source_ready;
			litepciedma0_litepciemasterinternalport0_source_first <= subfragments_source_first;
			litepciedma0_litepciemasterinternalport0_source_last <= subfragments_source_last;
			litepciedma0_litepciemasterinternalport0_source_payload_adr <= subfragments_source_payload_adr;
			litepciedma0_litepciemasterinternalport0_source_payload_len <= subfragments_source_payload_len;
			litepciedma0_litepciemasterinternalport0_source_payload_end <= subfragments_source_payload_end;
			litepciedma0_litepciemasterinternalport0_source_payload_req_id <= subfragments_source_payload_req_id;
			litepciedma0_litepciemasterinternalport0_source_payload_cmp_id <= subfragments_source_payload_cmp_id;
			litepciedma0_litepciemasterinternalport0_source_payload_err <= subfragments_source_payload_err;
			litepciedma0_litepciemasterinternalport0_source_payload_tag <= subfragments_source_payload_tag;
			litepciedma0_litepciemasterinternalport0_source_payload_dat <= subfragments_source_payload_dat;
			litepciedma0_litepciemasterinternalport0_source_payload_channel <= subfragments_source_payload_channel;
			litepciedma0_litepciemasterinternalport0_source_payload_user_id <= subfragments_source_payload_user_id;
		end
		2'd2: begin
			litepciedma1_litepciemasterinternalport2_source_valid <= subfragments_source_valid;
			subfragments_source_ready <= litepciedma1_litepciemasterinternalport2_source_ready;
			litepciedma1_litepciemasterinternalport2_source_first <= subfragments_source_first;
			litepciedma1_litepciemasterinternalport2_source_last <= subfragments_source_last;
			litepciedma1_litepciemasterinternalport2_source_payload_adr <= subfragments_source_payload_adr;
			litepciedma1_litepciemasterinternalport2_source_payload_len <= subfragments_source_payload_len;
			litepciedma1_litepciemasterinternalport2_source_payload_end <= subfragments_source_payload_end;
			litepciedma1_litepciemasterinternalport2_source_payload_req_id <= subfragments_source_payload_req_id;
			litepciedma1_litepciemasterinternalport2_source_payload_cmp_id <= subfragments_source_payload_cmp_id;
			litepciedma1_litepciemasterinternalport2_source_payload_err <= subfragments_source_payload_err;
			litepciedma1_litepciemasterinternalport2_source_payload_tag <= subfragments_source_payload_tag;
			litepciedma1_litepciemasterinternalport2_source_payload_dat <= subfragments_source_payload_dat;
			litepciedma1_litepciemasterinternalport2_source_payload_channel <= subfragments_source_payload_channel;
			litepciedma1_litepciemasterinternalport2_source_payload_user_id <= subfragments_source_payload_user_id;
		end
		3'd4: begin
			litepciedma2_litepciemasterinternalport4_source_valid <= subfragments_source_valid;
			subfragments_source_ready <= litepciedma2_litepciemasterinternalport4_source_ready;
			litepciedma2_litepciemasterinternalport4_source_first <= subfragments_source_first;
			litepciedma2_litepciemasterinternalport4_source_last <= subfragments_source_last;
			litepciedma2_litepciemasterinternalport4_source_payload_adr <= subfragments_source_payload_adr;
			litepciedma2_litepciemasterinternalport4_source_payload_len <= subfragments_source_payload_len;
			litepciedma2_litepciemasterinternalport4_source_payload_end <= subfragments_source_payload_end;
			litepciedma2_litepciemasterinternalport4_source_payload_req_id <= subfragments_source_payload_req_id;
			litepciedma2_litepciemasterinternalport4_source_payload_cmp_id <= subfragments_source_payload_cmp_id;
			litepciedma2_litepciemasterinternalport4_source_payload_err <= subfragments_source_payload_err;
			litepciedma2_litepciemasterinternalport4_source_payload_tag <= subfragments_source_payload_tag;
			litepciedma2_litepciemasterinternalport4_source_payload_dat <= subfragments_source_payload_dat;
			litepciedma2_litepciemasterinternalport4_source_payload_channel <= subfragments_source_payload_channel;
			litepciedma2_litepciemasterinternalport4_source_payload_user_id <= subfragments_source_payload_user_id;
		end
		default: begin
			subfragments_source_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	subfragments_dispatcher1_last <= 1'd0;
	if (subfragments_source_valid) begin
		subfragments_dispatcher1_last <= (subfragments_source_last & subfragments_source_ready);
	end
end
assign subfragments_dispatcher1_ongoing0 = ((subfragments_source_valid | subfragments_dispatcher1_ongoing1) & (~subfragments_dispatcher1_last));
always @(*) begin
	subfragments_arbiter2_request <= 2'd0;
	subfragments_arbiter2_request[0] <= subfragments_arbiter2_status6_ongoing0;
	subfragments_arbiter2_request[1] <= subfragments_arbiter2_status7_ongoing0;
end
always @(*) begin
	pcie_endpoint_master_sink_valid <= 1'd0;
	pcie_endpoint_master_sink_first <= 1'd0;
	pcie_endpoint_master_sink_last <= 1'd0;
	pcie_endpoint_master_sink_payload_we <= 1'd0;
	pcie_endpoint_master_sink_payload_adr <= 32'd0;
	pcie_endpoint_master_sink_payload_len <= 10'd0;
	pcie_endpoint_master_sink_payload_req_id <= 16'd0;
	subfragments_master_out_sink_ready <= 1'd0;
	pcie_endpoint_master_sink_payload_tag <= 8'd0;
	pcie_endpoint_master_sink_payload_dat <= 64'd0;
	pcie_endpoint_master_sink_payload_channel <= 8'd0;
	pcie_endpoint_master_sink_payload_user_id <= 8'd0;
	subfragments_sink_ready <= 1'd0;
	case (subfragments_arbiter2_grant)
		1'd0: begin
			pcie_endpoint_master_sink_valid <= subfragments_master_out_sink_valid;
			subfragments_master_out_sink_ready <= pcie_endpoint_master_sink_ready;
			pcie_endpoint_master_sink_first <= subfragments_master_out_sink_first;
			pcie_endpoint_master_sink_last <= subfragments_master_out_sink_last;
			pcie_endpoint_master_sink_payload_we <= subfragments_master_out_sink_payload_we;
			pcie_endpoint_master_sink_payload_adr <= subfragments_master_out_sink_payload_adr;
			pcie_endpoint_master_sink_payload_len <= subfragments_master_out_sink_payload_len;
			pcie_endpoint_master_sink_payload_req_id <= subfragments_master_out_sink_payload_req_id;
			pcie_endpoint_master_sink_payload_tag <= subfragments_master_out_sink_payload_tag;
			pcie_endpoint_master_sink_payload_dat <= subfragments_master_out_sink_payload_dat;
			pcie_endpoint_master_sink_payload_channel <= subfragments_master_out_sink_payload_channel;
			pcie_endpoint_master_sink_payload_user_id <= subfragments_master_out_sink_payload_user_id;
		end
		1'd1: begin
			pcie_endpoint_master_sink_valid <= subfragments_sink_valid;
			subfragments_sink_ready <= pcie_endpoint_master_sink_ready;
			pcie_endpoint_master_sink_first <= subfragments_sink_first;
			pcie_endpoint_master_sink_last <= subfragments_sink_last;
			pcie_endpoint_master_sink_payload_we <= subfragments_sink_payload_we;
			pcie_endpoint_master_sink_payload_adr <= subfragments_sink_payload_adr;
			pcie_endpoint_master_sink_payload_len <= subfragments_sink_payload_len;
			pcie_endpoint_master_sink_payload_req_id <= subfragments_sink_payload_req_id;
			pcie_endpoint_master_sink_payload_tag <= subfragments_sink_payload_tag;
			pcie_endpoint_master_sink_payload_dat <= subfragments_sink_payload_dat;
			pcie_endpoint_master_sink_payload_channel <= subfragments_sink_payload_channel;
			pcie_endpoint_master_sink_payload_user_id <= subfragments_sink_payload_user_id;
		end
	endcase
end
always @(*) begin
	subfragments_arbiter2_status6_last <= 1'd0;
	if (subfragments_master_out_sink_valid) begin
		subfragments_arbiter2_status6_last <= (subfragments_master_out_sink_last & subfragments_master_out_sink_ready);
	end
end
assign subfragments_arbiter2_status6_ongoing0 = ((subfragments_master_out_sink_valid | subfragments_arbiter2_status6_ongoing1) & (~subfragments_arbiter2_status6_last));
always @(*) begin
	subfragments_arbiter2_status7_last <= 1'd0;
	if (subfragments_sink_valid) begin
		subfragments_arbiter2_status7_last <= (subfragments_sink_last & subfragments_sink_ready);
	end
end
assign subfragments_arbiter2_status7_ongoing0 = ((subfragments_sink_valid | subfragments_arbiter2_status7_ongoing1) & (~subfragments_arbiter2_status7_last));
always @(*) begin
	pcie_wishbone_wishbone_cyc <= 1'd0;
	pcie_wishbone_wishbone_stb <= 1'd0;
	pcie_wishbone_update_dat <= 1'd0;
	pcie_wishbone_wishbone_we <= 1'd0;
	pcie_wishbone_sink_valid <= 1'd0;
	pcie_wishbone_source_ready <= 1'd0;
	subfragments_next_state <= 3'd0;
	subfragments_next_state <= subfragments_state;
	case (subfragments_state)
		1'd1: begin
			pcie_wishbone_wishbone_stb <= 1'd1;
			pcie_wishbone_wishbone_we <= 1'd1;
			pcie_wishbone_wishbone_cyc <= 1'd1;
			if (pcie_wishbone_wishbone_ack) begin
				subfragments_next_state <= 3'd4;
			end
		end
		2'd2: begin
			pcie_wishbone_wishbone_stb <= 1'd1;
			pcie_wishbone_wishbone_we <= 1'd0;
			pcie_wishbone_wishbone_cyc <= 1'd1;
			if (pcie_wishbone_wishbone_ack) begin
				pcie_wishbone_update_dat <= 1'd1;
				subfragments_next_state <= 2'd3;
			end
		end
		2'd3: begin
			pcie_wishbone_sink_valid <= 1'd1;
			if (pcie_wishbone_sink_ready) begin
				subfragments_next_state <= 3'd4;
			end
		end
		3'd4: begin
			pcie_wishbone_source_ready <= 1'd1;
			subfragments_next_state <= 1'd0;
		end
		default: begin
			if ((pcie_wishbone_source_valid & pcie_wishbone_source_first)) begin
				if (pcie_wishbone_source_payload_we) begin
					subfragments_next_state <= 1'd1;
				end else begin
					subfragments_next_state <= 2'd2;
				end
			end else begin
				pcie_wishbone_source_ready <= pcie_wishbone_source_valid;
			end
		end
	endcase
end
assign litepciedma0_sink_valid = litepciedma0_reader_source_source_valid;
assign litepciedma0_reader_source_source_ready = litepciedma0_sink_ready;
assign litepciedma0_sink_first = litepciedma0_reader_source_source_first;
assign litepciedma0_sink_last = litepciedma0_reader_source_source_last;
assign litepciedma0_sink_payload_data = litepciedma0_reader_source_source_payload_data;
assign litepciedma0_writer_sink_sink_valid = litepciedma0_source_valid;
assign litepciedma0_source_ready = litepciedma0_writer_sink_sink_ready;
assign litepciedma0_writer_sink_sink_first = litepciedma0_source_first;
assign litepciedma0_writer_sink_sink_last = litepciedma0_source_last;
assign litepciedma0_writer_sink_sink_payload_data = litepciedma0_source_payload_data;
assign litepciedma0_tx_fifo_sink_valid = litepciedma0_next_source_valid;
assign litepciedma0_next_source_ready = litepciedma0_tx_fifo_sink_ready;
assign litepciedma0_tx_fifo_sink_first = litepciedma0_next_source_first;
assign litepciedma0_tx_fifo_sink_last = litepciedma0_next_source_last;
assign litepciedma0_tx_fifo_sink_payload_data = litepciedma0_next_source_payload_data;
assign litepciedma0_next_sink_valid = litepciedma0_rx_fifo_source_valid;
assign litepciedma0_rx_fifo_source_ready = litepciedma0_next_sink_ready;
assign litepciedma0_next_sink_first = litepciedma0_rx_fifo_source_first;
assign litepciedma0_next_sink_last = litepciedma0_rx_fifo_source_last;
assign litepciedma0_next_sink_payload_data = litepciedma0_rx_fifo_source_payload_data;
assign litepciedma0_writer_fifo_syncfifo0_we = (litepciedma0_writer_sink_sink_valid & litepciedma0_writer_enable_storage);
assign litepciedma0_writer_sink_sink_ready = (litepciedma0_writer_fifo_syncfifo0_writable | (~litepciedma0_writer_enable_storage));
assign litepciedma0_writer_fifo_syncfifo0_din = {litepciedma0_writer_sink_sink_last, litepciedma0_writer_sink_sink_payload_data};
assign litepciedma0_writer_resetinserter_reset0 = (~litepciedma0_writer_enable_storage);
assign litepciedma0_writer_resetinserter_reset1 = (~litepciedma0_writer_enable_storage);
assign litepciedma0_writer_splitter_sink_valid = litepciedma0_writer_table_source_source_valid;
assign litepciedma0_writer_table_source_source_ready = litepciedma0_writer_splitter_sink_ready;
assign litepciedma0_writer_splitter_sink_first = litepciedma0_writer_table_source_source_first;
assign litepciedma0_writer_splitter_sink_last = litepciedma0_writer_table_source_source_last;
assign litepciedma0_writer_splitter_sink_payload_address = litepciedma0_writer_table_source_source_payload_address;
assign litepciedma0_writer_splitter_sink_payload_length = litepciedma0_writer_table_source_source_payload_length;
assign litepciedma0_writer_splitter_sink_payload_control = litepciedma0_writer_table_source_source_payload_control;
assign litepciedma0_litepciemasterinternalport0_sink_payload_channel = 1'd0;
assign litepciedma0_litepciemasterinternalport0_sink_payload_user_id = litepciedma0_writer_bufferizeendpoints0_source_payload_user_id;
assign litepciedma0_litepciemasterinternalport0_sink_first = (litepciedma0_writer_counter == 1'd0);
assign litepciedma0_litepciemasterinternalport0_sink_last = ((~litepciedma0_writer_enable_storage) | (litepciedma0_writer_counter == (litepciedma0_writer_bufferizeendpoints0_source_payload_length[23:3] - 1'd1)));
assign litepciedma0_litepciemasterinternalport0_sink_payload_we = 1'd1;
assign litepciedma0_litepciemasterinternalport0_sink_payload_adr = litepciedma0_writer_bufferizeendpoints0_source_payload_address;
assign litepciedma0_litepciemasterinternalport0_sink_payload_req_id = pcie_phy_id;
assign litepciedma0_litepciemasterinternalport0_sink_payload_tag = 1'd0;
assign litepciedma0_litepciemasterinternalport0_sink_payload_len = litepciedma0_writer_bufferizeendpoints0_source_payload_length[23:2];
assign litepciedma0_litepciemasterinternalport0_sink_payload_dat = litepciedma0_writer_fifo_syncfifo0_dout[63:0];
assign litepciedma0_writer_irq = (((litepciedma0_writer_bufferizeendpoints0_source_valid & litepciedma0_writer_bufferizeendpoints0_source_ready) & litepciedma0_writer_bufferizeendpoints0_source_last) & (~litepciedma0_writer_bufferizeendpoints0_source_payload_control[0]));
assign litepciedma0_writer_fifo_syncfifo0_re = (litepciedma0_writer_fifo_syncfifo0_readable & ((~litepciedma0_writer_fifo_readable) | litepciedma0_writer_fifo_re));
assign litepciedma0_writer_fifo_level1 = (litepciedma0_writer_fifo_level0 + litepciedma0_writer_fifo_readable);
always @(*) begin
	litepciedma0_writer_fifo_wrport_adr <= 8'd0;
	if (litepciedma0_writer_fifo_replace) begin
		litepciedma0_writer_fifo_wrport_adr <= (litepciedma0_writer_fifo_produce - 1'd1);
	end else begin
		litepciedma0_writer_fifo_wrport_adr <= litepciedma0_writer_fifo_produce;
	end
end
assign litepciedma0_writer_fifo_wrport_dat_w = litepciedma0_writer_fifo_syncfifo0_din;
assign litepciedma0_writer_fifo_wrport_we = (litepciedma0_writer_fifo_syncfifo0_we & (litepciedma0_writer_fifo_syncfifo0_writable | litepciedma0_writer_fifo_replace));
assign litepciedma0_writer_fifo_do_read = (litepciedma0_writer_fifo_syncfifo0_readable & litepciedma0_writer_fifo_syncfifo0_re);
assign litepciedma0_writer_fifo_rdport_adr = litepciedma0_writer_fifo_consume;
assign litepciedma0_writer_fifo_syncfifo0_dout = litepciedma0_writer_fifo_rdport_dat_r;
assign litepciedma0_writer_fifo_rdport_re = litepciedma0_writer_fifo_do_read;
assign litepciedma0_writer_fifo_syncfifo0_writable = (litepciedma0_writer_fifo_level0 != 9'd256);
assign litepciedma0_writer_fifo_syncfifo0_readable = (litepciedma0_writer_fifo_level0 != 1'd0);
assign litepciedma0_writer_table_reset = (litepciedma0_writer_table_flush_r & litepciedma0_writer_table_flush_re);
assign litepciedma0_writer_table_level_status = litepciedma0_writer_table_syncfifo0_level;
assign litepciedma0_writer_table_source_source_valid = litepciedma0_writer_table_syncfifo0_source_valid;
assign litepciedma0_writer_table_source_source_first = litepciedma0_writer_table_syncfifo0_source_first;
assign litepciedma0_writer_table_syncfifo0_source_ready = (litepciedma0_writer_table_source_source_valid & litepciedma0_writer_table_source_source_ready);
assign litepciedma0_writer_table_source_source_payload_address = litepciedma0_writer_table_syncfifo0_source_payload_address;
assign litepciedma0_writer_table_source_source_payload_length = litepciedma0_writer_table_syncfifo0_source_payload_length;
assign litepciedma0_writer_table_source_source_payload_control = litepciedma0_writer_table_syncfifo0_source_payload_control;
assign litepciedma0_writer_table_syncfifo0_syncfifo0_din = {litepciedma0_writer_table_syncfifo0_fifo_in_last, litepciedma0_writer_table_syncfifo0_fifo_in_first, litepciedma0_writer_table_syncfifo0_fifo_in_payload_control, litepciedma0_writer_table_syncfifo0_fifo_in_payload_length, litepciedma0_writer_table_syncfifo0_fifo_in_payload_address};
assign {litepciedma0_writer_table_syncfifo0_fifo_out_last, litepciedma0_writer_table_syncfifo0_fifo_out_first, litepciedma0_writer_table_syncfifo0_fifo_out_payload_control, litepciedma0_writer_table_syncfifo0_fifo_out_payload_length, litepciedma0_writer_table_syncfifo0_fifo_out_payload_address} = litepciedma0_writer_table_syncfifo0_syncfifo0_dout;
assign litepciedma0_writer_table_syncfifo0_sink_ready = litepciedma0_writer_table_syncfifo0_syncfifo0_writable;
assign litepciedma0_writer_table_syncfifo0_syncfifo0_we = litepciedma0_writer_table_syncfifo0_sink_valid;
assign litepciedma0_writer_table_syncfifo0_fifo_in_first = litepciedma0_writer_table_syncfifo0_sink_first;
assign litepciedma0_writer_table_syncfifo0_fifo_in_last = litepciedma0_writer_table_syncfifo0_sink_last;
assign litepciedma0_writer_table_syncfifo0_fifo_in_payload_address = litepciedma0_writer_table_syncfifo0_sink_payload_address;
assign litepciedma0_writer_table_syncfifo0_fifo_in_payload_length = litepciedma0_writer_table_syncfifo0_sink_payload_length;
assign litepciedma0_writer_table_syncfifo0_fifo_in_payload_control = litepciedma0_writer_table_syncfifo0_sink_payload_control;
assign litepciedma0_writer_table_syncfifo0_source_valid = litepciedma0_writer_table_syncfifo0_syncfifo0_readable;
assign litepciedma0_writer_table_syncfifo0_source_first = litepciedma0_writer_table_syncfifo0_fifo_out_first;
assign litepciedma0_writer_table_syncfifo0_source_last = litepciedma0_writer_table_syncfifo0_fifo_out_last;
assign litepciedma0_writer_table_syncfifo0_source_payload_address = litepciedma0_writer_table_syncfifo0_fifo_out_payload_address;
assign litepciedma0_writer_table_syncfifo0_source_payload_length = litepciedma0_writer_table_syncfifo0_fifo_out_payload_length;
assign litepciedma0_writer_table_syncfifo0_source_payload_control = litepciedma0_writer_table_syncfifo0_fifo_out_payload_control;
assign litepciedma0_writer_table_syncfifo0_syncfifo0_re = litepciedma0_writer_table_syncfifo0_source_ready;
always @(*) begin
	litepciedma0_writer_table_syncfifo0_wrport_adr <= 8'd0;
	if (litepciedma0_writer_table_syncfifo0_replace) begin
		litepciedma0_writer_table_syncfifo0_wrport_adr <= (litepciedma0_writer_table_syncfifo0_produce - 1'd1);
	end else begin
		litepciedma0_writer_table_syncfifo0_wrport_adr <= litepciedma0_writer_table_syncfifo0_produce;
	end
end
assign litepciedma0_writer_table_syncfifo0_wrport_dat_w = litepciedma0_writer_table_syncfifo0_syncfifo0_din;
assign litepciedma0_writer_table_syncfifo0_wrport_we = (litepciedma0_writer_table_syncfifo0_syncfifo0_we & (litepciedma0_writer_table_syncfifo0_syncfifo0_writable | litepciedma0_writer_table_syncfifo0_replace));
assign litepciedma0_writer_table_syncfifo0_do_read = (litepciedma0_writer_table_syncfifo0_syncfifo0_readable & litepciedma0_writer_table_syncfifo0_syncfifo0_re);
assign litepciedma0_writer_table_syncfifo0_rdport_adr = litepciedma0_writer_table_syncfifo0_consume;
assign litepciedma0_writer_table_syncfifo0_syncfifo0_dout = litepciedma0_writer_table_syncfifo0_rdport_dat_r;
assign litepciedma0_writer_table_syncfifo0_syncfifo0_writable = (litepciedma0_writer_table_syncfifo0_level != 9'd256);
assign litepciedma0_writer_table_syncfifo0_syncfifo0_readable = (litepciedma0_writer_table_syncfifo0_level != 1'd0);
assign litepciedma0_writer_splitter_user_id_ce = (litepciedma0_writer_splitter_sink_valid & litepciedma0_writer_splitter_sink_ready);
assign litepciedma0_writer_splitter_source_payload_address = (litepciedma0_writer_splitter_sink_payload_address + litepciedma0_writer_splitter_offset);
assign litepciedma0_writer_splitter_source_payload_control = litepciedma0_writer_splitter_sink_payload_control;
assign litepciedma0_writer_splitter_source_payload_user_id = litepciedma0_writer_splitter_user_id;
assign litepciedma0_writer_bufferizeendpoints0_sink_valid = litepciedma0_writer_splitter_source_valid;
assign litepciedma0_writer_splitter_source_ready = litepciedma0_writer_bufferizeendpoints0_sink_ready;
assign litepciedma0_writer_bufferizeendpoints0_sink_first = litepciedma0_writer_splitter_source_first;
assign litepciedma0_writer_bufferizeendpoints0_sink_last = litepciedma0_writer_splitter_source_last;
assign litepciedma0_writer_bufferizeendpoints0_sink_payload_address = litepciedma0_writer_splitter_source_payload_address;
assign litepciedma0_writer_bufferizeendpoints0_sink_payload_length = litepciedma0_writer_splitter_source_payload_length;
assign litepciedma0_writer_bufferizeendpoints0_sink_payload_control = litepciedma0_writer_splitter_source_payload_control;
assign litepciedma0_writer_bufferizeendpoints0_sink_payload_user_id = litepciedma0_writer_splitter_source_payload_user_id;
always @(*) begin
	litepciedma0_writer_splitter_source_valid <= 1'd0;
	subfragments_bufferizeendpoints0_next_state0 <= 2'd0;
	litepciedma0_writer_splitter_length_update <= 1'd0;
	litepciedma0_writer_splitter_source_first <= 1'd0;
	litepciedma0_writer_splitter_source_last <= 1'd0;
	litepciedma0_writer_splitter_source_payload_length <= 24'd0;
	litepciedma0_writer_splitter_sink_ready <= 1'd0;
	litepciedma0_writer_splitter_offset_reset <= 1'd0;
	litepciedma0_writer_splitter_offset_ce <= 1'd0;
	subfragments_bufferizeendpoints0_next_state0 <= subfragments_bufferizeendpoints0_state0;
	case (subfragments_bufferizeendpoints0_state0)
		1'd1: begin
			litepciedma0_writer_splitter_source_valid <= 1'd1;
			litepciedma0_writer_splitter_source_first <= (litepciedma0_writer_splitter_offset == 1'd0);
			if (((litepciedma0_writer_splitter_length - litepciedma0_writer_splitter_offset) > pcie_phy_max_payload_size)) begin
				litepciedma0_writer_splitter_source_last <= litepciedma0_writer_splitter_end;
				litepciedma0_writer_splitter_source_payload_length <= pcie_phy_max_payload_size;
				litepciedma0_writer_splitter_offset_ce <= litepciedma0_writer_splitter_source_ready;
				if ((litepciedma0_writer_splitter_source_ready & litepciedma0_writer_splitter_end)) begin
					subfragments_bufferizeendpoints0_next_state0 <= 2'd2;
				end
			end else begin
				litepciedma0_writer_splitter_source_last <= 1'd1;
				litepciedma0_writer_splitter_source_payload_length <= (litepciedma0_writer_splitter_length - litepciedma0_writer_splitter_offset);
				if (litepciedma0_writer_splitter_source_ready) begin
					subfragments_bufferizeendpoints0_next_state0 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma0_writer_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints0_next_state0 <= 1'd0;
		end
		default: begin
			litepciedma0_writer_splitter_offset_reset <= 1'd1;
			if (litepciedma0_writer_splitter_sink_valid) begin
				litepciedma0_writer_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints0_next_state0 <= 1'd1;
			end else begin
				litepciedma0_writer_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma0_writer_bufferizeendpoints0_pipe_ce = (litepciedma0_writer_bufferizeendpoints0_source_ready | (~litepciedma0_writer_bufferizeendpoints0_valid_n));
assign litepciedma0_writer_bufferizeendpoints0_sink_ready = litepciedma0_writer_bufferizeendpoints0_pipe_ce;
assign litepciedma0_writer_bufferizeendpoints0_source_valid = litepciedma0_writer_bufferizeendpoints0_valid_n;
assign litepciedma0_writer_bufferizeendpoints0_busy = (1'd0 | litepciedma0_writer_bufferizeendpoints0_valid_n);
assign litepciedma0_writer_bufferizeendpoints0_source_first = litepciedma0_writer_bufferizeendpoints0_first_n;
assign litepciedma0_writer_bufferizeendpoints0_source_last = litepciedma0_writer_bufferizeendpoints0_last_n;
always @(*) begin
	litepciedma0_writer_splitter_end <= 1'd0;
	subfragments_fsm0_next_state1 <= 1'd0;
	litepciedma0_writer_counter_reset <= 1'd0;
	litepciedma0_writer_bufferizeendpoints0_source_ready <= 1'd0;
	litepciedma0_litepciemasterinternalport0_sink_valid <= 1'd0;
	litepciedma0_writer_counter_ce <= 1'd0;
	litepciedma0_writer_fifo_re <= 1'd0;
	subfragments_fsm0_next_state1 <= subfragments_fsm0_state1;
	case (subfragments_fsm0_state1)
		1'd1: begin
			litepciedma0_writer_counter_ce <= (litepciedma0_litepciemasterinternalport0_sink_valid & litepciedma0_litepciemasterinternalport0_sink_ready);
			litepciedma0_litepciemasterinternalport0_sink_valid <= 1'd1;
			if (litepciedma0_litepciemasterinternalport0_sink_ready) begin
				litepciedma0_writer_fifo_re <= (~(litepciedma0_writer_fifo_syncfifo0_dout[64] & (~litepciedma0_writer_bufferizeendpoints0_source_payload_control[1])));
				if (litepciedma0_litepciemasterinternalport0_sink_last) begin
					litepciedma0_writer_fifo_re <= 1'd1;
					litepciedma0_writer_splitter_end <= (litepciedma0_writer_fifo_syncfifo0_dout[64] & (~litepciedma0_writer_bufferizeendpoints0_source_payload_control[1]));
					litepciedma0_writer_bufferizeendpoints0_source_ready <= 1'd1;
					subfragments_fsm0_next_state1 <= 1'd0;
				end
			end
		end
		default: begin
			litepciedma0_writer_counter_reset <= 1'd1;
			if (litepciedma0_writer_request_ready) begin
				subfragments_fsm0_next_state1 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma0_reader_resetinserter_reset0 = (~litepciedma0_reader_enable_storage);
assign litepciedma0_reader_splitter_sink_valid = litepciedma0_reader_table_source_source_valid;
assign litepciedma0_reader_table_source_source_ready = litepciedma0_reader_splitter_sink_ready;
assign litepciedma0_reader_splitter_sink_first = litepciedma0_reader_table_source_source_first;
assign litepciedma0_reader_splitter_sink_last = litepciedma0_reader_table_source_source_last;
assign litepciedma0_reader_splitter_sink_payload_address = litepciedma0_reader_table_source_source_payload_address;
assign litepciedma0_reader_splitter_sink_payload_length = litepciedma0_reader_table_source_source_payload_length;
assign litepciedma0_reader_splitter_sink_payload_control = litepciedma0_reader_table_source_source_payload_control;
assign litepciedma0_litepciemasterinternalport1_sink_payload_channel = 1'd1;
assign litepciedma0_litepciemasterinternalport1_sink_payload_user_id = litepciedma0_reader_bufferizeendpoints0_source_payload_user_id;
assign litepciedma0_litepciemasterinternalport1_sink_first = 1'd1;
assign litepciedma0_litepciemasterinternalport1_sink_last = 1'd1;
assign litepciedma0_litepciemasterinternalport1_sink_payload_we = 1'd0;
assign litepciedma0_litepciemasterinternalport1_sink_payload_adr = litepciedma0_reader_bufferizeendpoints0_source_payload_address;
assign litepciedma0_litepciemasterinternalport1_sink_payload_len = litepciedma0_reader_bufferizeendpoints0_source_payload_length[23:2];
assign litepciedma0_litepciemasterinternalport1_sink_payload_req_id = pcie_phy_id;
assign litepciedma0_litepciemasterinternalport1_sink_payload_dat = 1'd0;
assign litepciedma0_reader_resetinserter_reset1 = (~litepciedma0_reader_enable_storage);
assign litepciedma0_reader_fifo_sink_valid = litepciedma0_litepciemasterinternalport1_source_valid;
assign litepciedma0_reader_fifo_sink_first = (litepciedma0_litepciemasterinternalport1_source_first & (litepciedma0_litepciemasterinternalport1_source_payload_user_id != litepciedma0_reader_last_user_id));
assign litepciedma0_reader_fifo_sink_payload_data = litepciedma0_litepciemasterinternalport1_source_payload_dat;
assign litepciedma0_litepciemasterinternalport1_source_ready = (litepciedma0_reader_fifo_sink_ready | (~litepciedma0_reader_enable_storage));
assign litepciedma0_reader_source_source_valid = litepciedma0_reader_fifo_source_valid;
assign litepciedma0_reader_fifo_source_ready = litepciedma0_reader_source_source_ready;
assign litepciedma0_reader_source_source_first = litepciedma0_reader_fifo_source_first;
assign litepciedma0_reader_source_source_last = litepciedma0_reader_fifo_source_last;
assign litepciedma0_reader_source_source_payload_data = litepciedma0_reader_fifo_source_payload_data;
assign litepciedma0_reader_irq = (((litepciedma0_reader_bufferizeendpoints0_source_valid & litepciedma0_reader_bufferizeendpoints0_source_ready) & litepciedma0_reader_bufferizeendpoints0_source_last) & (~litepciedma0_reader_bufferizeendpoints0_source_payload_control[0]));
assign litepciedma0_reader_table_reset = (litepciedma0_reader_table_flush_r & litepciedma0_reader_table_flush_re);
assign litepciedma0_reader_table_level_status = litepciedma0_reader_table_syncfifo0_level;
assign litepciedma0_reader_table_source_source_valid = litepciedma0_reader_table_syncfifo0_source_valid;
assign litepciedma0_reader_table_source_source_first = litepciedma0_reader_table_syncfifo0_source_first;
assign litepciedma0_reader_table_syncfifo0_source_ready = (litepciedma0_reader_table_source_source_valid & litepciedma0_reader_table_source_source_ready);
assign litepciedma0_reader_table_source_source_payload_address = litepciedma0_reader_table_syncfifo0_source_payload_address;
assign litepciedma0_reader_table_source_source_payload_length = litepciedma0_reader_table_syncfifo0_source_payload_length;
assign litepciedma0_reader_table_source_source_payload_control = litepciedma0_reader_table_syncfifo0_source_payload_control;
assign litepciedma0_reader_table_syncfifo0_syncfifo0_din = {litepciedma0_reader_table_syncfifo0_fifo_in_last, litepciedma0_reader_table_syncfifo0_fifo_in_first, litepciedma0_reader_table_syncfifo0_fifo_in_payload_control, litepciedma0_reader_table_syncfifo0_fifo_in_payload_length, litepciedma0_reader_table_syncfifo0_fifo_in_payload_address};
assign {litepciedma0_reader_table_syncfifo0_fifo_out_last, litepciedma0_reader_table_syncfifo0_fifo_out_first, litepciedma0_reader_table_syncfifo0_fifo_out_payload_control, litepciedma0_reader_table_syncfifo0_fifo_out_payload_length, litepciedma0_reader_table_syncfifo0_fifo_out_payload_address} = litepciedma0_reader_table_syncfifo0_syncfifo0_dout;
assign litepciedma0_reader_table_syncfifo0_sink_ready = litepciedma0_reader_table_syncfifo0_syncfifo0_writable;
assign litepciedma0_reader_table_syncfifo0_syncfifo0_we = litepciedma0_reader_table_syncfifo0_sink_valid;
assign litepciedma0_reader_table_syncfifo0_fifo_in_first = litepciedma0_reader_table_syncfifo0_sink_first;
assign litepciedma0_reader_table_syncfifo0_fifo_in_last = litepciedma0_reader_table_syncfifo0_sink_last;
assign litepciedma0_reader_table_syncfifo0_fifo_in_payload_address = litepciedma0_reader_table_syncfifo0_sink_payload_address;
assign litepciedma0_reader_table_syncfifo0_fifo_in_payload_length = litepciedma0_reader_table_syncfifo0_sink_payload_length;
assign litepciedma0_reader_table_syncfifo0_fifo_in_payload_control = litepciedma0_reader_table_syncfifo0_sink_payload_control;
assign litepciedma0_reader_table_syncfifo0_source_valid = litepciedma0_reader_table_syncfifo0_syncfifo0_readable;
assign litepciedma0_reader_table_syncfifo0_source_first = litepciedma0_reader_table_syncfifo0_fifo_out_first;
assign litepciedma0_reader_table_syncfifo0_source_last = litepciedma0_reader_table_syncfifo0_fifo_out_last;
assign litepciedma0_reader_table_syncfifo0_source_payload_address = litepciedma0_reader_table_syncfifo0_fifo_out_payload_address;
assign litepciedma0_reader_table_syncfifo0_source_payload_length = litepciedma0_reader_table_syncfifo0_fifo_out_payload_length;
assign litepciedma0_reader_table_syncfifo0_source_payload_control = litepciedma0_reader_table_syncfifo0_fifo_out_payload_control;
assign litepciedma0_reader_table_syncfifo0_syncfifo0_re = litepciedma0_reader_table_syncfifo0_source_ready;
always @(*) begin
	litepciedma0_reader_table_syncfifo0_wrport_adr <= 8'd0;
	if (litepciedma0_reader_table_syncfifo0_replace) begin
		litepciedma0_reader_table_syncfifo0_wrport_adr <= (litepciedma0_reader_table_syncfifo0_produce - 1'd1);
	end else begin
		litepciedma0_reader_table_syncfifo0_wrport_adr <= litepciedma0_reader_table_syncfifo0_produce;
	end
end
assign litepciedma0_reader_table_syncfifo0_wrport_dat_w = litepciedma0_reader_table_syncfifo0_syncfifo0_din;
assign litepciedma0_reader_table_syncfifo0_wrport_we = (litepciedma0_reader_table_syncfifo0_syncfifo0_we & (litepciedma0_reader_table_syncfifo0_syncfifo0_writable | litepciedma0_reader_table_syncfifo0_replace));
assign litepciedma0_reader_table_syncfifo0_do_read = (litepciedma0_reader_table_syncfifo0_syncfifo0_readable & litepciedma0_reader_table_syncfifo0_syncfifo0_re);
assign litepciedma0_reader_table_syncfifo0_rdport_adr = litepciedma0_reader_table_syncfifo0_consume;
assign litepciedma0_reader_table_syncfifo0_syncfifo0_dout = litepciedma0_reader_table_syncfifo0_rdport_dat_r;
assign litepciedma0_reader_table_syncfifo0_syncfifo0_writable = (litepciedma0_reader_table_syncfifo0_level != 9'd256);
assign litepciedma0_reader_table_syncfifo0_syncfifo0_readable = (litepciedma0_reader_table_syncfifo0_level != 1'd0);
assign litepciedma0_reader_splitter_user_id_ce = (litepciedma0_reader_splitter_sink_valid & litepciedma0_reader_splitter_sink_ready);
assign litepciedma0_reader_splitter_source_payload_address = (litepciedma0_reader_splitter_sink_payload_address + litepciedma0_reader_splitter_offset);
assign litepciedma0_reader_splitter_source_payload_control = litepciedma0_reader_splitter_sink_payload_control;
assign litepciedma0_reader_splitter_source_payload_user_id = litepciedma0_reader_splitter_user_id;
assign litepciedma0_reader_bufferizeendpoints0_sink_valid = litepciedma0_reader_splitter_source_valid;
assign litepciedma0_reader_splitter_source_ready = litepciedma0_reader_bufferizeendpoints0_sink_ready;
assign litepciedma0_reader_bufferizeendpoints0_sink_first = litepciedma0_reader_splitter_source_first;
assign litepciedma0_reader_bufferizeendpoints0_sink_last = litepciedma0_reader_splitter_source_last;
assign litepciedma0_reader_bufferizeendpoints0_sink_payload_address = litepciedma0_reader_splitter_source_payload_address;
assign litepciedma0_reader_bufferizeendpoints0_sink_payload_length = litepciedma0_reader_splitter_source_payload_length;
assign litepciedma0_reader_bufferizeendpoints0_sink_payload_control = litepciedma0_reader_splitter_source_payload_control;
assign litepciedma0_reader_bufferizeendpoints0_sink_payload_user_id = litepciedma0_reader_splitter_source_payload_user_id;
always @(*) begin
	litepciedma0_reader_splitter_source_payload_length <= 24'd0;
	subfragments_bufferizeendpoints0_next_state1 <= 2'd0;
	litepciedma0_reader_splitter_offset_reset <= 1'd0;
	litepciedma0_reader_splitter_sink_ready <= 1'd0;
	litepciedma0_reader_splitter_offset_ce <= 1'd0;
	litepciedma0_reader_splitter_source_first <= 1'd0;
	litepciedma0_reader_splitter_source_valid <= 1'd0;
	litepciedma0_reader_splitter_length_update <= 1'd0;
	litepciedma0_reader_splitter_source_last <= 1'd0;
	subfragments_bufferizeendpoints0_next_state1 <= subfragments_bufferizeendpoints0_state1;
	case (subfragments_bufferizeendpoints0_state1)
		1'd1: begin
			litepciedma0_reader_splitter_source_valid <= 1'd1;
			litepciedma0_reader_splitter_source_first <= (litepciedma0_reader_splitter_offset == 1'd0);
			if (((litepciedma0_reader_splitter_length - litepciedma0_reader_splitter_offset) > 10'd512)) begin
				litepciedma0_reader_splitter_source_last <= litepciedma0_reader_splitter_end;
				litepciedma0_reader_splitter_source_payload_length <= 10'd512;
				litepciedma0_reader_splitter_offset_ce <= litepciedma0_reader_splitter_source_ready;
				if ((litepciedma0_reader_splitter_source_ready & litepciedma0_reader_splitter_end)) begin
					subfragments_bufferizeendpoints0_next_state1 <= 2'd2;
				end
			end else begin
				litepciedma0_reader_splitter_source_last <= 1'd1;
				litepciedma0_reader_splitter_source_payload_length <= (litepciedma0_reader_splitter_length - litepciedma0_reader_splitter_offset);
				if (litepciedma0_reader_splitter_source_ready) begin
					subfragments_bufferizeendpoints0_next_state1 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma0_reader_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints0_next_state1 <= 1'd0;
		end
		default: begin
			litepciedma0_reader_splitter_offset_reset <= 1'd1;
			if (litepciedma0_reader_splitter_sink_valid) begin
				litepciedma0_reader_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints0_next_state1 <= 1'd1;
			end else begin
				litepciedma0_reader_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma0_reader_bufferizeendpoints0_pipe_ce = (litepciedma0_reader_bufferizeendpoints0_source_ready | (~litepciedma0_reader_bufferizeendpoints0_valid_n));
assign litepciedma0_reader_bufferizeendpoints0_sink_ready = litepciedma0_reader_bufferizeendpoints0_pipe_ce;
assign litepciedma0_reader_bufferizeendpoints0_source_valid = litepciedma0_reader_bufferizeendpoints0_valid_n;
assign litepciedma0_reader_bufferizeendpoints0_busy = (1'd0 | litepciedma0_reader_bufferizeendpoints0_valid_n);
assign litepciedma0_reader_bufferizeendpoints0_source_first = litepciedma0_reader_bufferizeendpoints0_first_n;
assign litepciedma0_reader_bufferizeendpoints0_source_last = litepciedma0_reader_bufferizeendpoints0_last_n;
always @(*) begin
	litepciedma0_litepciemasterinternalport1_sink_valid <= 1'd0;
	subfragments_fsm0_next_state2 <= 1'd0;
	litepciedma0_reader_bufferizeendpoints0_source_ready <= 1'd0;
	subfragments_fsm0_next_state2 <= subfragments_fsm0_state2;
	case (subfragments_fsm0_state2)
		1'd1: begin
			litepciedma0_litepciemasterinternalport1_sink_valid <= 1'd1;
			if (litepciedma0_litepciemasterinternalport1_sink_ready) begin
				litepciedma0_reader_bufferizeendpoints0_source_ready <= 1'd1;
				subfragments_fsm0_next_state2 <= 1'd0;
			end
		end
		default: begin
			if (litepciedma0_reader_request_ready) begin
				subfragments_fsm0_next_state2 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma0_reader_fifo_syncfifo0_din = {litepciedma0_reader_fifo_fifo_in_last, litepciedma0_reader_fifo_fifo_in_first, litepciedma0_reader_fifo_fifo_in_payload_data};
assign {litepciedma0_reader_fifo_fifo_out_last, litepciedma0_reader_fifo_fifo_out_first, litepciedma0_reader_fifo_fifo_out_payload_data} = litepciedma0_reader_fifo_syncfifo0_dout;
assign litepciedma0_reader_fifo_sink_ready = litepciedma0_reader_fifo_syncfifo0_writable;
assign litepciedma0_reader_fifo_syncfifo0_we = litepciedma0_reader_fifo_sink_valid;
assign litepciedma0_reader_fifo_fifo_in_first = litepciedma0_reader_fifo_sink_first;
assign litepciedma0_reader_fifo_fifo_in_last = litepciedma0_reader_fifo_sink_last;
assign litepciedma0_reader_fifo_fifo_in_payload_data = litepciedma0_reader_fifo_sink_payload_data;
assign litepciedma0_reader_fifo_source_valid = litepciedma0_reader_fifo_readable;
assign litepciedma0_reader_fifo_source_first = litepciedma0_reader_fifo_fifo_out_first;
assign litepciedma0_reader_fifo_source_last = litepciedma0_reader_fifo_fifo_out_last;
assign litepciedma0_reader_fifo_source_payload_data = litepciedma0_reader_fifo_fifo_out_payload_data;
assign litepciedma0_reader_fifo_re = litepciedma0_reader_fifo_source_ready;
assign litepciedma0_reader_fifo_syncfifo0_re = (litepciedma0_reader_fifo_syncfifo0_readable & ((~litepciedma0_reader_fifo_readable) | litepciedma0_reader_fifo_re));
assign litepciedma0_reader_fifo_level1 = (litepciedma0_reader_fifo_level0 + litepciedma0_reader_fifo_readable);
always @(*) begin
	litepciedma0_reader_fifo_wrport_adr <= 9'd0;
	if (litepciedma0_reader_fifo_replace) begin
		litepciedma0_reader_fifo_wrport_adr <= (litepciedma0_reader_fifo_produce - 1'd1);
	end else begin
		litepciedma0_reader_fifo_wrport_adr <= litepciedma0_reader_fifo_produce;
	end
end
assign litepciedma0_reader_fifo_wrport_dat_w = litepciedma0_reader_fifo_syncfifo0_din;
assign litepciedma0_reader_fifo_wrport_we = (litepciedma0_reader_fifo_syncfifo0_we & (litepciedma0_reader_fifo_syncfifo0_writable | litepciedma0_reader_fifo_replace));
assign litepciedma0_reader_fifo_do_read = (litepciedma0_reader_fifo_syncfifo0_readable & litepciedma0_reader_fifo_syncfifo0_re);
assign litepciedma0_reader_fifo_rdport_adr = litepciedma0_reader_fifo_consume;
assign litepciedma0_reader_fifo_syncfifo0_dout = litepciedma0_reader_fifo_rdport_dat_r;
assign litepciedma0_reader_fifo_rdport_re = litepciedma0_reader_fifo_do_read;
assign litepciedma0_reader_fifo_syncfifo0_writable = (litepciedma0_reader_fifo_level0 != 10'd512);
assign litepciedma0_reader_fifo_syncfifo0_readable = (litepciedma0_reader_fifo_level0 != 1'd0);
always @(*) begin
	litepciedma0_source_valid <= 1'd0;
	litepciedma0_source_first <= 1'd0;
	litepciedma0_source_last <= 1'd0;
	litepciedma0_source_payload_data <= 64'd0;
	litepciedma0_next_source_valid <= 1'd0;
	litepciedma0_next_source_first <= 1'd0;
	litepciedma0_next_source_last <= 1'd0;
	litepciedma0_next_source_payload_data <= 64'd0;
	litepciedma0_next_sink_ready <= 1'd0;
	litepciedma0_sink_ready <= 1'd0;
	if (litepciedma0_storage) begin
		litepciedma0_source_valid <= litepciedma0_sink_valid;
		litepciedma0_sink_ready <= litepciedma0_source_ready;
		litepciedma0_source_first <= litepciedma0_sink_first;
		litepciedma0_source_last <= litepciedma0_sink_last;
		litepciedma0_source_payload_data <= litepciedma0_sink_payload_data;
	end else begin
		litepciedma0_next_source_valid <= litepciedma0_sink_valid;
		litepciedma0_sink_ready <= litepciedma0_next_source_ready;
		litepciedma0_next_source_first <= litepciedma0_sink_first;
		litepciedma0_next_source_last <= litepciedma0_sink_last;
		litepciedma0_next_source_payload_data <= litepciedma0_sink_payload_data;
		litepciedma0_source_valid <= litepciedma0_next_sink_valid;
		litepciedma0_next_sink_ready <= litepciedma0_source_ready;
		litepciedma0_source_first <= litepciedma0_next_sink_first;
		litepciedma0_source_last <= litepciedma0_next_sink_last;
		litepciedma0_source_payload_data <= litepciedma0_next_sink_payload_data;
	end
end
assign litepciedma0_tx_fifo_syncfifo0_din = {litepciedma0_tx_fifo_fifo_in_last, litepciedma0_tx_fifo_fifo_in_first, litepciedma0_tx_fifo_fifo_in_payload_data};
assign {litepciedma0_tx_fifo_fifo_out_last, litepciedma0_tx_fifo_fifo_out_first, litepciedma0_tx_fifo_fifo_out_payload_data} = litepciedma0_tx_fifo_syncfifo0_dout;
assign litepciedma0_tx_fifo_sink_ready = litepciedma0_tx_fifo_syncfifo0_writable;
assign litepciedma0_tx_fifo_syncfifo0_we = litepciedma0_tx_fifo_sink_valid;
assign litepciedma0_tx_fifo_fifo_in_first = litepciedma0_tx_fifo_sink_first;
assign litepciedma0_tx_fifo_fifo_in_last = litepciedma0_tx_fifo_sink_last;
assign litepciedma0_tx_fifo_fifo_in_payload_data = litepciedma0_tx_fifo_sink_payload_data;
assign litepciedma0_tx_fifo_source_valid = litepciedma0_tx_fifo_readable;
assign litepciedma0_tx_fifo_source_first = litepciedma0_tx_fifo_fifo_out_first;
assign litepciedma0_tx_fifo_source_last = litepciedma0_tx_fifo_fifo_out_last;
assign litepciedma0_tx_fifo_source_payload_data = litepciedma0_tx_fifo_fifo_out_payload_data;
assign litepciedma0_tx_fifo_re = litepciedma0_tx_fifo_source_ready;
assign litepciedma0_tx_fifo_syncfifo0_re = (litepciedma0_tx_fifo_syncfifo0_readable & ((~litepciedma0_tx_fifo_readable) | litepciedma0_tx_fifo_re));
assign litepciedma0_tx_fifo_level1 = (litepciedma0_tx_fifo_level0 + litepciedma0_tx_fifo_readable);
always @(*) begin
	litepciedma0_tx_fifo_wrport_adr <= 10'd0;
	if (litepciedma0_tx_fifo_replace) begin
		litepciedma0_tx_fifo_wrport_adr <= (litepciedma0_tx_fifo_produce - 1'd1);
	end else begin
		litepciedma0_tx_fifo_wrport_adr <= litepciedma0_tx_fifo_produce;
	end
end
assign litepciedma0_tx_fifo_wrport_dat_w = litepciedma0_tx_fifo_syncfifo0_din;
assign litepciedma0_tx_fifo_wrport_we = (litepciedma0_tx_fifo_syncfifo0_we & (litepciedma0_tx_fifo_syncfifo0_writable | litepciedma0_tx_fifo_replace));
assign litepciedma0_tx_fifo_do_read = (litepciedma0_tx_fifo_syncfifo0_readable & litepciedma0_tx_fifo_syncfifo0_re);
assign litepciedma0_tx_fifo_rdport_adr = litepciedma0_tx_fifo_consume;
assign litepciedma0_tx_fifo_syncfifo0_dout = litepciedma0_tx_fifo_rdport_dat_r;
assign litepciedma0_tx_fifo_rdport_re = litepciedma0_tx_fifo_do_read;
assign litepciedma0_tx_fifo_syncfifo0_writable = (litepciedma0_tx_fifo_level0 != 11'd1024);
assign litepciedma0_tx_fifo_syncfifo0_readable = (litepciedma0_tx_fifo_level0 != 1'd0);
assign litepciedma0_rx_fifo_syncfifo0_din = {litepciedma0_rx_fifo_fifo_in_last, litepciedma0_rx_fifo_fifo_in_first, litepciedma0_rx_fifo_fifo_in_payload_data};
assign {litepciedma0_rx_fifo_fifo_out_last, litepciedma0_rx_fifo_fifo_out_first, litepciedma0_rx_fifo_fifo_out_payload_data} = litepciedma0_rx_fifo_syncfifo0_dout;
assign litepciedma0_rx_fifo_sink_ready = litepciedma0_rx_fifo_syncfifo0_writable;
assign litepciedma0_rx_fifo_syncfifo0_we = litepciedma0_rx_fifo_sink_valid;
assign litepciedma0_rx_fifo_fifo_in_first = litepciedma0_rx_fifo_sink_first;
assign litepciedma0_rx_fifo_fifo_in_last = litepciedma0_rx_fifo_sink_last;
assign litepciedma0_rx_fifo_fifo_in_payload_data = litepciedma0_rx_fifo_sink_payload_data;
assign litepciedma0_rx_fifo_source_valid = litepciedma0_rx_fifo_readable;
assign litepciedma0_rx_fifo_source_first = litepciedma0_rx_fifo_fifo_out_first;
assign litepciedma0_rx_fifo_source_last = litepciedma0_rx_fifo_fifo_out_last;
assign litepciedma0_rx_fifo_source_payload_data = litepciedma0_rx_fifo_fifo_out_payload_data;
assign litepciedma0_rx_fifo_re = litepciedma0_rx_fifo_source_ready;
assign litepciedma0_rx_fifo_syncfifo0_re = (litepciedma0_rx_fifo_syncfifo0_readable & ((~litepciedma0_rx_fifo_readable) | litepciedma0_rx_fifo_re));
assign litepciedma0_rx_fifo_level1 = (litepciedma0_rx_fifo_level0 + litepciedma0_rx_fifo_readable);
always @(*) begin
	litepciedma0_rx_fifo_wrport_adr <= 10'd0;
	if (litepciedma0_rx_fifo_replace) begin
		litepciedma0_rx_fifo_wrport_adr <= (litepciedma0_rx_fifo_produce - 1'd1);
	end else begin
		litepciedma0_rx_fifo_wrport_adr <= litepciedma0_rx_fifo_produce;
	end
end
assign litepciedma0_rx_fifo_wrport_dat_w = litepciedma0_rx_fifo_syncfifo0_din;
assign litepciedma0_rx_fifo_wrport_we = (litepciedma0_rx_fifo_syncfifo0_we & (litepciedma0_rx_fifo_syncfifo0_writable | litepciedma0_rx_fifo_replace));
assign litepciedma0_rx_fifo_do_read = (litepciedma0_rx_fifo_syncfifo0_readable & litepciedma0_rx_fifo_syncfifo0_re);
assign litepciedma0_rx_fifo_rdport_adr = litepciedma0_rx_fifo_consume;
assign litepciedma0_rx_fifo_syncfifo0_dout = litepciedma0_rx_fifo_rdport_dat_r;
assign litepciedma0_rx_fifo_rdport_re = litepciedma0_rx_fifo_do_read;
assign litepciedma0_rx_fifo_syncfifo0_writable = (litepciedma0_rx_fifo_level0 != 11'd1024);
assign litepciedma0_rx_fifo_syncfifo0_readable = (litepciedma0_rx_fifo_level0 != 1'd0);
assign litepciedma1_sink_valid = litepciedma1_reader_source_source_valid;
assign litepciedma1_reader_source_source_ready = litepciedma1_sink_ready;
assign litepciedma1_sink_first = litepciedma1_reader_source_source_first;
assign litepciedma1_sink_last = litepciedma1_reader_source_source_last;
assign litepciedma1_sink_payload_data = litepciedma1_reader_source_source_payload_data;
assign litepciedma1_writer_sink_sink_valid = litepciedma1_source_valid;
assign litepciedma1_source_ready = litepciedma1_writer_sink_sink_ready;
assign litepciedma1_writer_sink_sink_first = litepciedma1_source_first;
assign litepciedma1_writer_sink_sink_last = litepciedma1_source_last;
assign litepciedma1_writer_sink_sink_payload_data = litepciedma1_source_payload_data;
assign litepciedma1_tx_fifo_sink_valid = litepciedma1_next_source_valid;
assign litepciedma1_next_source_ready = litepciedma1_tx_fifo_sink_ready;
assign litepciedma1_tx_fifo_sink_first = litepciedma1_next_source_first;
assign litepciedma1_tx_fifo_sink_last = litepciedma1_next_source_last;
assign litepciedma1_tx_fifo_sink_payload_data = litepciedma1_next_source_payload_data;
assign litepciedma1_next_sink_valid = litepciedma1_rx_fifo_source_valid;
assign litepciedma1_rx_fifo_source_ready = litepciedma1_next_sink_ready;
assign litepciedma1_next_sink_first = litepciedma1_rx_fifo_source_first;
assign litepciedma1_next_sink_last = litepciedma1_rx_fifo_source_last;
assign litepciedma1_next_sink_payload_data = litepciedma1_rx_fifo_source_payload_data;
assign litepciedma1_writer_fifo_syncfifo1_we = (litepciedma1_writer_sink_sink_valid & litepciedma1_writer_enable_storage);
assign litepciedma1_writer_sink_sink_ready = (litepciedma1_writer_fifo_syncfifo1_writable | (~litepciedma1_writer_enable_storage));
assign litepciedma1_writer_fifo_syncfifo1_din = {litepciedma1_writer_sink_sink_last, litepciedma1_writer_sink_sink_payload_data};
assign litepciedma1_writer_resetinserter_reset0 = (~litepciedma1_writer_enable_storage);
assign litepciedma1_writer_resetinserter_reset1 = (~litepciedma1_writer_enable_storage);
assign litepciedma1_writer_splitter_sink_valid = litepciedma1_writer_table_source_source_valid;
assign litepciedma1_writer_table_source_source_ready = litepciedma1_writer_splitter_sink_ready;
assign litepciedma1_writer_splitter_sink_first = litepciedma1_writer_table_source_source_first;
assign litepciedma1_writer_splitter_sink_last = litepciedma1_writer_table_source_source_last;
assign litepciedma1_writer_splitter_sink_payload_address = litepciedma1_writer_table_source_source_payload_address;
assign litepciedma1_writer_splitter_sink_payload_length = litepciedma1_writer_table_source_source_payload_length;
assign litepciedma1_writer_splitter_sink_payload_control = litepciedma1_writer_table_source_source_payload_control;
assign litepciedma1_litepciemasterinternalport2_sink_payload_channel = 2'd2;
assign litepciedma1_litepciemasterinternalport2_sink_payload_user_id = litepciedma1_writer_bufferizeendpoints1_source_payload_user_id;
assign litepciedma1_litepciemasterinternalport2_sink_first = (litepciedma1_writer_counter == 1'd0);
assign litepciedma1_litepciemasterinternalport2_sink_last = ((~litepciedma1_writer_enable_storage) | (litepciedma1_writer_counter == (litepciedma1_writer_bufferizeendpoints1_source_payload_length[23:3] - 1'd1)));
assign litepciedma1_litepciemasterinternalport2_sink_payload_we = 1'd1;
assign litepciedma1_litepciemasterinternalport2_sink_payload_adr = litepciedma1_writer_bufferizeendpoints1_source_payload_address;
assign litepciedma1_litepciemasterinternalport2_sink_payload_req_id = pcie_phy_id;
assign litepciedma1_litepciemasterinternalport2_sink_payload_tag = 1'd0;
assign litepciedma1_litepciemasterinternalport2_sink_payload_len = litepciedma1_writer_bufferizeendpoints1_source_payload_length[23:2];
assign litepciedma1_litepciemasterinternalport2_sink_payload_dat = litepciedma1_writer_fifo_syncfifo1_dout[63:0];
assign litepciedma1_writer_irq = (((litepciedma1_writer_bufferizeendpoints1_source_valid & litepciedma1_writer_bufferizeendpoints1_source_ready) & litepciedma1_writer_bufferizeendpoints1_source_last) & (~litepciedma1_writer_bufferizeendpoints1_source_payload_control[0]));
assign litepciedma1_writer_fifo_syncfifo1_re = (litepciedma1_writer_fifo_syncfifo1_readable & ((~litepciedma1_writer_fifo_readable) | litepciedma1_writer_fifo_re));
assign litepciedma1_writer_fifo_level1 = (litepciedma1_writer_fifo_level0 + litepciedma1_writer_fifo_readable);
always @(*) begin
	litepciedma1_writer_fifo_wrport_adr <= 8'd0;
	if (litepciedma1_writer_fifo_replace) begin
		litepciedma1_writer_fifo_wrport_adr <= (litepciedma1_writer_fifo_produce - 1'd1);
	end else begin
		litepciedma1_writer_fifo_wrport_adr <= litepciedma1_writer_fifo_produce;
	end
end
assign litepciedma1_writer_fifo_wrport_dat_w = litepciedma1_writer_fifo_syncfifo1_din;
assign litepciedma1_writer_fifo_wrport_we = (litepciedma1_writer_fifo_syncfifo1_we & (litepciedma1_writer_fifo_syncfifo1_writable | litepciedma1_writer_fifo_replace));
assign litepciedma1_writer_fifo_do_read = (litepciedma1_writer_fifo_syncfifo1_readable & litepciedma1_writer_fifo_syncfifo1_re);
assign litepciedma1_writer_fifo_rdport_adr = litepciedma1_writer_fifo_consume;
assign litepciedma1_writer_fifo_syncfifo1_dout = litepciedma1_writer_fifo_rdport_dat_r;
assign litepciedma1_writer_fifo_rdport_re = litepciedma1_writer_fifo_do_read;
assign litepciedma1_writer_fifo_syncfifo1_writable = (litepciedma1_writer_fifo_level0 != 9'd256);
assign litepciedma1_writer_fifo_syncfifo1_readable = (litepciedma1_writer_fifo_level0 != 1'd0);
assign litepciedma1_writer_table_reset = (litepciedma1_writer_table_flush_r & litepciedma1_writer_table_flush_re);
assign litepciedma1_writer_table_level_status = litepciedma1_writer_table_syncfifo1_level;
assign litepciedma1_writer_table_source_source_valid = litepciedma1_writer_table_syncfifo1_source_valid;
assign litepciedma1_writer_table_source_source_first = litepciedma1_writer_table_syncfifo1_source_first;
assign litepciedma1_writer_table_syncfifo1_source_ready = (litepciedma1_writer_table_source_source_valid & litepciedma1_writer_table_source_source_ready);
assign litepciedma1_writer_table_source_source_payload_address = litepciedma1_writer_table_syncfifo1_source_payload_address;
assign litepciedma1_writer_table_source_source_payload_length = litepciedma1_writer_table_syncfifo1_source_payload_length;
assign litepciedma1_writer_table_source_source_payload_control = litepciedma1_writer_table_syncfifo1_source_payload_control;
assign litepciedma1_writer_table_syncfifo1_syncfifo1_din = {litepciedma1_writer_table_syncfifo1_fifo_in_last, litepciedma1_writer_table_syncfifo1_fifo_in_first, litepciedma1_writer_table_syncfifo1_fifo_in_payload_control, litepciedma1_writer_table_syncfifo1_fifo_in_payload_length, litepciedma1_writer_table_syncfifo1_fifo_in_payload_address};
assign {litepciedma1_writer_table_syncfifo1_fifo_out_last, litepciedma1_writer_table_syncfifo1_fifo_out_first, litepciedma1_writer_table_syncfifo1_fifo_out_payload_control, litepciedma1_writer_table_syncfifo1_fifo_out_payload_length, litepciedma1_writer_table_syncfifo1_fifo_out_payload_address} = litepciedma1_writer_table_syncfifo1_syncfifo1_dout;
assign litepciedma1_writer_table_syncfifo1_sink_ready = litepciedma1_writer_table_syncfifo1_syncfifo1_writable;
assign litepciedma1_writer_table_syncfifo1_syncfifo1_we = litepciedma1_writer_table_syncfifo1_sink_valid;
assign litepciedma1_writer_table_syncfifo1_fifo_in_first = litepciedma1_writer_table_syncfifo1_sink_first;
assign litepciedma1_writer_table_syncfifo1_fifo_in_last = litepciedma1_writer_table_syncfifo1_sink_last;
assign litepciedma1_writer_table_syncfifo1_fifo_in_payload_address = litepciedma1_writer_table_syncfifo1_sink_payload_address;
assign litepciedma1_writer_table_syncfifo1_fifo_in_payload_length = litepciedma1_writer_table_syncfifo1_sink_payload_length;
assign litepciedma1_writer_table_syncfifo1_fifo_in_payload_control = litepciedma1_writer_table_syncfifo1_sink_payload_control;
assign litepciedma1_writer_table_syncfifo1_source_valid = litepciedma1_writer_table_syncfifo1_syncfifo1_readable;
assign litepciedma1_writer_table_syncfifo1_source_first = litepciedma1_writer_table_syncfifo1_fifo_out_first;
assign litepciedma1_writer_table_syncfifo1_source_last = litepciedma1_writer_table_syncfifo1_fifo_out_last;
assign litepciedma1_writer_table_syncfifo1_source_payload_address = litepciedma1_writer_table_syncfifo1_fifo_out_payload_address;
assign litepciedma1_writer_table_syncfifo1_source_payload_length = litepciedma1_writer_table_syncfifo1_fifo_out_payload_length;
assign litepciedma1_writer_table_syncfifo1_source_payload_control = litepciedma1_writer_table_syncfifo1_fifo_out_payload_control;
assign litepciedma1_writer_table_syncfifo1_syncfifo1_re = litepciedma1_writer_table_syncfifo1_source_ready;
always @(*) begin
	litepciedma1_writer_table_syncfifo1_wrport_adr <= 8'd0;
	if (litepciedma1_writer_table_syncfifo1_replace) begin
		litepciedma1_writer_table_syncfifo1_wrport_adr <= (litepciedma1_writer_table_syncfifo1_produce - 1'd1);
	end else begin
		litepciedma1_writer_table_syncfifo1_wrport_adr <= litepciedma1_writer_table_syncfifo1_produce;
	end
end
assign litepciedma1_writer_table_syncfifo1_wrport_dat_w = litepciedma1_writer_table_syncfifo1_syncfifo1_din;
assign litepciedma1_writer_table_syncfifo1_wrport_we = (litepciedma1_writer_table_syncfifo1_syncfifo1_we & (litepciedma1_writer_table_syncfifo1_syncfifo1_writable | litepciedma1_writer_table_syncfifo1_replace));
assign litepciedma1_writer_table_syncfifo1_do_read = (litepciedma1_writer_table_syncfifo1_syncfifo1_readable & litepciedma1_writer_table_syncfifo1_syncfifo1_re);
assign litepciedma1_writer_table_syncfifo1_rdport_adr = litepciedma1_writer_table_syncfifo1_consume;
assign litepciedma1_writer_table_syncfifo1_syncfifo1_dout = litepciedma1_writer_table_syncfifo1_rdport_dat_r;
assign litepciedma1_writer_table_syncfifo1_syncfifo1_writable = (litepciedma1_writer_table_syncfifo1_level != 9'd256);
assign litepciedma1_writer_table_syncfifo1_syncfifo1_readable = (litepciedma1_writer_table_syncfifo1_level != 1'd0);
assign litepciedma1_writer_splitter_user_id_ce = (litepciedma1_writer_splitter_sink_valid & litepciedma1_writer_splitter_sink_ready);
assign litepciedma1_writer_splitter_source_payload_address = (litepciedma1_writer_splitter_sink_payload_address + litepciedma1_writer_splitter_offset);
assign litepciedma1_writer_splitter_source_payload_control = litepciedma1_writer_splitter_sink_payload_control;
assign litepciedma1_writer_splitter_source_payload_user_id = litepciedma1_writer_splitter_user_id;
assign litepciedma1_writer_bufferizeendpoints1_sink_valid = litepciedma1_writer_splitter_source_valid;
assign litepciedma1_writer_splitter_source_ready = litepciedma1_writer_bufferizeendpoints1_sink_ready;
assign litepciedma1_writer_bufferizeendpoints1_sink_first = litepciedma1_writer_splitter_source_first;
assign litepciedma1_writer_bufferizeendpoints1_sink_last = litepciedma1_writer_splitter_source_last;
assign litepciedma1_writer_bufferizeendpoints1_sink_payload_address = litepciedma1_writer_splitter_source_payload_address;
assign litepciedma1_writer_bufferizeendpoints1_sink_payload_length = litepciedma1_writer_splitter_source_payload_length;
assign litepciedma1_writer_bufferizeendpoints1_sink_payload_control = litepciedma1_writer_splitter_source_payload_control;
assign litepciedma1_writer_bufferizeendpoints1_sink_payload_user_id = litepciedma1_writer_splitter_source_payload_user_id;
always @(*) begin
	litepciedma1_writer_splitter_source_last <= 1'd0;
	litepciedma1_writer_splitter_source_payload_length <= 24'd0;
	subfragments_bufferizeendpoints1_next_state0 <= 2'd0;
	litepciedma1_writer_splitter_sink_ready <= 1'd0;
	litepciedma1_writer_splitter_offset_reset <= 1'd0;
	litepciedma1_writer_splitter_offset_ce <= 1'd0;
	litepciedma1_writer_splitter_source_valid <= 1'd0;
	litepciedma1_writer_splitter_length_update <= 1'd0;
	litepciedma1_writer_splitter_source_first <= 1'd0;
	subfragments_bufferizeendpoints1_next_state0 <= subfragments_bufferizeendpoints1_state0;
	case (subfragments_bufferizeendpoints1_state0)
		1'd1: begin
			litepciedma1_writer_splitter_source_valid <= 1'd1;
			litepciedma1_writer_splitter_source_first <= (litepciedma1_writer_splitter_offset == 1'd0);
			if (((litepciedma1_writer_splitter_length - litepciedma1_writer_splitter_offset) > pcie_phy_max_payload_size)) begin
				litepciedma1_writer_splitter_source_last <= litepciedma1_writer_splitter_end;
				litepciedma1_writer_splitter_source_payload_length <= pcie_phy_max_payload_size;
				litepciedma1_writer_splitter_offset_ce <= litepciedma1_writer_splitter_source_ready;
				if ((litepciedma1_writer_splitter_source_ready & litepciedma1_writer_splitter_end)) begin
					subfragments_bufferizeendpoints1_next_state0 <= 2'd2;
				end
			end else begin
				litepciedma1_writer_splitter_source_last <= 1'd1;
				litepciedma1_writer_splitter_source_payload_length <= (litepciedma1_writer_splitter_length - litepciedma1_writer_splitter_offset);
				if (litepciedma1_writer_splitter_source_ready) begin
					subfragments_bufferizeendpoints1_next_state0 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma1_writer_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints1_next_state0 <= 1'd0;
		end
		default: begin
			litepciedma1_writer_splitter_offset_reset <= 1'd1;
			if (litepciedma1_writer_splitter_sink_valid) begin
				litepciedma1_writer_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints1_next_state0 <= 1'd1;
			end else begin
				litepciedma1_writer_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma1_writer_bufferizeendpoints1_pipe_ce = (litepciedma1_writer_bufferizeendpoints1_source_ready | (~litepciedma1_writer_bufferizeendpoints1_valid_n));
assign litepciedma1_writer_bufferizeendpoints1_sink_ready = litepciedma1_writer_bufferizeendpoints1_pipe_ce;
assign litepciedma1_writer_bufferizeendpoints1_source_valid = litepciedma1_writer_bufferizeendpoints1_valid_n;
assign litepciedma1_writer_bufferizeendpoints1_busy = (1'd0 | litepciedma1_writer_bufferizeendpoints1_valid_n);
assign litepciedma1_writer_bufferizeendpoints1_source_first = litepciedma1_writer_bufferizeendpoints1_first_n;
assign litepciedma1_writer_bufferizeendpoints1_source_last = litepciedma1_writer_bufferizeendpoints1_last_n;
always @(*) begin
	litepciedma1_writer_bufferizeendpoints1_source_ready <= 1'd0;
	litepciedma1_litepciemasterinternalport2_sink_valid <= 1'd0;
	litepciedma1_writer_counter_reset <= 1'd0;
	litepciedma1_writer_counter_ce <= 1'd0;
	subfragments_fsm1_next_state1 <= 1'd0;
	litepciedma1_writer_fifo_re <= 1'd0;
	litepciedma1_writer_splitter_end <= 1'd0;
	subfragments_fsm1_next_state1 <= subfragments_fsm1_state1;
	case (subfragments_fsm1_state1)
		1'd1: begin
			litepciedma1_writer_counter_ce <= (litepciedma1_litepciemasterinternalport2_sink_valid & litepciedma1_litepciemasterinternalport2_sink_ready);
			litepciedma1_litepciemasterinternalport2_sink_valid <= 1'd1;
			if (litepciedma1_litepciemasterinternalport2_sink_ready) begin
				litepciedma1_writer_fifo_re <= (~(litepciedma1_writer_fifo_syncfifo1_dout[64] & (~litepciedma1_writer_bufferizeendpoints1_source_payload_control[1])));
				if (litepciedma1_litepciemasterinternalport2_sink_last) begin
					litepciedma1_writer_fifo_re <= 1'd1;
					litepciedma1_writer_splitter_end <= (litepciedma1_writer_fifo_syncfifo1_dout[64] & (~litepciedma1_writer_bufferizeendpoints1_source_payload_control[1]));
					litepciedma1_writer_bufferizeendpoints1_source_ready <= 1'd1;
					subfragments_fsm1_next_state1 <= 1'd0;
				end
			end
		end
		default: begin
			litepciedma1_writer_counter_reset <= 1'd1;
			if (litepciedma1_writer_request_ready) begin
				subfragments_fsm1_next_state1 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma1_reader_resetinserter_reset0 = (~litepciedma1_reader_enable_storage);
assign litepciedma1_reader_splitter_sink_valid = litepciedma1_reader_table_source_source_valid;
assign litepciedma1_reader_table_source_source_ready = litepciedma1_reader_splitter_sink_ready;
assign litepciedma1_reader_splitter_sink_first = litepciedma1_reader_table_source_source_first;
assign litepciedma1_reader_splitter_sink_last = litepciedma1_reader_table_source_source_last;
assign litepciedma1_reader_splitter_sink_payload_address = litepciedma1_reader_table_source_source_payload_address;
assign litepciedma1_reader_splitter_sink_payload_length = litepciedma1_reader_table_source_source_payload_length;
assign litepciedma1_reader_splitter_sink_payload_control = litepciedma1_reader_table_source_source_payload_control;
assign litepciedma1_litepciemasterinternalport3_sink_payload_channel = 2'd3;
assign litepciedma1_litepciemasterinternalport3_sink_payload_user_id = litepciedma1_reader_bufferizeendpoints1_source_payload_user_id;
assign litepciedma1_litepciemasterinternalport3_sink_first = 1'd1;
assign litepciedma1_litepciemasterinternalport3_sink_last = 1'd1;
assign litepciedma1_litepciemasterinternalport3_sink_payload_we = 1'd0;
assign litepciedma1_litepciemasterinternalport3_sink_payload_adr = litepciedma1_reader_bufferizeendpoints1_source_payload_address;
assign litepciedma1_litepciemasterinternalport3_sink_payload_len = litepciedma1_reader_bufferizeendpoints1_source_payload_length[23:2];
assign litepciedma1_litepciemasterinternalport3_sink_payload_req_id = pcie_phy_id;
assign litepciedma1_litepciemasterinternalport3_sink_payload_dat = 1'd0;
assign litepciedma1_reader_resetinserter_reset1 = (~litepciedma1_reader_enable_storage);
assign litepciedma1_reader_fifo_sink_valid = litepciedma1_litepciemasterinternalport3_source_valid;
assign litepciedma1_reader_fifo_sink_first = (litepciedma1_litepciemasterinternalport3_source_first & (litepciedma1_litepciemasterinternalport3_source_payload_user_id != litepciedma1_reader_last_user_id));
assign litepciedma1_reader_fifo_sink_payload_data = litepciedma1_litepciemasterinternalport3_source_payload_dat;
assign litepciedma1_litepciemasterinternalport3_source_ready = (litepciedma1_reader_fifo_sink_ready | (~litepciedma1_reader_enable_storage));
assign litepciedma1_reader_source_source_valid = litepciedma1_reader_fifo_source_valid;
assign litepciedma1_reader_fifo_source_ready = litepciedma1_reader_source_source_ready;
assign litepciedma1_reader_source_source_first = litepciedma1_reader_fifo_source_first;
assign litepciedma1_reader_source_source_last = litepciedma1_reader_fifo_source_last;
assign litepciedma1_reader_source_source_payload_data = litepciedma1_reader_fifo_source_payload_data;
assign litepciedma1_reader_irq = (((litepciedma1_reader_bufferizeendpoints1_source_valid & litepciedma1_reader_bufferizeendpoints1_source_ready) & litepciedma1_reader_bufferizeendpoints1_source_last) & (~litepciedma1_reader_bufferizeendpoints1_source_payload_control[0]));
assign litepciedma1_reader_table_reset = (litepciedma1_reader_table_flush_r & litepciedma1_reader_table_flush_re);
assign litepciedma1_reader_table_level_status = litepciedma1_reader_table_syncfifo1_level;
assign litepciedma1_reader_table_source_source_valid = litepciedma1_reader_table_syncfifo1_source_valid;
assign litepciedma1_reader_table_source_source_first = litepciedma1_reader_table_syncfifo1_source_first;
assign litepciedma1_reader_table_syncfifo1_source_ready = (litepciedma1_reader_table_source_source_valid & litepciedma1_reader_table_source_source_ready);
assign litepciedma1_reader_table_source_source_payload_address = litepciedma1_reader_table_syncfifo1_source_payload_address;
assign litepciedma1_reader_table_source_source_payload_length = litepciedma1_reader_table_syncfifo1_source_payload_length;
assign litepciedma1_reader_table_source_source_payload_control = litepciedma1_reader_table_syncfifo1_source_payload_control;
assign litepciedma1_reader_table_syncfifo1_syncfifo1_din = {litepciedma1_reader_table_syncfifo1_fifo_in_last, litepciedma1_reader_table_syncfifo1_fifo_in_first, litepciedma1_reader_table_syncfifo1_fifo_in_payload_control, litepciedma1_reader_table_syncfifo1_fifo_in_payload_length, litepciedma1_reader_table_syncfifo1_fifo_in_payload_address};
assign {litepciedma1_reader_table_syncfifo1_fifo_out_last, litepciedma1_reader_table_syncfifo1_fifo_out_first, litepciedma1_reader_table_syncfifo1_fifo_out_payload_control, litepciedma1_reader_table_syncfifo1_fifo_out_payload_length, litepciedma1_reader_table_syncfifo1_fifo_out_payload_address} = litepciedma1_reader_table_syncfifo1_syncfifo1_dout;
assign litepciedma1_reader_table_syncfifo1_sink_ready = litepciedma1_reader_table_syncfifo1_syncfifo1_writable;
assign litepciedma1_reader_table_syncfifo1_syncfifo1_we = litepciedma1_reader_table_syncfifo1_sink_valid;
assign litepciedma1_reader_table_syncfifo1_fifo_in_first = litepciedma1_reader_table_syncfifo1_sink_first;
assign litepciedma1_reader_table_syncfifo1_fifo_in_last = litepciedma1_reader_table_syncfifo1_sink_last;
assign litepciedma1_reader_table_syncfifo1_fifo_in_payload_address = litepciedma1_reader_table_syncfifo1_sink_payload_address;
assign litepciedma1_reader_table_syncfifo1_fifo_in_payload_length = litepciedma1_reader_table_syncfifo1_sink_payload_length;
assign litepciedma1_reader_table_syncfifo1_fifo_in_payload_control = litepciedma1_reader_table_syncfifo1_sink_payload_control;
assign litepciedma1_reader_table_syncfifo1_source_valid = litepciedma1_reader_table_syncfifo1_syncfifo1_readable;
assign litepciedma1_reader_table_syncfifo1_source_first = litepciedma1_reader_table_syncfifo1_fifo_out_first;
assign litepciedma1_reader_table_syncfifo1_source_last = litepciedma1_reader_table_syncfifo1_fifo_out_last;
assign litepciedma1_reader_table_syncfifo1_source_payload_address = litepciedma1_reader_table_syncfifo1_fifo_out_payload_address;
assign litepciedma1_reader_table_syncfifo1_source_payload_length = litepciedma1_reader_table_syncfifo1_fifo_out_payload_length;
assign litepciedma1_reader_table_syncfifo1_source_payload_control = litepciedma1_reader_table_syncfifo1_fifo_out_payload_control;
assign litepciedma1_reader_table_syncfifo1_syncfifo1_re = litepciedma1_reader_table_syncfifo1_source_ready;
always @(*) begin
	litepciedma1_reader_table_syncfifo1_wrport_adr <= 8'd0;
	if (litepciedma1_reader_table_syncfifo1_replace) begin
		litepciedma1_reader_table_syncfifo1_wrport_adr <= (litepciedma1_reader_table_syncfifo1_produce - 1'd1);
	end else begin
		litepciedma1_reader_table_syncfifo1_wrport_adr <= litepciedma1_reader_table_syncfifo1_produce;
	end
end
assign litepciedma1_reader_table_syncfifo1_wrport_dat_w = litepciedma1_reader_table_syncfifo1_syncfifo1_din;
assign litepciedma1_reader_table_syncfifo1_wrport_we = (litepciedma1_reader_table_syncfifo1_syncfifo1_we & (litepciedma1_reader_table_syncfifo1_syncfifo1_writable | litepciedma1_reader_table_syncfifo1_replace));
assign litepciedma1_reader_table_syncfifo1_do_read = (litepciedma1_reader_table_syncfifo1_syncfifo1_readable & litepciedma1_reader_table_syncfifo1_syncfifo1_re);
assign litepciedma1_reader_table_syncfifo1_rdport_adr = litepciedma1_reader_table_syncfifo1_consume;
assign litepciedma1_reader_table_syncfifo1_syncfifo1_dout = litepciedma1_reader_table_syncfifo1_rdport_dat_r;
assign litepciedma1_reader_table_syncfifo1_syncfifo1_writable = (litepciedma1_reader_table_syncfifo1_level != 9'd256);
assign litepciedma1_reader_table_syncfifo1_syncfifo1_readable = (litepciedma1_reader_table_syncfifo1_level != 1'd0);
assign litepciedma1_reader_splitter_user_id_ce = (litepciedma1_reader_splitter_sink_valid & litepciedma1_reader_splitter_sink_ready);
assign litepciedma1_reader_splitter_source_payload_address = (litepciedma1_reader_splitter_sink_payload_address + litepciedma1_reader_splitter_offset);
assign litepciedma1_reader_splitter_source_payload_control = litepciedma1_reader_splitter_sink_payload_control;
assign litepciedma1_reader_splitter_source_payload_user_id = litepciedma1_reader_splitter_user_id;
assign litepciedma1_reader_bufferizeendpoints1_sink_valid = litepciedma1_reader_splitter_source_valid;
assign litepciedma1_reader_splitter_source_ready = litepciedma1_reader_bufferizeendpoints1_sink_ready;
assign litepciedma1_reader_bufferizeendpoints1_sink_first = litepciedma1_reader_splitter_source_first;
assign litepciedma1_reader_bufferizeendpoints1_sink_last = litepciedma1_reader_splitter_source_last;
assign litepciedma1_reader_bufferizeendpoints1_sink_payload_address = litepciedma1_reader_splitter_source_payload_address;
assign litepciedma1_reader_bufferizeendpoints1_sink_payload_length = litepciedma1_reader_splitter_source_payload_length;
assign litepciedma1_reader_bufferizeendpoints1_sink_payload_control = litepciedma1_reader_splitter_source_payload_control;
assign litepciedma1_reader_bufferizeendpoints1_sink_payload_user_id = litepciedma1_reader_splitter_source_payload_user_id;
always @(*) begin
	litepciedma1_reader_splitter_sink_ready <= 1'd0;
	litepciedma1_reader_splitter_offset_reset <= 1'd0;
	litepciedma1_reader_splitter_offset_ce <= 1'd0;
	subfragments_bufferizeendpoints1_next_state1 <= 2'd0;
	litepciedma1_reader_splitter_source_valid <= 1'd0;
	litepciedma1_reader_splitter_length_update <= 1'd0;
	litepciedma1_reader_splitter_source_first <= 1'd0;
	litepciedma1_reader_splitter_source_last <= 1'd0;
	litepciedma1_reader_splitter_source_payload_length <= 24'd0;
	subfragments_bufferizeendpoints1_next_state1 <= subfragments_bufferizeendpoints1_state1;
	case (subfragments_bufferizeendpoints1_state1)
		1'd1: begin
			litepciedma1_reader_splitter_source_valid <= 1'd1;
			litepciedma1_reader_splitter_source_first <= (litepciedma1_reader_splitter_offset == 1'd0);
			if (((litepciedma1_reader_splitter_length - litepciedma1_reader_splitter_offset) > 10'd512)) begin
				litepciedma1_reader_splitter_source_last <= litepciedma1_reader_splitter_end;
				litepciedma1_reader_splitter_source_payload_length <= 10'd512;
				litepciedma1_reader_splitter_offset_ce <= litepciedma1_reader_splitter_source_ready;
				if ((litepciedma1_reader_splitter_source_ready & litepciedma1_reader_splitter_end)) begin
					subfragments_bufferizeendpoints1_next_state1 <= 2'd2;
				end
			end else begin
				litepciedma1_reader_splitter_source_last <= 1'd1;
				litepciedma1_reader_splitter_source_payload_length <= (litepciedma1_reader_splitter_length - litepciedma1_reader_splitter_offset);
				if (litepciedma1_reader_splitter_source_ready) begin
					subfragments_bufferizeendpoints1_next_state1 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma1_reader_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints1_next_state1 <= 1'd0;
		end
		default: begin
			litepciedma1_reader_splitter_offset_reset <= 1'd1;
			if (litepciedma1_reader_splitter_sink_valid) begin
				litepciedma1_reader_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints1_next_state1 <= 1'd1;
			end else begin
				litepciedma1_reader_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma1_reader_bufferizeendpoints1_pipe_ce = (litepciedma1_reader_bufferizeendpoints1_source_ready | (~litepciedma1_reader_bufferizeendpoints1_valid_n));
assign litepciedma1_reader_bufferizeendpoints1_sink_ready = litepciedma1_reader_bufferizeendpoints1_pipe_ce;
assign litepciedma1_reader_bufferizeendpoints1_source_valid = litepciedma1_reader_bufferizeendpoints1_valid_n;
assign litepciedma1_reader_bufferizeendpoints1_busy = (1'd0 | litepciedma1_reader_bufferizeendpoints1_valid_n);
assign litepciedma1_reader_bufferizeendpoints1_source_first = litepciedma1_reader_bufferizeendpoints1_first_n;
assign litepciedma1_reader_bufferizeendpoints1_source_last = litepciedma1_reader_bufferizeendpoints1_last_n;
always @(*) begin
	subfragments_fsm1_next_state2 <= 1'd0;
	litepciedma1_litepciemasterinternalport3_sink_valid <= 1'd0;
	litepciedma1_reader_bufferizeendpoints1_source_ready <= 1'd0;
	subfragments_fsm1_next_state2 <= subfragments_fsm1_state2;
	case (subfragments_fsm1_state2)
		1'd1: begin
			litepciedma1_litepciemasterinternalport3_sink_valid <= 1'd1;
			if (litepciedma1_litepciemasterinternalport3_sink_ready) begin
				litepciedma1_reader_bufferizeendpoints1_source_ready <= 1'd1;
				subfragments_fsm1_next_state2 <= 1'd0;
			end
		end
		default: begin
			if (litepciedma1_reader_request_ready) begin
				subfragments_fsm1_next_state2 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma1_reader_fifo_syncfifo1_din = {litepciedma1_reader_fifo_fifo_in_last, litepciedma1_reader_fifo_fifo_in_first, litepciedma1_reader_fifo_fifo_in_payload_data};
assign {litepciedma1_reader_fifo_fifo_out_last, litepciedma1_reader_fifo_fifo_out_first, litepciedma1_reader_fifo_fifo_out_payload_data} = litepciedma1_reader_fifo_syncfifo1_dout;
assign litepciedma1_reader_fifo_sink_ready = litepciedma1_reader_fifo_syncfifo1_writable;
assign litepciedma1_reader_fifo_syncfifo1_we = litepciedma1_reader_fifo_sink_valid;
assign litepciedma1_reader_fifo_fifo_in_first = litepciedma1_reader_fifo_sink_first;
assign litepciedma1_reader_fifo_fifo_in_last = litepciedma1_reader_fifo_sink_last;
assign litepciedma1_reader_fifo_fifo_in_payload_data = litepciedma1_reader_fifo_sink_payload_data;
assign litepciedma1_reader_fifo_source_valid = litepciedma1_reader_fifo_readable;
assign litepciedma1_reader_fifo_source_first = litepciedma1_reader_fifo_fifo_out_first;
assign litepciedma1_reader_fifo_source_last = litepciedma1_reader_fifo_fifo_out_last;
assign litepciedma1_reader_fifo_source_payload_data = litepciedma1_reader_fifo_fifo_out_payload_data;
assign litepciedma1_reader_fifo_re = litepciedma1_reader_fifo_source_ready;
assign litepciedma1_reader_fifo_syncfifo1_re = (litepciedma1_reader_fifo_syncfifo1_readable & ((~litepciedma1_reader_fifo_readable) | litepciedma1_reader_fifo_re));
assign litepciedma1_reader_fifo_level1 = (litepciedma1_reader_fifo_level0 + litepciedma1_reader_fifo_readable);
always @(*) begin
	litepciedma1_reader_fifo_wrport_adr <= 9'd0;
	if (litepciedma1_reader_fifo_replace) begin
		litepciedma1_reader_fifo_wrport_adr <= (litepciedma1_reader_fifo_produce - 1'd1);
	end else begin
		litepciedma1_reader_fifo_wrport_adr <= litepciedma1_reader_fifo_produce;
	end
end
assign litepciedma1_reader_fifo_wrport_dat_w = litepciedma1_reader_fifo_syncfifo1_din;
assign litepciedma1_reader_fifo_wrport_we = (litepciedma1_reader_fifo_syncfifo1_we & (litepciedma1_reader_fifo_syncfifo1_writable | litepciedma1_reader_fifo_replace));
assign litepciedma1_reader_fifo_do_read = (litepciedma1_reader_fifo_syncfifo1_readable & litepciedma1_reader_fifo_syncfifo1_re);
assign litepciedma1_reader_fifo_rdport_adr = litepciedma1_reader_fifo_consume;
assign litepciedma1_reader_fifo_syncfifo1_dout = litepciedma1_reader_fifo_rdport_dat_r;
assign litepciedma1_reader_fifo_rdport_re = litepciedma1_reader_fifo_do_read;
assign litepciedma1_reader_fifo_syncfifo1_writable = (litepciedma1_reader_fifo_level0 != 10'd512);
assign litepciedma1_reader_fifo_syncfifo1_readable = (litepciedma1_reader_fifo_level0 != 1'd0);
always @(*) begin
	litepciedma1_source_valid <= 1'd0;
	litepciedma1_source_first <= 1'd0;
	litepciedma1_source_last <= 1'd0;
	litepciedma1_source_payload_data <= 64'd0;
	litepciedma1_next_source_valid <= 1'd0;
	litepciedma1_next_source_first <= 1'd0;
	litepciedma1_next_source_last <= 1'd0;
	litepciedma1_next_source_payload_data <= 64'd0;
	litepciedma1_next_sink_ready <= 1'd0;
	litepciedma1_sink_ready <= 1'd0;
	if (litepciedma1_storage) begin
		litepciedma1_source_valid <= litepciedma1_sink_valid;
		litepciedma1_sink_ready <= litepciedma1_source_ready;
		litepciedma1_source_first <= litepciedma1_sink_first;
		litepciedma1_source_last <= litepciedma1_sink_last;
		litepciedma1_source_payload_data <= litepciedma1_sink_payload_data;
	end else begin
		litepciedma1_next_source_valid <= litepciedma1_sink_valid;
		litepciedma1_sink_ready <= litepciedma1_next_source_ready;
		litepciedma1_next_source_first <= litepciedma1_sink_first;
		litepciedma1_next_source_last <= litepciedma1_sink_last;
		litepciedma1_next_source_payload_data <= litepciedma1_sink_payload_data;
		litepciedma1_source_valid <= litepciedma1_next_sink_valid;
		litepciedma1_next_sink_ready <= litepciedma1_source_ready;
		litepciedma1_source_first <= litepciedma1_next_sink_first;
		litepciedma1_source_last <= litepciedma1_next_sink_last;
		litepciedma1_source_payload_data <= litepciedma1_next_sink_payload_data;
	end
end
assign litepciedma1_tx_fifo_syncfifo1_din = {litepciedma1_tx_fifo_fifo_in_last, litepciedma1_tx_fifo_fifo_in_first, litepciedma1_tx_fifo_fifo_in_payload_data};
assign {litepciedma1_tx_fifo_fifo_out_last, litepciedma1_tx_fifo_fifo_out_first, litepciedma1_tx_fifo_fifo_out_payload_data} = litepciedma1_tx_fifo_syncfifo1_dout;
assign litepciedma1_tx_fifo_sink_ready = litepciedma1_tx_fifo_syncfifo1_writable;
assign litepciedma1_tx_fifo_syncfifo1_we = litepciedma1_tx_fifo_sink_valid;
assign litepciedma1_tx_fifo_fifo_in_first = litepciedma1_tx_fifo_sink_first;
assign litepciedma1_tx_fifo_fifo_in_last = litepciedma1_tx_fifo_sink_last;
assign litepciedma1_tx_fifo_fifo_in_payload_data = litepciedma1_tx_fifo_sink_payload_data;
assign litepciedma1_tx_fifo_source_valid = litepciedma1_tx_fifo_readable;
assign litepciedma1_tx_fifo_source_first = litepciedma1_tx_fifo_fifo_out_first;
assign litepciedma1_tx_fifo_source_last = litepciedma1_tx_fifo_fifo_out_last;
assign litepciedma1_tx_fifo_source_payload_data = litepciedma1_tx_fifo_fifo_out_payload_data;
assign litepciedma1_tx_fifo_re = litepciedma1_tx_fifo_source_ready;
assign litepciedma1_tx_fifo_syncfifo1_re = (litepciedma1_tx_fifo_syncfifo1_readable & ((~litepciedma1_tx_fifo_readable) | litepciedma1_tx_fifo_re));
assign litepciedma1_tx_fifo_level1 = (litepciedma1_tx_fifo_level0 + litepciedma1_tx_fifo_readable);
always @(*) begin
	litepciedma1_tx_fifo_wrport_adr <= 10'd0;
	if (litepciedma1_tx_fifo_replace) begin
		litepciedma1_tx_fifo_wrport_adr <= (litepciedma1_tx_fifo_produce - 1'd1);
	end else begin
		litepciedma1_tx_fifo_wrport_adr <= litepciedma1_tx_fifo_produce;
	end
end
assign litepciedma1_tx_fifo_wrport_dat_w = litepciedma1_tx_fifo_syncfifo1_din;
assign litepciedma1_tx_fifo_wrport_we = (litepciedma1_tx_fifo_syncfifo1_we & (litepciedma1_tx_fifo_syncfifo1_writable | litepciedma1_tx_fifo_replace));
assign litepciedma1_tx_fifo_do_read = (litepciedma1_tx_fifo_syncfifo1_readable & litepciedma1_tx_fifo_syncfifo1_re);
assign litepciedma1_tx_fifo_rdport_adr = litepciedma1_tx_fifo_consume;
assign litepciedma1_tx_fifo_syncfifo1_dout = litepciedma1_tx_fifo_rdport_dat_r;
assign litepciedma1_tx_fifo_rdport_re = litepciedma1_tx_fifo_do_read;
assign litepciedma1_tx_fifo_syncfifo1_writable = (litepciedma1_tx_fifo_level0 != 11'd1024);
assign litepciedma1_tx_fifo_syncfifo1_readable = (litepciedma1_tx_fifo_level0 != 1'd0);
assign litepciedma1_rx_fifo_syncfifo1_din = {litepciedma1_rx_fifo_fifo_in_last, litepciedma1_rx_fifo_fifo_in_first, litepciedma1_rx_fifo_fifo_in_payload_data};
assign {litepciedma1_rx_fifo_fifo_out_last, litepciedma1_rx_fifo_fifo_out_first, litepciedma1_rx_fifo_fifo_out_payload_data} = litepciedma1_rx_fifo_syncfifo1_dout;
assign litepciedma1_rx_fifo_sink_ready = litepciedma1_rx_fifo_syncfifo1_writable;
assign litepciedma1_rx_fifo_syncfifo1_we = litepciedma1_rx_fifo_sink_valid;
assign litepciedma1_rx_fifo_fifo_in_first = litepciedma1_rx_fifo_sink_first;
assign litepciedma1_rx_fifo_fifo_in_last = litepciedma1_rx_fifo_sink_last;
assign litepciedma1_rx_fifo_fifo_in_payload_data = litepciedma1_rx_fifo_sink_payload_data;
assign litepciedma1_rx_fifo_source_valid = litepciedma1_rx_fifo_readable;
assign litepciedma1_rx_fifo_source_first = litepciedma1_rx_fifo_fifo_out_first;
assign litepciedma1_rx_fifo_source_last = litepciedma1_rx_fifo_fifo_out_last;
assign litepciedma1_rx_fifo_source_payload_data = litepciedma1_rx_fifo_fifo_out_payload_data;
assign litepciedma1_rx_fifo_re = litepciedma1_rx_fifo_source_ready;
assign litepciedma1_rx_fifo_syncfifo1_re = (litepciedma1_rx_fifo_syncfifo1_readable & ((~litepciedma1_rx_fifo_readable) | litepciedma1_rx_fifo_re));
assign litepciedma1_rx_fifo_level1 = (litepciedma1_rx_fifo_level0 + litepciedma1_rx_fifo_readable);
always @(*) begin
	litepciedma1_rx_fifo_wrport_adr <= 10'd0;
	if (litepciedma1_rx_fifo_replace) begin
		litepciedma1_rx_fifo_wrport_adr <= (litepciedma1_rx_fifo_produce - 1'd1);
	end else begin
		litepciedma1_rx_fifo_wrport_adr <= litepciedma1_rx_fifo_produce;
	end
end
assign litepciedma1_rx_fifo_wrport_dat_w = litepciedma1_rx_fifo_syncfifo1_din;
assign litepciedma1_rx_fifo_wrport_we = (litepciedma1_rx_fifo_syncfifo1_we & (litepciedma1_rx_fifo_syncfifo1_writable | litepciedma1_rx_fifo_replace));
assign litepciedma1_rx_fifo_do_read = (litepciedma1_rx_fifo_syncfifo1_readable & litepciedma1_rx_fifo_syncfifo1_re);
assign litepciedma1_rx_fifo_rdport_adr = litepciedma1_rx_fifo_consume;
assign litepciedma1_rx_fifo_syncfifo1_dout = litepciedma1_rx_fifo_rdport_dat_r;
assign litepciedma1_rx_fifo_rdport_re = litepciedma1_rx_fifo_do_read;
assign litepciedma1_rx_fifo_syncfifo1_writable = (litepciedma1_rx_fifo_level0 != 11'd1024);
assign litepciedma1_rx_fifo_syncfifo1_readable = (litepciedma1_rx_fifo_level0 != 1'd0);
assign litepciedma2_sink_valid = litepciedma2_reader_source_source_valid;
assign litepciedma2_reader_source_source_ready = litepciedma2_sink_ready;
assign litepciedma2_sink_first = litepciedma2_reader_source_source_first;
assign litepciedma2_sink_last = litepciedma2_reader_source_source_last;
assign litepciedma2_sink_payload_data = litepciedma2_reader_source_source_payload_data;
assign litepciedma2_writer_sink_sink_valid = litepciedma2_source_valid;
assign litepciedma2_source_ready = litepciedma2_writer_sink_sink_ready;
assign litepciedma2_writer_sink_sink_first = litepciedma2_source_first;
assign litepciedma2_writer_sink_sink_last = litepciedma2_source_last;
assign litepciedma2_writer_sink_sink_payload_data = litepciedma2_source_payload_data;
assign litepciedma2_tx_fifo_sink_valid = litepciedma2_next_source_valid;
assign litepciedma2_next_source_ready = litepciedma2_tx_fifo_sink_ready;
assign litepciedma2_tx_fifo_sink_first = litepciedma2_next_source_first;
assign litepciedma2_tx_fifo_sink_last = litepciedma2_next_source_last;
assign litepciedma2_tx_fifo_sink_payload_data = litepciedma2_next_source_payload_data;
assign litepciedma2_next_sink_valid = litepciedma2_rx_fifo_source_valid;
assign litepciedma2_rx_fifo_source_ready = litepciedma2_next_sink_ready;
assign litepciedma2_next_sink_first = litepciedma2_rx_fifo_source_first;
assign litepciedma2_next_sink_last = litepciedma2_rx_fifo_source_last;
assign litepciedma2_next_sink_payload_data = litepciedma2_rx_fifo_source_payload_data;
assign litepciedma2_writer_fifo_syncfifo2_we = (litepciedma2_writer_sink_sink_valid & litepciedma2_writer_enable_storage);
assign litepciedma2_writer_sink_sink_ready = (litepciedma2_writer_fifo_syncfifo2_writable | (~litepciedma2_writer_enable_storage));
assign litepciedma2_writer_fifo_syncfifo2_din = {litepciedma2_writer_sink_sink_last, litepciedma2_writer_sink_sink_payload_data};
assign litepciedma2_writer_resetinserter_reset0 = (~litepciedma2_writer_enable_storage);
assign litepciedma2_writer_resetinserter_reset1 = (~litepciedma2_writer_enable_storage);
assign litepciedma2_writer_splitter_sink_valid = litepciedma2_writer_table_source_source_valid;
assign litepciedma2_writer_table_source_source_ready = litepciedma2_writer_splitter_sink_ready;
assign litepciedma2_writer_splitter_sink_first = litepciedma2_writer_table_source_source_first;
assign litepciedma2_writer_splitter_sink_last = litepciedma2_writer_table_source_source_last;
assign litepciedma2_writer_splitter_sink_payload_address = litepciedma2_writer_table_source_source_payload_address;
assign litepciedma2_writer_splitter_sink_payload_length = litepciedma2_writer_table_source_source_payload_length;
assign litepciedma2_writer_splitter_sink_payload_control = litepciedma2_writer_table_source_source_payload_control;
assign litepciedma2_litepciemasterinternalport4_sink_payload_channel = 3'd4;
assign litepciedma2_litepciemasterinternalport4_sink_payload_user_id = litepciedma2_writer_bufferizeendpoints2_source_payload_user_id;
assign litepciedma2_litepciemasterinternalport4_sink_first = (litepciedma2_writer_counter == 1'd0);
assign litepciedma2_litepciemasterinternalport4_sink_last = ((~litepciedma2_writer_enable_storage) | (litepciedma2_writer_counter == (litepciedma2_writer_bufferizeendpoints2_source_payload_length[23:3] - 1'd1)));
assign litepciedma2_litepciemasterinternalport4_sink_payload_we = 1'd1;
assign litepciedma2_litepciemasterinternalport4_sink_payload_adr = litepciedma2_writer_bufferizeendpoints2_source_payload_address;
assign litepciedma2_litepciemasterinternalport4_sink_payload_req_id = pcie_phy_id;
assign litepciedma2_litepciemasterinternalport4_sink_payload_tag = 1'd0;
assign litepciedma2_litepciemasterinternalport4_sink_payload_len = litepciedma2_writer_bufferizeendpoints2_source_payload_length[23:2];
assign litepciedma2_litepciemasterinternalport4_sink_payload_dat = litepciedma2_writer_fifo_syncfifo2_dout[63:0];
assign litepciedma2_writer_irq = (((litepciedma2_writer_bufferizeendpoints2_source_valid & litepciedma2_writer_bufferizeendpoints2_source_ready) & litepciedma2_writer_bufferizeendpoints2_source_last) & (~litepciedma2_writer_bufferizeendpoints2_source_payload_control[0]));
assign litepciedma2_writer_fifo_syncfifo2_re = (litepciedma2_writer_fifo_syncfifo2_readable & ((~litepciedma2_writer_fifo_readable) | litepciedma2_writer_fifo_re));
assign litepciedma2_writer_fifo_level1 = (litepciedma2_writer_fifo_level0 + litepciedma2_writer_fifo_readable);
always @(*) begin
	litepciedma2_writer_fifo_wrport_adr <= 8'd0;
	if (litepciedma2_writer_fifo_replace) begin
		litepciedma2_writer_fifo_wrport_adr <= (litepciedma2_writer_fifo_produce - 1'd1);
	end else begin
		litepciedma2_writer_fifo_wrport_adr <= litepciedma2_writer_fifo_produce;
	end
end
assign litepciedma2_writer_fifo_wrport_dat_w = litepciedma2_writer_fifo_syncfifo2_din;
assign litepciedma2_writer_fifo_wrport_we = (litepciedma2_writer_fifo_syncfifo2_we & (litepciedma2_writer_fifo_syncfifo2_writable | litepciedma2_writer_fifo_replace));
assign litepciedma2_writer_fifo_do_read = (litepciedma2_writer_fifo_syncfifo2_readable & litepciedma2_writer_fifo_syncfifo2_re);
assign litepciedma2_writer_fifo_rdport_adr = litepciedma2_writer_fifo_consume;
assign litepciedma2_writer_fifo_syncfifo2_dout = litepciedma2_writer_fifo_rdport_dat_r;
assign litepciedma2_writer_fifo_rdport_re = litepciedma2_writer_fifo_do_read;
assign litepciedma2_writer_fifo_syncfifo2_writable = (litepciedma2_writer_fifo_level0 != 9'd256);
assign litepciedma2_writer_fifo_syncfifo2_readable = (litepciedma2_writer_fifo_level0 != 1'd0);
assign litepciedma2_writer_table_reset = (litepciedma2_writer_table_flush_r & litepciedma2_writer_table_flush_re);
assign litepciedma2_writer_table_level_status = litepciedma2_writer_table_syncfifo2_level;
assign litepciedma2_writer_table_source_source_valid = litepciedma2_writer_table_syncfifo2_source_valid;
assign litepciedma2_writer_table_source_source_first = litepciedma2_writer_table_syncfifo2_source_first;
assign litepciedma2_writer_table_syncfifo2_source_ready = (litepciedma2_writer_table_source_source_valid & litepciedma2_writer_table_source_source_ready);
assign litepciedma2_writer_table_source_source_payload_address = litepciedma2_writer_table_syncfifo2_source_payload_address;
assign litepciedma2_writer_table_source_source_payload_length = litepciedma2_writer_table_syncfifo2_source_payload_length;
assign litepciedma2_writer_table_source_source_payload_control = litepciedma2_writer_table_syncfifo2_source_payload_control;
assign litepciedma2_writer_table_syncfifo2_syncfifo2_din = {litepciedma2_writer_table_syncfifo2_fifo_in_last, litepciedma2_writer_table_syncfifo2_fifo_in_first, litepciedma2_writer_table_syncfifo2_fifo_in_payload_control, litepciedma2_writer_table_syncfifo2_fifo_in_payload_length, litepciedma2_writer_table_syncfifo2_fifo_in_payload_address};
assign {litepciedma2_writer_table_syncfifo2_fifo_out_last, litepciedma2_writer_table_syncfifo2_fifo_out_first, litepciedma2_writer_table_syncfifo2_fifo_out_payload_control, litepciedma2_writer_table_syncfifo2_fifo_out_payload_length, litepciedma2_writer_table_syncfifo2_fifo_out_payload_address} = litepciedma2_writer_table_syncfifo2_syncfifo2_dout;
assign litepciedma2_writer_table_syncfifo2_sink_ready = litepciedma2_writer_table_syncfifo2_syncfifo2_writable;
assign litepciedma2_writer_table_syncfifo2_syncfifo2_we = litepciedma2_writer_table_syncfifo2_sink_valid;
assign litepciedma2_writer_table_syncfifo2_fifo_in_first = litepciedma2_writer_table_syncfifo2_sink_first;
assign litepciedma2_writer_table_syncfifo2_fifo_in_last = litepciedma2_writer_table_syncfifo2_sink_last;
assign litepciedma2_writer_table_syncfifo2_fifo_in_payload_address = litepciedma2_writer_table_syncfifo2_sink_payload_address;
assign litepciedma2_writer_table_syncfifo2_fifo_in_payload_length = litepciedma2_writer_table_syncfifo2_sink_payload_length;
assign litepciedma2_writer_table_syncfifo2_fifo_in_payload_control = litepciedma2_writer_table_syncfifo2_sink_payload_control;
assign litepciedma2_writer_table_syncfifo2_source_valid = litepciedma2_writer_table_syncfifo2_syncfifo2_readable;
assign litepciedma2_writer_table_syncfifo2_source_first = litepciedma2_writer_table_syncfifo2_fifo_out_first;
assign litepciedma2_writer_table_syncfifo2_source_last = litepciedma2_writer_table_syncfifo2_fifo_out_last;
assign litepciedma2_writer_table_syncfifo2_source_payload_address = litepciedma2_writer_table_syncfifo2_fifo_out_payload_address;
assign litepciedma2_writer_table_syncfifo2_source_payload_length = litepciedma2_writer_table_syncfifo2_fifo_out_payload_length;
assign litepciedma2_writer_table_syncfifo2_source_payload_control = litepciedma2_writer_table_syncfifo2_fifo_out_payload_control;
assign litepciedma2_writer_table_syncfifo2_syncfifo2_re = litepciedma2_writer_table_syncfifo2_source_ready;
always @(*) begin
	litepciedma2_writer_table_syncfifo2_wrport_adr <= 8'd0;
	if (litepciedma2_writer_table_syncfifo2_replace) begin
		litepciedma2_writer_table_syncfifo2_wrport_adr <= (litepciedma2_writer_table_syncfifo2_produce - 1'd1);
	end else begin
		litepciedma2_writer_table_syncfifo2_wrport_adr <= litepciedma2_writer_table_syncfifo2_produce;
	end
end
assign litepciedma2_writer_table_syncfifo2_wrport_dat_w = litepciedma2_writer_table_syncfifo2_syncfifo2_din;
assign litepciedma2_writer_table_syncfifo2_wrport_we = (litepciedma2_writer_table_syncfifo2_syncfifo2_we & (litepciedma2_writer_table_syncfifo2_syncfifo2_writable | litepciedma2_writer_table_syncfifo2_replace));
assign litepciedma2_writer_table_syncfifo2_do_read = (litepciedma2_writer_table_syncfifo2_syncfifo2_readable & litepciedma2_writer_table_syncfifo2_syncfifo2_re);
assign litepciedma2_writer_table_syncfifo2_rdport_adr = litepciedma2_writer_table_syncfifo2_consume;
assign litepciedma2_writer_table_syncfifo2_syncfifo2_dout = litepciedma2_writer_table_syncfifo2_rdport_dat_r;
assign litepciedma2_writer_table_syncfifo2_syncfifo2_writable = (litepciedma2_writer_table_syncfifo2_level != 9'd256);
assign litepciedma2_writer_table_syncfifo2_syncfifo2_readable = (litepciedma2_writer_table_syncfifo2_level != 1'd0);
assign litepciedma2_writer_splitter_user_id_ce = (litepciedma2_writer_splitter_sink_valid & litepciedma2_writer_splitter_sink_ready);
assign litepciedma2_writer_splitter_source_payload_address = (litepciedma2_writer_splitter_sink_payload_address + litepciedma2_writer_splitter_offset);
assign litepciedma2_writer_splitter_source_payload_control = litepciedma2_writer_splitter_sink_payload_control;
assign litepciedma2_writer_splitter_source_payload_user_id = litepciedma2_writer_splitter_user_id;
assign litepciedma2_writer_bufferizeendpoints2_sink_valid = litepciedma2_writer_splitter_source_valid;
assign litepciedma2_writer_splitter_source_ready = litepciedma2_writer_bufferizeendpoints2_sink_ready;
assign litepciedma2_writer_bufferizeendpoints2_sink_first = litepciedma2_writer_splitter_source_first;
assign litepciedma2_writer_bufferizeendpoints2_sink_last = litepciedma2_writer_splitter_source_last;
assign litepciedma2_writer_bufferizeendpoints2_sink_payload_address = litepciedma2_writer_splitter_source_payload_address;
assign litepciedma2_writer_bufferizeendpoints2_sink_payload_length = litepciedma2_writer_splitter_source_payload_length;
assign litepciedma2_writer_bufferizeendpoints2_sink_payload_control = litepciedma2_writer_splitter_source_payload_control;
assign litepciedma2_writer_bufferizeendpoints2_sink_payload_user_id = litepciedma2_writer_splitter_source_payload_user_id;
always @(*) begin
	litepciedma2_writer_splitter_source_payload_length <= 24'd0;
	litepciedma2_writer_splitter_offset_reset <= 1'd0;
	litepciedma2_writer_splitter_sink_ready <= 1'd0;
	litepciedma2_writer_splitter_offset_ce <= 1'd0;
	subfragments_bufferizeendpoints2_next_state0 <= 2'd0;
	litepciedma2_writer_splitter_source_valid <= 1'd0;
	litepciedma2_writer_splitter_length_update <= 1'd0;
	litepciedma2_writer_splitter_source_first <= 1'd0;
	litepciedma2_writer_splitter_source_last <= 1'd0;
	subfragments_bufferizeendpoints2_next_state0 <= subfragments_bufferizeendpoints2_state0;
	case (subfragments_bufferizeendpoints2_state0)
		1'd1: begin
			litepciedma2_writer_splitter_source_valid <= 1'd1;
			litepciedma2_writer_splitter_source_first <= (litepciedma2_writer_splitter_offset == 1'd0);
			if (((litepciedma2_writer_splitter_length - litepciedma2_writer_splitter_offset) > pcie_phy_max_payload_size)) begin
				litepciedma2_writer_splitter_source_last <= litepciedma2_writer_splitter_end;
				litepciedma2_writer_splitter_source_payload_length <= pcie_phy_max_payload_size;
				litepciedma2_writer_splitter_offset_ce <= litepciedma2_writer_splitter_source_ready;
				if ((litepciedma2_writer_splitter_source_ready & litepciedma2_writer_splitter_end)) begin
					subfragments_bufferizeendpoints2_next_state0 <= 2'd2;
				end
			end else begin
				litepciedma2_writer_splitter_source_last <= 1'd1;
				litepciedma2_writer_splitter_source_payload_length <= (litepciedma2_writer_splitter_length - litepciedma2_writer_splitter_offset);
				if (litepciedma2_writer_splitter_source_ready) begin
					subfragments_bufferizeendpoints2_next_state0 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma2_writer_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints2_next_state0 <= 1'd0;
		end
		default: begin
			litepciedma2_writer_splitter_offset_reset <= 1'd1;
			if (litepciedma2_writer_splitter_sink_valid) begin
				litepciedma2_writer_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints2_next_state0 <= 1'd1;
			end else begin
				litepciedma2_writer_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma2_writer_bufferizeendpoints2_pipe_ce = (litepciedma2_writer_bufferizeendpoints2_source_ready | (~litepciedma2_writer_bufferizeendpoints2_valid_n));
assign litepciedma2_writer_bufferizeendpoints2_sink_ready = litepciedma2_writer_bufferizeendpoints2_pipe_ce;
assign litepciedma2_writer_bufferizeendpoints2_source_valid = litepciedma2_writer_bufferizeendpoints2_valid_n;
assign litepciedma2_writer_bufferizeendpoints2_busy = (1'd0 | litepciedma2_writer_bufferizeendpoints2_valid_n);
assign litepciedma2_writer_bufferizeendpoints2_source_first = litepciedma2_writer_bufferizeendpoints2_first_n;
assign litepciedma2_writer_bufferizeendpoints2_source_last = litepciedma2_writer_bufferizeendpoints2_last_n;
always @(*) begin
	subfragments_fsm2_next_state0 <= 1'd0;
	litepciedma2_litepciemasterinternalport4_sink_valid <= 1'd0;
	litepciedma2_writer_counter_reset <= 1'd0;
	litepciedma2_writer_counter_ce <= 1'd0;
	litepciedma2_writer_fifo_re <= 1'd0;
	litepciedma2_writer_splitter_end <= 1'd0;
	litepciedma2_writer_bufferizeendpoints2_source_ready <= 1'd0;
	subfragments_fsm2_next_state0 <= subfragments_fsm2_state0;
	case (subfragments_fsm2_state0)
		1'd1: begin
			litepciedma2_writer_counter_ce <= (litepciedma2_litepciemasterinternalport4_sink_valid & litepciedma2_litepciemasterinternalport4_sink_ready);
			litepciedma2_litepciemasterinternalport4_sink_valid <= 1'd1;
			if (litepciedma2_litepciemasterinternalport4_sink_ready) begin
				litepciedma2_writer_fifo_re <= (~(litepciedma2_writer_fifo_syncfifo2_dout[64] & (~litepciedma2_writer_bufferizeendpoints2_source_payload_control[1])));
				if (litepciedma2_litepciemasterinternalport4_sink_last) begin
					litepciedma2_writer_fifo_re <= 1'd1;
					litepciedma2_writer_splitter_end <= (litepciedma2_writer_fifo_syncfifo2_dout[64] & (~litepciedma2_writer_bufferizeendpoints2_source_payload_control[1]));
					litepciedma2_writer_bufferizeendpoints2_source_ready <= 1'd1;
					subfragments_fsm2_next_state0 <= 1'd0;
				end
			end
		end
		default: begin
			litepciedma2_writer_counter_reset <= 1'd1;
			if (litepciedma2_writer_request_ready) begin
				subfragments_fsm2_next_state0 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma2_reader_resetinserter_reset0 = (~litepciedma2_reader_enable_storage);
assign litepciedma2_reader_splitter_sink_valid = litepciedma2_reader_table_source_source_valid;
assign litepciedma2_reader_table_source_source_ready = litepciedma2_reader_splitter_sink_ready;
assign litepciedma2_reader_splitter_sink_first = litepciedma2_reader_table_source_source_first;
assign litepciedma2_reader_splitter_sink_last = litepciedma2_reader_table_source_source_last;
assign litepciedma2_reader_splitter_sink_payload_address = litepciedma2_reader_table_source_source_payload_address;
assign litepciedma2_reader_splitter_sink_payload_length = litepciedma2_reader_table_source_source_payload_length;
assign litepciedma2_reader_splitter_sink_payload_control = litepciedma2_reader_table_source_source_payload_control;
assign litepciedma2_litepciemasterinternalport5_sink_payload_channel = 3'd5;
assign litepciedma2_litepciemasterinternalport5_sink_payload_user_id = litepciedma2_reader_bufferizeendpoints2_source_payload_user_id;
assign litepciedma2_litepciemasterinternalport5_sink_first = 1'd1;
assign litepciedma2_litepciemasterinternalport5_sink_last = 1'd1;
assign litepciedma2_litepciemasterinternalport5_sink_payload_we = 1'd0;
assign litepciedma2_litepciemasterinternalport5_sink_payload_adr = litepciedma2_reader_bufferizeendpoints2_source_payload_address;
assign litepciedma2_litepciemasterinternalport5_sink_payload_len = litepciedma2_reader_bufferizeendpoints2_source_payload_length[23:2];
assign litepciedma2_litepciemasterinternalport5_sink_payload_req_id = pcie_phy_id;
assign litepciedma2_litepciemasterinternalport5_sink_payload_dat = 1'd0;
assign litepciedma2_reader_resetinserter_reset1 = (~litepciedma2_reader_enable_storage);
assign litepciedma2_reader_fifo_sink_valid = litepciedma2_litepciemasterinternalport5_source_valid;
assign litepciedma2_reader_fifo_sink_first = (litepciedma2_litepciemasterinternalport5_source_first & (litepciedma2_litepciemasterinternalport5_source_payload_user_id != litepciedma2_reader_last_user_id));
assign litepciedma2_reader_fifo_sink_payload_data = litepciedma2_litepciemasterinternalport5_source_payload_dat;
assign litepciedma2_litepciemasterinternalport5_source_ready = (litepciedma2_reader_fifo_sink_ready | (~litepciedma2_reader_enable_storage));
assign litepciedma2_reader_source_source_valid = litepciedma2_reader_fifo_source_valid;
assign litepciedma2_reader_fifo_source_ready = litepciedma2_reader_source_source_ready;
assign litepciedma2_reader_source_source_first = litepciedma2_reader_fifo_source_first;
assign litepciedma2_reader_source_source_last = litepciedma2_reader_fifo_source_last;
assign litepciedma2_reader_source_source_payload_data = litepciedma2_reader_fifo_source_payload_data;
assign litepciedma2_reader_irq = (((litepciedma2_reader_bufferizeendpoints2_source_valid & litepciedma2_reader_bufferizeendpoints2_source_ready) & litepciedma2_reader_bufferizeendpoints2_source_last) & (~litepciedma2_reader_bufferizeendpoints2_source_payload_control[0]));
assign litepciedma2_reader_table_reset = (litepciedma2_reader_table_flush_r & litepciedma2_reader_table_flush_re);
assign litepciedma2_reader_table_level_status = litepciedma2_reader_table_syncfifo2_level;
assign litepciedma2_reader_table_source_source_valid = litepciedma2_reader_table_syncfifo2_source_valid;
assign litepciedma2_reader_table_source_source_first = litepciedma2_reader_table_syncfifo2_source_first;
assign litepciedma2_reader_table_syncfifo2_source_ready = (litepciedma2_reader_table_source_source_valid & litepciedma2_reader_table_source_source_ready);
assign litepciedma2_reader_table_source_source_payload_address = litepciedma2_reader_table_syncfifo2_source_payload_address;
assign litepciedma2_reader_table_source_source_payload_length = litepciedma2_reader_table_syncfifo2_source_payload_length;
assign litepciedma2_reader_table_source_source_payload_control = litepciedma2_reader_table_syncfifo2_source_payload_control;
assign litepciedma2_reader_table_syncfifo2_syncfifo2_din = {litepciedma2_reader_table_syncfifo2_fifo_in_last, litepciedma2_reader_table_syncfifo2_fifo_in_first, litepciedma2_reader_table_syncfifo2_fifo_in_payload_control, litepciedma2_reader_table_syncfifo2_fifo_in_payload_length, litepciedma2_reader_table_syncfifo2_fifo_in_payload_address};
assign {litepciedma2_reader_table_syncfifo2_fifo_out_last, litepciedma2_reader_table_syncfifo2_fifo_out_first, litepciedma2_reader_table_syncfifo2_fifo_out_payload_control, litepciedma2_reader_table_syncfifo2_fifo_out_payload_length, litepciedma2_reader_table_syncfifo2_fifo_out_payload_address} = litepciedma2_reader_table_syncfifo2_syncfifo2_dout;
assign litepciedma2_reader_table_syncfifo2_sink_ready = litepciedma2_reader_table_syncfifo2_syncfifo2_writable;
assign litepciedma2_reader_table_syncfifo2_syncfifo2_we = litepciedma2_reader_table_syncfifo2_sink_valid;
assign litepciedma2_reader_table_syncfifo2_fifo_in_first = litepciedma2_reader_table_syncfifo2_sink_first;
assign litepciedma2_reader_table_syncfifo2_fifo_in_last = litepciedma2_reader_table_syncfifo2_sink_last;
assign litepciedma2_reader_table_syncfifo2_fifo_in_payload_address = litepciedma2_reader_table_syncfifo2_sink_payload_address;
assign litepciedma2_reader_table_syncfifo2_fifo_in_payload_length = litepciedma2_reader_table_syncfifo2_sink_payload_length;
assign litepciedma2_reader_table_syncfifo2_fifo_in_payload_control = litepciedma2_reader_table_syncfifo2_sink_payload_control;
assign litepciedma2_reader_table_syncfifo2_source_valid = litepciedma2_reader_table_syncfifo2_syncfifo2_readable;
assign litepciedma2_reader_table_syncfifo2_source_first = litepciedma2_reader_table_syncfifo2_fifo_out_first;
assign litepciedma2_reader_table_syncfifo2_source_last = litepciedma2_reader_table_syncfifo2_fifo_out_last;
assign litepciedma2_reader_table_syncfifo2_source_payload_address = litepciedma2_reader_table_syncfifo2_fifo_out_payload_address;
assign litepciedma2_reader_table_syncfifo2_source_payload_length = litepciedma2_reader_table_syncfifo2_fifo_out_payload_length;
assign litepciedma2_reader_table_syncfifo2_source_payload_control = litepciedma2_reader_table_syncfifo2_fifo_out_payload_control;
assign litepciedma2_reader_table_syncfifo2_syncfifo2_re = litepciedma2_reader_table_syncfifo2_source_ready;
always @(*) begin
	litepciedma2_reader_table_syncfifo2_wrport_adr <= 8'd0;
	if (litepciedma2_reader_table_syncfifo2_replace) begin
		litepciedma2_reader_table_syncfifo2_wrport_adr <= (litepciedma2_reader_table_syncfifo2_produce - 1'd1);
	end else begin
		litepciedma2_reader_table_syncfifo2_wrport_adr <= litepciedma2_reader_table_syncfifo2_produce;
	end
end
assign litepciedma2_reader_table_syncfifo2_wrport_dat_w = litepciedma2_reader_table_syncfifo2_syncfifo2_din;
assign litepciedma2_reader_table_syncfifo2_wrport_we = (litepciedma2_reader_table_syncfifo2_syncfifo2_we & (litepciedma2_reader_table_syncfifo2_syncfifo2_writable | litepciedma2_reader_table_syncfifo2_replace));
assign litepciedma2_reader_table_syncfifo2_do_read = (litepciedma2_reader_table_syncfifo2_syncfifo2_readable & litepciedma2_reader_table_syncfifo2_syncfifo2_re);
assign litepciedma2_reader_table_syncfifo2_rdport_adr = litepciedma2_reader_table_syncfifo2_consume;
assign litepciedma2_reader_table_syncfifo2_syncfifo2_dout = litepciedma2_reader_table_syncfifo2_rdport_dat_r;
assign litepciedma2_reader_table_syncfifo2_syncfifo2_writable = (litepciedma2_reader_table_syncfifo2_level != 9'd256);
assign litepciedma2_reader_table_syncfifo2_syncfifo2_readable = (litepciedma2_reader_table_syncfifo2_level != 1'd0);
assign litepciedma2_reader_splitter_user_id_ce = (litepciedma2_reader_splitter_sink_valid & litepciedma2_reader_splitter_sink_ready);
assign litepciedma2_reader_splitter_source_payload_address = (litepciedma2_reader_splitter_sink_payload_address + litepciedma2_reader_splitter_offset);
assign litepciedma2_reader_splitter_source_payload_control = litepciedma2_reader_splitter_sink_payload_control;
assign litepciedma2_reader_splitter_source_payload_user_id = litepciedma2_reader_splitter_user_id;
assign litepciedma2_reader_bufferizeendpoints2_sink_valid = litepciedma2_reader_splitter_source_valid;
assign litepciedma2_reader_splitter_source_ready = litepciedma2_reader_bufferizeendpoints2_sink_ready;
assign litepciedma2_reader_bufferizeendpoints2_sink_first = litepciedma2_reader_splitter_source_first;
assign litepciedma2_reader_bufferizeendpoints2_sink_last = litepciedma2_reader_splitter_source_last;
assign litepciedma2_reader_bufferizeendpoints2_sink_payload_address = litepciedma2_reader_splitter_source_payload_address;
assign litepciedma2_reader_bufferizeendpoints2_sink_payload_length = litepciedma2_reader_splitter_source_payload_length;
assign litepciedma2_reader_bufferizeendpoints2_sink_payload_control = litepciedma2_reader_splitter_source_payload_control;
assign litepciedma2_reader_bufferizeendpoints2_sink_payload_user_id = litepciedma2_reader_splitter_source_payload_user_id;
always @(*) begin
	litepciedma2_reader_splitter_offset_reset <= 1'd0;
	litepciedma2_reader_splitter_sink_ready <= 1'd0;
	litepciedma2_reader_splitter_offset_ce <= 1'd0;
	litepciedma2_reader_splitter_source_valid <= 1'd0;
	litepciedma2_reader_splitter_length_update <= 1'd0;
	litepciedma2_reader_splitter_source_first <= 1'd0;
	litepciedma2_reader_splitter_source_last <= 1'd0;
	subfragments_bufferizeendpoints2_next_state1 <= 2'd0;
	litepciedma2_reader_splitter_source_payload_length <= 24'd0;
	subfragments_bufferizeendpoints2_next_state1 <= subfragments_bufferizeendpoints2_state1;
	case (subfragments_bufferizeendpoints2_state1)
		1'd1: begin
			litepciedma2_reader_splitter_source_valid <= 1'd1;
			litepciedma2_reader_splitter_source_first <= (litepciedma2_reader_splitter_offset == 1'd0);
			if (((litepciedma2_reader_splitter_length - litepciedma2_reader_splitter_offset) > 10'd512)) begin
				litepciedma2_reader_splitter_source_last <= litepciedma2_reader_splitter_end;
				litepciedma2_reader_splitter_source_payload_length <= 10'd512;
				litepciedma2_reader_splitter_offset_ce <= litepciedma2_reader_splitter_source_ready;
				if ((litepciedma2_reader_splitter_source_ready & litepciedma2_reader_splitter_end)) begin
					subfragments_bufferizeendpoints2_next_state1 <= 2'd2;
				end
			end else begin
				litepciedma2_reader_splitter_source_last <= 1'd1;
				litepciedma2_reader_splitter_source_payload_length <= (litepciedma2_reader_splitter_length - litepciedma2_reader_splitter_offset);
				if (litepciedma2_reader_splitter_source_ready) begin
					subfragments_bufferizeendpoints2_next_state1 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma2_reader_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints2_next_state1 <= 1'd0;
		end
		default: begin
			litepciedma2_reader_splitter_offset_reset <= 1'd1;
			if (litepciedma2_reader_splitter_sink_valid) begin
				litepciedma2_reader_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints2_next_state1 <= 1'd1;
			end else begin
				litepciedma2_reader_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma2_reader_bufferizeendpoints2_pipe_ce = (litepciedma2_reader_bufferizeendpoints2_source_ready | (~litepciedma2_reader_bufferizeendpoints2_valid_n));
assign litepciedma2_reader_bufferizeendpoints2_sink_ready = litepciedma2_reader_bufferizeendpoints2_pipe_ce;
assign litepciedma2_reader_bufferizeendpoints2_source_valid = litepciedma2_reader_bufferizeendpoints2_valid_n;
assign litepciedma2_reader_bufferizeendpoints2_busy = (1'd0 | litepciedma2_reader_bufferizeendpoints2_valid_n);
assign litepciedma2_reader_bufferizeendpoints2_source_first = litepciedma2_reader_bufferizeendpoints2_first_n;
assign litepciedma2_reader_bufferizeendpoints2_source_last = litepciedma2_reader_bufferizeendpoints2_last_n;
always @(*) begin
	subfragments_fsm2_next_state1 <= 1'd0;
	litepciedma2_reader_bufferizeendpoints2_source_ready <= 1'd0;
	litepciedma2_litepciemasterinternalport5_sink_valid <= 1'd0;
	subfragments_fsm2_next_state1 <= subfragments_fsm2_state1;
	case (subfragments_fsm2_state1)
		1'd1: begin
			litepciedma2_litepciemasterinternalport5_sink_valid <= 1'd1;
			if (litepciedma2_litepciemasterinternalport5_sink_ready) begin
				litepciedma2_reader_bufferizeendpoints2_source_ready <= 1'd1;
				subfragments_fsm2_next_state1 <= 1'd0;
			end
		end
		default: begin
			if (litepciedma2_reader_request_ready) begin
				subfragments_fsm2_next_state1 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma2_reader_fifo_syncfifo2_din = {litepciedma2_reader_fifo_fifo_in_last, litepciedma2_reader_fifo_fifo_in_first, litepciedma2_reader_fifo_fifo_in_payload_data};
assign {litepciedma2_reader_fifo_fifo_out_last, litepciedma2_reader_fifo_fifo_out_first, litepciedma2_reader_fifo_fifo_out_payload_data} = litepciedma2_reader_fifo_syncfifo2_dout;
assign litepciedma2_reader_fifo_sink_ready = litepciedma2_reader_fifo_syncfifo2_writable;
assign litepciedma2_reader_fifo_syncfifo2_we = litepciedma2_reader_fifo_sink_valid;
assign litepciedma2_reader_fifo_fifo_in_first = litepciedma2_reader_fifo_sink_first;
assign litepciedma2_reader_fifo_fifo_in_last = litepciedma2_reader_fifo_sink_last;
assign litepciedma2_reader_fifo_fifo_in_payload_data = litepciedma2_reader_fifo_sink_payload_data;
assign litepciedma2_reader_fifo_source_valid = litepciedma2_reader_fifo_readable;
assign litepciedma2_reader_fifo_source_first = litepciedma2_reader_fifo_fifo_out_first;
assign litepciedma2_reader_fifo_source_last = litepciedma2_reader_fifo_fifo_out_last;
assign litepciedma2_reader_fifo_source_payload_data = litepciedma2_reader_fifo_fifo_out_payload_data;
assign litepciedma2_reader_fifo_re = litepciedma2_reader_fifo_source_ready;
assign litepciedma2_reader_fifo_syncfifo2_re = (litepciedma2_reader_fifo_syncfifo2_readable & ((~litepciedma2_reader_fifo_readable) | litepciedma2_reader_fifo_re));
assign litepciedma2_reader_fifo_level1 = (litepciedma2_reader_fifo_level0 + litepciedma2_reader_fifo_readable);
always @(*) begin
	litepciedma2_reader_fifo_wrport_adr <= 9'd0;
	if (litepciedma2_reader_fifo_replace) begin
		litepciedma2_reader_fifo_wrport_adr <= (litepciedma2_reader_fifo_produce - 1'd1);
	end else begin
		litepciedma2_reader_fifo_wrport_adr <= litepciedma2_reader_fifo_produce;
	end
end
assign litepciedma2_reader_fifo_wrport_dat_w = litepciedma2_reader_fifo_syncfifo2_din;
assign litepciedma2_reader_fifo_wrport_we = (litepciedma2_reader_fifo_syncfifo2_we & (litepciedma2_reader_fifo_syncfifo2_writable | litepciedma2_reader_fifo_replace));
assign litepciedma2_reader_fifo_do_read = (litepciedma2_reader_fifo_syncfifo2_readable & litepciedma2_reader_fifo_syncfifo2_re);
assign litepciedma2_reader_fifo_rdport_adr = litepciedma2_reader_fifo_consume;
assign litepciedma2_reader_fifo_syncfifo2_dout = litepciedma2_reader_fifo_rdport_dat_r;
assign litepciedma2_reader_fifo_rdport_re = litepciedma2_reader_fifo_do_read;
assign litepciedma2_reader_fifo_syncfifo2_writable = (litepciedma2_reader_fifo_level0 != 10'd512);
assign litepciedma2_reader_fifo_syncfifo2_readable = (litepciedma2_reader_fifo_level0 != 1'd0);
always @(*) begin
	litepciedma2_source_first <= 1'd0;
	litepciedma2_source_last <= 1'd0;
	litepciedma2_source_payload_data <= 64'd0;
	litepciedma2_next_source_valid <= 1'd0;
	litepciedma2_next_source_first <= 1'd0;
	litepciedma2_next_source_last <= 1'd0;
	litepciedma2_next_source_payload_data <= 64'd0;
	litepciedma2_next_sink_ready <= 1'd0;
	litepciedma2_sink_ready <= 1'd0;
	litepciedma2_source_valid <= 1'd0;
	if (litepciedma2_storage) begin
		litepciedma2_source_valid <= litepciedma2_sink_valid;
		litepciedma2_sink_ready <= litepciedma2_source_ready;
		litepciedma2_source_first <= litepciedma2_sink_first;
		litepciedma2_source_last <= litepciedma2_sink_last;
		litepciedma2_source_payload_data <= litepciedma2_sink_payload_data;
	end else begin
		litepciedma2_next_source_valid <= litepciedma2_sink_valid;
		litepciedma2_sink_ready <= litepciedma2_next_source_ready;
		litepciedma2_next_source_first <= litepciedma2_sink_first;
		litepciedma2_next_source_last <= litepciedma2_sink_last;
		litepciedma2_next_source_payload_data <= litepciedma2_sink_payload_data;
		litepciedma2_source_valid <= litepciedma2_next_sink_valid;
		litepciedma2_next_sink_ready <= litepciedma2_source_ready;
		litepciedma2_source_first <= litepciedma2_next_sink_first;
		litepciedma2_source_last <= litepciedma2_next_sink_last;
		litepciedma2_source_payload_data <= litepciedma2_next_sink_payload_data;
	end
end
assign litepciedma2_tx_fifo_syncfifo2_din = {litepciedma2_tx_fifo_fifo_in_last, litepciedma2_tx_fifo_fifo_in_first, litepciedma2_tx_fifo_fifo_in_payload_data};
assign {litepciedma2_tx_fifo_fifo_out_last, litepciedma2_tx_fifo_fifo_out_first, litepciedma2_tx_fifo_fifo_out_payload_data} = litepciedma2_tx_fifo_syncfifo2_dout;
assign litepciedma2_tx_fifo_sink_ready = litepciedma2_tx_fifo_syncfifo2_writable;
assign litepciedma2_tx_fifo_syncfifo2_we = litepciedma2_tx_fifo_sink_valid;
assign litepciedma2_tx_fifo_fifo_in_first = litepciedma2_tx_fifo_sink_first;
assign litepciedma2_tx_fifo_fifo_in_last = litepciedma2_tx_fifo_sink_last;
assign litepciedma2_tx_fifo_fifo_in_payload_data = litepciedma2_tx_fifo_sink_payload_data;
assign litepciedma2_tx_fifo_source_valid = litepciedma2_tx_fifo_readable;
assign litepciedma2_tx_fifo_source_first = litepciedma2_tx_fifo_fifo_out_first;
assign litepciedma2_tx_fifo_source_last = litepciedma2_tx_fifo_fifo_out_last;
assign litepciedma2_tx_fifo_source_payload_data = litepciedma2_tx_fifo_fifo_out_payload_data;
assign litepciedma2_tx_fifo_re = litepciedma2_tx_fifo_source_ready;
assign litepciedma2_tx_fifo_syncfifo2_re = (litepciedma2_tx_fifo_syncfifo2_readable & ((~litepciedma2_tx_fifo_readable) | litepciedma2_tx_fifo_re));
assign litepciedma2_tx_fifo_level1 = (litepciedma2_tx_fifo_level0 + litepciedma2_tx_fifo_readable);
always @(*) begin
	litepciedma2_tx_fifo_wrport_adr <= 10'd0;
	if (litepciedma2_tx_fifo_replace) begin
		litepciedma2_tx_fifo_wrport_adr <= (litepciedma2_tx_fifo_produce - 1'd1);
	end else begin
		litepciedma2_tx_fifo_wrport_adr <= litepciedma2_tx_fifo_produce;
	end
end
assign litepciedma2_tx_fifo_wrport_dat_w = litepciedma2_tx_fifo_syncfifo2_din;
assign litepciedma2_tx_fifo_wrport_we = (litepciedma2_tx_fifo_syncfifo2_we & (litepciedma2_tx_fifo_syncfifo2_writable | litepciedma2_tx_fifo_replace));
assign litepciedma2_tx_fifo_do_read = (litepciedma2_tx_fifo_syncfifo2_readable & litepciedma2_tx_fifo_syncfifo2_re);
assign litepciedma2_tx_fifo_rdport_adr = litepciedma2_tx_fifo_consume;
assign litepciedma2_tx_fifo_syncfifo2_dout = litepciedma2_tx_fifo_rdport_dat_r;
assign litepciedma2_tx_fifo_rdport_re = litepciedma2_tx_fifo_do_read;
assign litepciedma2_tx_fifo_syncfifo2_writable = (litepciedma2_tx_fifo_level0 != 11'd1024);
assign litepciedma2_tx_fifo_syncfifo2_readable = (litepciedma2_tx_fifo_level0 != 1'd0);
assign litepciedma2_rx_fifo_syncfifo2_din = {litepciedma2_rx_fifo_fifo_in_last, litepciedma2_rx_fifo_fifo_in_first, litepciedma2_rx_fifo_fifo_in_payload_data};
assign {litepciedma2_rx_fifo_fifo_out_last, litepciedma2_rx_fifo_fifo_out_first, litepciedma2_rx_fifo_fifo_out_payload_data} = litepciedma2_rx_fifo_syncfifo2_dout;
assign litepciedma2_rx_fifo_sink_ready = litepciedma2_rx_fifo_syncfifo2_writable;
assign litepciedma2_rx_fifo_syncfifo2_we = litepciedma2_rx_fifo_sink_valid;
assign litepciedma2_rx_fifo_fifo_in_first = litepciedma2_rx_fifo_sink_first;
assign litepciedma2_rx_fifo_fifo_in_last = litepciedma2_rx_fifo_sink_last;
assign litepciedma2_rx_fifo_fifo_in_payload_data = litepciedma2_rx_fifo_sink_payload_data;
assign litepciedma2_rx_fifo_source_valid = litepciedma2_rx_fifo_readable;
assign litepciedma2_rx_fifo_source_first = litepciedma2_rx_fifo_fifo_out_first;
assign litepciedma2_rx_fifo_source_last = litepciedma2_rx_fifo_fifo_out_last;
assign litepciedma2_rx_fifo_source_payload_data = litepciedma2_rx_fifo_fifo_out_payload_data;
assign litepciedma2_rx_fifo_re = litepciedma2_rx_fifo_source_ready;
assign litepciedma2_rx_fifo_syncfifo2_re = (litepciedma2_rx_fifo_syncfifo2_readable & ((~litepciedma2_rx_fifo_readable) | litepciedma2_rx_fifo_re));
assign litepciedma2_rx_fifo_level1 = (litepciedma2_rx_fifo_level0 + litepciedma2_rx_fifo_readable);
always @(*) begin
	litepciedma2_rx_fifo_wrport_adr <= 10'd0;
	if (litepciedma2_rx_fifo_replace) begin
		litepciedma2_rx_fifo_wrport_adr <= (litepciedma2_rx_fifo_produce - 1'd1);
	end else begin
		litepciedma2_rx_fifo_wrport_adr <= litepciedma2_rx_fifo_produce;
	end
end
assign litepciedma2_rx_fifo_wrport_dat_w = litepciedma2_rx_fifo_syncfifo2_din;
assign litepciedma2_rx_fifo_wrport_we = (litepciedma2_rx_fifo_syncfifo2_we & (litepciedma2_rx_fifo_syncfifo2_writable | litepciedma2_rx_fifo_replace));
assign litepciedma2_rx_fifo_do_read = (litepciedma2_rx_fifo_syncfifo2_readable & litepciedma2_rx_fifo_syncfifo2_re);
assign litepciedma2_rx_fifo_rdport_adr = litepciedma2_rx_fifo_consume;
assign litepciedma2_rx_fifo_syncfifo2_dout = litepciedma2_rx_fifo_rdport_dat_r;
assign litepciedma2_rx_fifo_rdport_re = litepciedma2_rx_fifo_do_read;
assign litepciedma2_rx_fifo_syncfifo2_writable = (litepciedma2_rx_fifo_level0 != 11'd1024);
assign litepciedma2_rx_fifo_syncfifo2_readable = (litepciedma2_rx_fifo_level0 != 1'd0);
always @(*) begin
	pcie_msi_clear <= 32'd0;
	if (pcie_msi_clear_clear_re) begin
		pcie_msi_clear <= pcie_msi_clear_clear_r;
	end
end
assign pcie_msi_transmit_request = ((pcie_msi_status & pcie_msi_storage) != 1'd0);
assign pcie_msi_transmit_grant = (pcie_msi_transmit_counter == 1'd0);
always @(*) begin
	pcie_msi_source_valid <= 1'd0;
	if (pcie_msi_transmit_grant) begin
		pcie_msi_source_valid <= pcie_msi_transmit_request;
	end
end
assign litepciecore_shared_adr = array_muxed0;
assign litepciecore_shared_dat_w = array_muxed1;
assign litepciecore_shared_sel = array_muxed2;
assign litepciecore_shared_cyc = array_muxed3;
assign litepciecore_shared_stb = array_muxed4;
assign litepciecore_shared_we = array_muxed5;
assign litepciecore_shared_cti = array_muxed6;
assign litepciecore_shared_bte = array_muxed7;
assign pcie_wishbone_wishbone_dat_r = litepciecore_shared_dat_r;
assign pcie_wishbone_wishbone_ack = (litepciecore_shared_ack & (litepciecore_grant == 1'd0));
assign pcie_wishbone_wishbone_err = (litepciecore_shared_err & (litepciecore_grant == 1'd0));
assign litepciecore_request = {pcie_wishbone_wishbone_cyc};
assign litepciecore_grant = 1'd0;
always @(*) begin
	litepciecore_slave_sel <= 2'd0;
	litepciecore_slave_sel[0] <= (litepciecore_shared_adr[28:26] == 1'd1);
	litepciecore_slave_sel[1] <= (litepciecore_shared_adr[28:26] == 1'd0);
end
assign litepciecore_sram_bus_adr0 = litepciecore_shared_adr;
assign litepciecore_sram_bus_dat_w0 = litepciecore_shared_dat_w;
assign litepciecore_sram_bus_sel = litepciecore_shared_sel;
assign litepciecore_sram_bus_stb = litepciecore_shared_stb;
assign litepciecore_sram_bus_we0 = litepciecore_shared_we;
assign litepciecore_sram_bus_cti = litepciecore_shared_cti;
assign litepciecore_sram_bus_bte = litepciecore_shared_bte;
assign litepciecore_bus_wishbone_adr = litepciecore_shared_adr;
assign litepciecore_bus_wishbone_dat_w = litepciecore_shared_dat_w;
assign litepciecore_bus_wishbone_sel = litepciecore_shared_sel;
assign litepciecore_bus_wishbone_stb = litepciecore_shared_stb;
assign litepciecore_bus_wishbone_we = litepciecore_shared_we;
assign litepciecore_bus_wishbone_cti = litepciecore_shared_cti;
assign litepciecore_bus_wishbone_bte = litepciecore_shared_bte;
assign litepciecore_sram_bus_cyc = (litepciecore_shared_cyc & litepciecore_slave_sel[0]);
assign litepciecore_bus_wishbone_cyc = (litepciecore_shared_cyc & litepciecore_slave_sel[1]);
assign litepciecore_shared_err = (litepciecore_sram_bus_err | litepciecore_bus_wishbone_err);
assign litepciecore_wait = ((litepciecore_shared_stb & litepciecore_shared_cyc) & (~litepciecore_shared_ack));
always @(*) begin
	litepciecore_shared_ack <= 1'd0;
	litepciecore_error <= 1'd0;
	litepciecore_shared_dat_r <= 32'd0;
	litepciecore_shared_ack <= (litepciecore_sram_bus_ack | litepciecore_bus_wishbone_ack);
	litepciecore_shared_dat_r <= (({32{litepciecore_slave_sel_r[0]}} & litepciecore_sram_bus_dat_r0) | ({32{litepciecore_slave_sel_r[1]}} & litepciecore_bus_wishbone_dat_r));
	if (litepciecore_done) begin
		litepciecore_shared_dat_r <= 32'd4294967295;
		litepciecore_shared_ack <= 1'd1;
		litepciecore_error <= 1'd1;
	end
end
assign litepciecore_done = (litepciecore_count == 1'd0);
assign litepciecore_csrbank0_sel = (litepciecore_interface0_bank_bus_adr[13:9] == 5'd26);
assign litepciecore_csrbank0_cntrl15_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl15_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 1'd0));
assign litepciecore_csrbank0_cntrl14_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl14_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 1'd1));
assign litepciecore_csrbank0_cntrl13_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl13_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 2'd2));
assign litepciecore_csrbank0_cntrl12_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl12_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 2'd3));
assign litepciecore_csrbank0_cntrl11_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl11_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 3'd4));
assign litepciecore_csrbank0_cntrl10_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl10_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 3'd5));
assign litepciecore_csrbank0_cntrl9_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl9_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 3'd6));
assign litepciecore_csrbank0_cntrl8_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl8_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 3'd7));
assign litepciecore_csrbank0_cntrl7_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl7_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd8));
assign litepciecore_csrbank0_cntrl6_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl6_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd9));
assign litepciecore_csrbank0_cntrl5_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl5_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd10));
assign litepciecore_csrbank0_cntrl4_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl4_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd11));
assign litepciecore_csrbank0_cntrl3_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl3_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd12));
assign litepciecore_csrbank0_cntrl2_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl2_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd13));
assign litepciecore_csrbank0_cntrl1_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl1_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd14));
assign litepciecore_csrbank0_cntrl0_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl0_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd15));
assign litepciecore_csrbank0_enable0_r = litepciecore_interface0_bank_bus_dat_w[0];
assign litepciecore_csrbank0_enable0_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 5'd16));
assign cntrl_storage = cntrl_storage_full[511:0];
assign litepciecore_csrbank0_cntrl15_w = cntrl_storage_full[511:480];
assign litepciecore_csrbank0_cntrl14_w = cntrl_storage_full[479:448];
assign litepciecore_csrbank0_cntrl13_w = cntrl_storage_full[447:416];
assign litepciecore_csrbank0_cntrl12_w = cntrl_storage_full[415:384];
assign litepciecore_csrbank0_cntrl11_w = cntrl_storage_full[383:352];
assign litepciecore_csrbank0_cntrl10_w = cntrl_storage_full[351:320];
assign litepciecore_csrbank0_cntrl9_w = cntrl_storage_full[319:288];
assign litepciecore_csrbank0_cntrl8_w = cntrl_storage_full[287:256];
assign litepciecore_csrbank0_cntrl7_w = cntrl_storage_full[255:224];
assign litepciecore_csrbank0_cntrl6_w = cntrl_storage_full[223:192];
assign litepciecore_csrbank0_cntrl5_w = cntrl_storage_full[191:160];
assign litepciecore_csrbank0_cntrl4_w = cntrl_storage_full[159:128];
assign litepciecore_csrbank0_cntrl3_w = cntrl_storage_full[127:96];
assign litepciecore_csrbank0_cntrl2_w = cntrl_storage_full[95:64];
assign litepciecore_csrbank0_cntrl1_w = cntrl_storage_full[63:32];
assign litepciecore_csrbank0_cntrl0_w = cntrl_storage_full[31:0];
assign enable_storage = enable_storage_full;
assign litepciecore_csrbank0_enable0_w = enable_storage_full;
assign litepciecore_csrbank1_sel = (litepciecore_interface1_bank_bus_adr[13:9] == 1'd0);
assign litepciecore_reset_reset_r = litepciecore_interface1_bank_bus_dat_w[0];
assign litepciecore_reset_reset_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[1:0] == 1'd0));
assign litepciecore_csrbank1_scratch0_r = litepciecore_interface1_bank_bus_dat_w[31:0];
assign litepciecore_csrbank1_scratch0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[1:0] == 1'd1));
assign litepciecore_csrbank1_bus_errors_r = litepciecore_interface1_bank_bus_dat_w[31:0];
assign litepciecore_csrbank1_bus_errors_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[1:0] == 2'd2));
assign litepciecore_storage = litepciecore_storage_full[31:0];
assign litepciecore_csrbank1_scratch0_w = litepciecore_storage_full[31:0];
assign litepciecore_csrbank1_bus_errors_w = litepciecore_bus_errors_status[31:0];
assign litepciecore_sel = (litepciecore_sram_bus_adr1[13:9] == 1'd1);
always @(*) begin
	litepciecore_sram_bus_dat_r1 <= 32'd0;
	if (litepciecore_sel_r) begin
		litepciecore_sram_bus_dat_r1 <= litepciecore_dat_r;
	end
end
assign litepciecore_adr = litepciecore_sram_bus_adr1[5:0];
assign litepciecore_csrbank2_sel = (litepciecore_interface2_bank_bus_adr[13:9] == 5'd21);
assign litepciecore_csrbank2_writer_enable0_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciecore_csrbank2_writer_enable0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 1'd0));
assign litepciecore_csrbank2_writer_sCounter0_r = litepciecore_interface2_bank_bus_dat_w[31:0];
assign litepciecore_csrbank2_writer_sCounter0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 1'd1));
assign litepciecore_csrbank2_writer_table_value1_r = litepciecore_interface2_bank_bus_dat_w[31:0];
assign litepciecore_csrbank2_writer_table_value1_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 2'd2));
assign litepciecore_csrbank2_writer_table_value0_r = litepciecore_interface2_bank_bus_dat_w[31:0];
assign litepciecore_csrbank2_writer_table_value0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 2'd3));
assign litepciedma0_writer_table_we_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciedma0_writer_table_we_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 3'd4));
assign litepciecore_csrbank2_writer_table_loop_prog_n0_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciecore_csrbank2_writer_table_loop_prog_n0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 3'd5));
assign litepciecore_csrbank2_writer_table_loop_status_r = litepciecore_interface2_bank_bus_dat_w[15:0];
assign litepciecore_csrbank2_writer_table_loop_status_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 3'd6));
assign litepciecore_csrbank2_writer_table_level_r = litepciecore_interface2_bank_bus_dat_w[7:0];
assign litepciecore_csrbank2_writer_table_level_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 3'd7));
assign litepciedma0_writer_table_flush_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciedma0_writer_table_flush_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd8));
assign litepciecore_csrbank2_reader_enable0_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciecore_csrbank2_reader_enable0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd9));
assign litepciecore_csrbank2_reader_sCounter0_r = litepciecore_interface2_bank_bus_dat_w[15:0];
assign litepciecore_csrbank2_reader_sCounter0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd10));
assign litepciecore_csrbank2_reader_table_value1_r = litepciecore_interface2_bank_bus_dat_w[31:0];
assign litepciecore_csrbank2_reader_table_value1_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd11));
assign litepciecore_csrbank2_reader_table_value0_r = litepciecore_interface2_bank_bus_dat_w[31:0];
assign litepciecore_csrbank2_reader_table_value0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd12));
assign litepciedma0_reader_table_we_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciedma0_reader_table_we_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd13));
assign litepciecore_csrbank2_reader_table_loop_prog_n0_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciecore_csrbank2_reader_table_loop_prog_n0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd14));
assign litepciecore_csrbank2_reader_table_loop_status_r = litepciecore_interface2_bank_bus_dat_w[15:0];
assign litepciecore_csrbank2_reader_table_loop_status_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd15));
assign litepciecore_csrbank2_reader_table_level_r = litepciecore_interface2_bank_bus_dat_w[7:0];
assign litepciecore_csrbank2_reader_table_level_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd16));
assign litepciedma0_reader_table_flush_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciedma0_reader_table_flush_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd17));
assign litepciecore_csrbank2_loopback_enable0_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciecore_csrbank2_loopback_enable0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd18));
assign litepciedma0_writer_enable_storage = litepciedma0_writer_enable_storage_full;
assign litepciecore_csrbank2_writer_enable0_w = litepciedma0_writer_enable_storage_full;
assign litepciedma0_writer_sCounter_storage = litepciedma0_writer_sCounter_storage_full[31:0];
assign litepciecore_csrbank2_writer_sCounter0_w = litepciedma0_writer_sCounter_storage_full[31:0];
assign litepciedma0_writer_table_value_storage = litepciedma0_writer_table_value_storage_full[63:0];
assign litepciecore_csrbank2_writer_table_value1_w = litepciedma0_writer_table_value_storage_full[63:32];
assign litepciecore_csrbank2_writer_table_value0_w = litepciedma0_writer_table_value_storage_full[31:0];
assign litepciedma0_writer_table_loop_prog_n_storage = litepciedma0_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank2_writer_table_loop_prog_n0_w = litepciedma0_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank2_writer_table_loop_status_w = litepciedma0_writer_table_loop_status_status[15:0];
assign litepciecore_csrbank2_writer_table_level_w = litepciedma0_writer_table_level_status[7:0];
assign litepciedma0_reader_enable_storage = litepciedma0_reader_enable_storage_full;
assign litepciecore_csrbank2_reader_enable0_w = litepciedma0_reader_enable_storage_full;
assign litepciedma0_reader_sCounter_storage = litepciedma0_reader_sCounter_storage_full[15:0];
assign litepciecore_csrbank2_reader_sCounter0_w = litepciedma0_reader_sCounter_storage_full[15:0];
assign litepciedma0_reader_table_value_storage = litepciedma0_reader_table_value_storage_full[63:0];
assign litepciecore_csrbank2_reader_table_value1_w = litepciedma0_reader_table_value_storage_full[63:32];
assign litepciecore_csrbank2_reader_table_value0_w = litepciedma0_reader_table_value_storage_full[31:0];
assign litepciedma0_reader_table_loop_prog_n_storage = litepciedma0_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank2_reader_table_loop_prog_n0_w = litepciedma0_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank2_reader_table_loop_status_w = litepciedma0_reader_table_loop_status_status[15:0];
assign litepciecore_csrbank2_reader_table_level_w = litepciedma0_reader_table_level_status[7:0];
assign litepciedma0_storage = litepciedma0_storage_full;
assign litepciecore_csrbank2_loopback_enable0_w = litepciedma0_storage_full;
assign litepciecore_csrbank3_sel = (litepciecore_interface3_bank_bus_adr[13:9] == 5'd22);
assign litepciecore_csrbank3_writer_enable0_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciecore_csrbank3_writer_enable0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 1'd0));
assign litepciecore_csrbank3_writer_sCounter0_r = litepciecore_interface3_bank_bus_dat_w[31:0];
assign litepciecore_csrbank3_writer_sCounter0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 1'd1));
assign litepciecore_csrbank3_writer_table_value1_r = litepciecore_interface3_bank_bus_dat_w[31:0];
assign litepciecore_csrbank3_writer_table_value1_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 2'd2));
assign litepciecore_csrbank3_writer_table_value0_r = litepciecore_interface3_bank_bus_dat_w[31:0];
assign litepciecore_csrbank3_writer_table_value0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 2'd3));
assign litepciedma1_writer_table_we_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciedma1_writer_table_we_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 3'd4));
assign litepciecore_csrbank3_writer_table_loop_prog_n0_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciecore_csrbank3_writer_table_loop_prog_n0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 3'd5));
assign litepciecore_csrbank3_writer_table_loop_status_r = litepciecore_interface3_bank_bus_dat_w[15:0];
assign litepciecore_csrbank3_writer_table_loop_status_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 3'd6));
assign litepciecore_csrbank3_writer_table_level_r = litepciecore_interface3_bank_bus_dat_w[7:0];
assign litepciecore_csrbank3_writer_table_level_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 3'd7));
assign litepciedma1_writer_table_flush_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciedma1_writer_table_flush_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd8));
assign litepciecore_csrbank3_reader_enable0_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciecore_csrbank3_reader_enable0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd9));
assign litepciecore_csrbank3_reader_sCounter0_r = litepciecore_interface3_bank_bus_dat_w[15:0];
assign litepciecore_csrbank3_reader_sCounter0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd10));
assign litepciecore_csrbank3_reader_table_value1_r = litepciecore_interface3_bank_bus_dat_w[31:0];
assign litepciecore_csrbank3_reader_table_value1_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd11));
assign litepciecore_csrbank3_reader_table_value0_r = litepciecore_interface3_bank_bus_dat_w[31:0];
assign litepciecore_csrbank3_reader_table_value0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd12));
assign litepciedma1_reader_table_we_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciedma1_reader_table_we_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd13));
assign litepciecore_csrbank3_reader_table_loop_prog_n0_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciecore_csrbank3_reader_table_loop_prog_n0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd14));
assign litepciecore_csrbank3_reader_table_loop_status_r = litepciecore_interface3_bank_bus_dat_w[15:0];
assign litepciecore_csrbank3_reader_table_loop_status_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd15));
assign litepciecore_csrbank3_reader_table_level_r = litepciecore_interface3_bank_bus_dat_w[7:0];
assign litepciecore_csrbank3_reader_table_level_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd16));
assign litepciedma1_reader_table_flush_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciedma1_reader_table_flush_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd17));
assign litepciecore_csrbank3_loopback_enable0_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciecore_csrbank3_loopback_enable0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd18));
assign litepciedma1_writer_enable_storage = litepciedma1_writer_enable_storage_full;
assign litepciecore_csrbank3_writer_enable0_w = litepciedma1_writer_enable_storage_full;
assign litepciedma1_writer_sCounter_storage = litepciedma1_writer_sCounter_storage_full[31:0];
assign litepciecore_csrbank3_writer_sCounter0_w = litepciedma1_writer_sCounter_storage_full[31:0];
assign litepciedma1_writer_table_value_storage = litepciedma1_writer_table_value_storage_full[63:0];
assign litepciecore_csrbank3_writer_table_value1_w = litepciedma1_writer_table_value_storage_full[63:32];
assign litepciecore_csrbank3_writer_table_value0_w = litepciedma1_writer_table_value_storage_full[31:0];
assign litepciedma1_writer_table_loop_prog_n_storage = litepciedma1_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank3_writer_table_loop_prog_n0_w = litepciedma1_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank3_writer_table_loop_status_w = litepciedma1_writer_table_loop_status_status[15:0];
assign litepciecore_csrbank3_writer_table_level_w = litepciedma1_writer_table_level_status[7:0];
assign litepciedma1_reader_enable_storage = litepciedma1_reader_enable_storage_full;
assign litepciecore_csrbank3_reader_enable0_w = litepciedma1_reader_enable_storage_full;
assign litepciedma1_reader_sCounter_storage = litepciedma1_reader_sCounter_storage_full[15:0];
assign litepciecore_csrbank3_reader_sCounter0_w = litepciedma1_reader_sCounter_storage_full[15:0];
assign litepciedma1_reader_table_value_storage = litepciedma1_reader_table_value_storage_full[63:0];
assign litepciecore_csrbank3_reader_table_value1_w = litepciedma1_reader_table_value_storage_full[63:32];
assign litepciecore_csrbank3_reader_table_value0_w = litepciedma1_reader_table_value_storage_full[31:0];
assign litepciedma1_reader_table_loop_prog_n_storage = litepciedma1_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank3_reader_table_loop_prog_n0_w = litepciedma1_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank3_reader_table_loop_status_w = litepciedma1_reader_table_loop_status_status[15:0];
assign litepciecore_csrbank3_reader_table_level_w = litepciedma1_reader_table_level_status[7:0];
assign litepciedma1_storage = litepciedma1_storage_full;
assign litepciecore_csrbank3_loopback_enable0_w = litepciedma1_storage_full;
assign litepciecore_csrbank4_sel = (litepciecore_interface4_bank_bus_adr[13:9] == 5'd23);
assign litepciecore_csrbank4_writer_enable0_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciecore_csrbank4_writer_enable0_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 1'd0));
assign litepciecore_csrbank4_writer_sCounter0_r = litepciecore_interface4_bank_bus_dat_w[31:0];
assign litepciecore_csrbank4_writer_sCounter0_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 1'd1));
assign litepciecore_csrbank4_writer_table_value1_r = litepciecore_interface4_bank_bus_dat_w[31:0];
assign litepciecore_csrbank4_writer_table_value1_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 2'd2));
assign litepciecore_csrbank4_writer_table_value0_r = litepciecore_interface4_bank_bus_dat_w[31:0];
assign litepciecore_csrbank4_writer_table_value0_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 2'd3));
assign litepciedma2_writer_table_we_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciedma2_writer_table_we_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 3'd4));
assign litepciecore_csrbank4_writer_table_loop_prog_n0_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciecore_csrbank4_writer_table_loop_prog_n0_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 3'd5));
assign litepciecore_csrbank4_writer_table_loop_status_r = litepciecore_interface4_bank_bus_dat_w[15:0];
assign litepciecore_csrbank4_writer_table_loop_status_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 3'd6));
assign litepciecore_csrbank4_writer_table_level_r = litepciecore_interface4_bank_bus_dat_w[7:0];
assign litepciecore_csrbank4_writer_table_level_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 3'd7));
assign litepciedma2_writer_table_flush_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciedma2_writer_table_flush_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 4'd8));
assign litepciecore_csrbank4_reader_enable0_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciecore_csrbank4_reader_enable0_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 4'd9));
assign litepciecore_csrbank4_reader_sCounter0_r = litepciecore_interface4_bank_bus_dat_w[15:0];
assign litepciecore_csrbank4_reader_sCounter0_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 4'd10));
assign litepciecore_csrbank4_reader_table_value1_r = litepciecore_interface4_bank_bus_dat_w[31:0];
assign litepciecore_csrbank4_reader_table_value1_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 4'd11));
assign litepciecore_csrbank4_reader_table_value0_r = litepciecore_interface4_bank_bus_dat_w[31:0];
assign litepciecore_csrbank4_reader_table_value0_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 4'd12));
assign litepciedma2_reader_table_we_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciedma2_reader_table_we_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 4'd13));
assign litepciecore_csrbank4_reader_table_loop_prog_n0_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciecore_csrbank4_reader_table_loop_prog_n0_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 4'd14));
assign litepciecore_csrbank4_reader_table_loop_status_r = litepciecore_interface4_bank_bus_dat_w[15:0];
assign litepciecore_csrbank4_reader_table_loop_status_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 4'd15));
assign litepciecore_csrbank4_reader_table_level_r = litepciecore_interface4_bank_bus_dat_w[7:0];
assign litepciecore_csrbank4_reader_table_level_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 5'd16));
assign litepciedma2_reader_table_flush_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciedma2_reader_table_flush_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 5'd17));
assign litepciecore_csrbank4_loopback_enable0_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciecore_csrbank4_loopback_enable0_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[4:0] == 5'd18));
assign litepciedma2_writer_enable_storage = litepciedma2_writer_enable_storage_full;
assign litepciecore_csrbank4_writer_enable0_w = litepciedma2_writer_enable_storage_full;
assign litepciedma2_writer_sCounter_storage = litepciedma2_writer_sCounter_storage_full[31:0];
assign litepciecore_csrbank4_writer_sCounter0_w = litepciedma2_writer_sCounter_storage_full[31:0];
assign litepciedma2_writer_table_value_storage = litepciedma2_writer_table_value_storage_full[63:0];
assign litepciecore_csrbank4_writer_table_value1_w = litepciedma2_writer_table_value_storage_full[63:32];
assign litepciecore_csrbank4_writer_table_value0_w = litepciedma2_writer_table_value_storage_full[31:0];
assign litepciedma2_writer_table_loop_prog_n_storage = litepciedma2_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank4_writer_table_loop_prog_n0_w = litepciedma2_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank4_writer_table_loop_status_w = litepciedma2_writer_table_loop_status_status[15:0];
assign litepciecore_csrbank4_writer_table_level_w = litepciedma2_writer_table_level_status[7:0];
assign litepciedma2_reader_enable_storage = litepciedma2_reader_enable_storage_full;
assign litepciecore_csrbank4_reader_enable0_w = litepciedma2_reader_enable_storage_full;
assign litepciedma2_reader_sCounter_storage = litepciedma2_reader_sCounter_storage_full[15:0];
assign litepciecore_csrbank4_reader_sCounter0_w = litepciedma2_reader_sCounter_storage_full[15:0];
assign litepciedma2_reader_table_value_storage = litepciedma2_reader_table_value_storage_full[63:0];
assign litepciecore_csrbank4_reader_table_value1_w = litepciedma2_reader_table_value_storage_full[63:32];
assign litepciecore_csrbank4_reader_table_value0_w = litepciedma2_reader_table_value_storage_full[31:0];
assign litepciedma2_reader_table_loop_prog_n_storage = litepciedma2_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank4_reader_table_loop_prog_n0_w = litepciedma2_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank4_reader_table_loop_status_w = litepciedma2_reader_table_loop_status_status[15:0];
assign litepciecore_csrbank4_reader_table_level_w = litepciedma2_reader_table_level_status[7:0];
assign litepciedma2_storage = litepciedma2_storage_full;
assign litepciecore_csrbank4_loopback_enable0_w = litepciedma2_storage_full;
assign litepciecore_csrbank5_sel = (litepciecore_interface5_bank_bus_adr[13:9] == 5'd25);
assign litepciecore_csrbank5_enable0_r = litepciecore_interface5_bank_bus_dat_w[31:0];
assign litepciecore_csrbank5_enable0_re = ((litepciecore_csrbank5_sel & litepciecore_interface5_bank_bus_we) & (litepciecore_interface5_bank_bus_adr[1:0] == 1'd0));
assign pcie_msi_clear_clear_r = litepciecore_interface5_bank_bus_dat_w[31:0];
assign pcie_msi_clear_clear_re = ((litepciecore_csrbank5_sel & litepciecore_interface5_bank_bus_we) & (litepciecore_interface5_bank_bus_adr[1:0] == 1'd1));
assign litepciecore_csrbank5_vector_r = litepciecore_interface5_bank_bus_dat_w[31:0];
assign litepciecore_csrbank5_vector_re = ((litepciecore_csrbank5_sel & litepciecore_interface5_bank_bus_we) & (litepciecore_interface5_bank_bus_adr[1:0] == 2'd2));
assign pcie_msi_storage = pcie_msi_storage_full[31:0];
assign litepciecore_csrbank5_enable0_w = pcie_msi_storage_full[31:0];
assign litepciecore_csrbank5_vector_w = pcie_msi_status[31:0];
assign litepciecore_interface0_bank_bus_adr = litepciecore_interface_adr;
assign litepciecore_interface1_bank_bus_adr = litepciecore_interface_adr;
assign litepciecore_interface2_bank_bus_adr = litepciecore_interface_adr;
assign litepciecore_interface3_bank_bus_adr = litepciecore_interface_adr;
assign litepciecore_interface4_bank_bus_adr = litepciecore_interface_adr;
assign litepciecore_interface5_bank_bus_adr = litepciecore_interface_adr;
assign litepciecore_sram_bus_adr1 = litepciecore_interface_adr;
assign litepciecore_interface0_bank_bus_we = litepciecore_interface_we;
assign litepciecore_interface1_bank_bus_we = litepciecore_interface_we;
assign litepciecore_interface2_bank_bus_we = litepciecore_interface_we;
assign litepciecore_interface3_bank_bus_we = litepciecore_interface_we;
assign litepciecore_interface4_bank_bus_we = litepciecore_interface_we;
assign litepciecore_interface5_bank_bus_we = litepciecore_interface_we;
assign litepciecore_sram_bus_we1 = litepciecore_interface_we;
assign litepciecore_interface0_bank_bus_dat_w = litepciecore_interface_dat_w;
assign litepciecore_interface1_bank_bus_dat_w = litepciecore_interface_dat_w;
assign litepciecore_interface2_bank_bus_dat_w = litepciecore_interface_dat_w;
assign litepciecore_interface3_bank_bus_dat_w = litepciecore_interface_dat_w;
assign litepciecore_interface4_bank_bus_dat_w = litepciecore_interface_dat_w;
assign litepciecore_interface5_bank_bus_dat_w = litepciecore_interface_dat_w;
assign litepciecore_sram_bus_dat_w1 = litepciecore_interface_dat_w;
assign litepciecore_interface_dat_r = ((((((litepciecore_interface0_bank_bus_dat_r | litepciecore_interface1_bank_bus_dat_r) | litepciecore_interface2_bank_bus_dat_r) | litepciecore_interface3_bank_bus_dat_r) | litepciecore_interface4_bank_bus_dat_r) | litepciecore_interface5_bank_bus_dat_r) | litepciecore_sram_bus_dat_r1);
always @(*) begin
	array_muxed0 <= 30'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed0 <= pcie_wishbone_wishbone_adr;
		end
	endcase
end
always @(*) begin
	array_muxed1 <= 32'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed1 <= pcie_wishbone_wishbone_dat_w;
		end
	endcase
end
always @(*) begin
	array_muxed2 <= 4'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed2 <= pcie_wishbone_wishbone_sel;
		end
	endcase
end
always @(*) begin
	array_muxed3 <= 1'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed3 <= pcie_wishbone_wishbone_cyc;
		end
	endcase
end
always @(*) begin
	array_muxed4 <= 1'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed4 <= pcie_wishbone_wishbone_stb;
		end
	endcase
end
always @(*) begin
	array_muxed5 <= 1'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed5 <= pcie_wishbone_wishbone_we;
		end
	endcase
end
always @(*) begin
	array_muxed6 <= 3'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed6 <= pcie_wishbone_wishbone_cti;
		end
	endcase
end
always @(*) begin
	array_muxed7 <= 2'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed7 <= pcie_wishbone_wishbone_bte;
		end
	endcase
end
assign pcie_phy_tx_cdc_produce_rdomain = multiregimpl0_regs1;
assign pcie_phy_tx_cdc_consume_wdomain = multiregimpl1_regs1;
assign pcie_phy_rx_cdc_produce_rdomain = multiregimpl2_regs1;
assign pcie_phy_rx_cdc_consume_wdomain = multiregimpl3_regs1;
assign pcie_phy_msi_cdc_produce_rdomain = multiregimpl4_regs1;
assign pcie_phy_msi_cdc_consume_wdomain = multiregimpl5_regs1;

always @(posedge pcie_clk) begin
	case (pcie_phy_dcommand[14:12])
		1'd0: begin
			pcie_phy_max_request_size <= 8'd128;
		end
		1'd1: begin
			pcie_phy_max_request_size <= 9'd256;
		end
		2'd2: begin
			pcie_phy_max_request_size <= 10'd512;
		end
		2'd3: begin
			pcie_phy_max_request_size <= 11'd1024;
		end
		3'd4: begin
			pcie_phy_max_request_size <= 12'd2048;
		end
		3'd5: begin
			pcie_phy_max_request_size <= 13'd4096;
		end
	endcase
	case (pcie_phy_dcommand[7:5])
		1'd0: begin
			pcie_phy_max_payload_size <= 8'd128;
		end
		1'd1: begin
			pcie_phy_max_payload_size <= 9'd256;
		end
		2'd2: begin
			pcie_phy_max_payload_size <= 10'd512;
		end
		2'd3: begin
			pcie_phy_max_payload_size <= 11'd1024;
		end
		3'd4: begin
			pcie_phy_max_payload_size <= 12'd2048;
		end
		3'd5: begin
			pcie_phy_max_payload_size <= 13'd4096;
		end
	endcase
	pcie_phy_id <= {pcie_phy_bus_number, pcie_phy_device_number, pcie_phy_function_number};
	pcie_phy_tl_cfg_add_reg_lsb <= pcie_phy_pcie_config_tl_tl_cfg_add[0];
	pcie_phy_tl_cfg_add_reg2_lsb <= pcie_phy_tl_cfg_add_reg_lsb;
	pcie_phy_cfgctl_addr_change <= (pcie_phy_tl_cfg_add_reg_lsb != pcie_phy_tl_cfg_add_reg2_lsb);
	pcie_phy_cfgctl_addr_change2 <= pcie_phy_cfgctl_addr_change;
	pcie_phy_cfgctl_addr_strobe <= pcie_phy_cfgctl_addr_change2;
	pcie_phy_captured_cfg_addr_reg <= pcie_phy_pcie_config_tl_tl_cfg_add;
	pcie_phy_captured_cfg_data_reg <= pcie_phy_pcie_o_config_tl_tl_cfg_ctl;
	if (((pcie_phy_cfgctl_addr_strobe == 1'd1) & (pcie_phy_captured_cfg_addr_reg == 1'd0))) begin
		pcie_phy_dcommand <= pcie_phy_captured_cfg_data_reg[15:0];
	end
	if (((pcie_phy_cfgctl_addr_strobe == 1'd1) & (pcie_phy_captured_cfg_addr_reg == 4'd15))) begin
		pcie_phy_device_number <= pcie_phy_captured_cfg_data_reg[4:0];
		pcie_phy_bus_number <= pcie_phy_captured_cfg_data_reg[12:5];
	end
	pcie_phy_tx_cdc_graycounter1_q_binary <= pcie_phy_tx_cdc_graycounter1_q_next_binary;
	pcie_phy_tx_cdc_graycounter1_q <= pcie_phy_tx_cdc_graycounter1_q_next;
	pcie_phy_rx_cdc_graycounter0_q_binary <= pcie_phy_rx_cdc_graycounter0_q_next_binary;
	pcie_phy_rx_cdc_graycounter0_q <= pcie_phy_rx_cdc_graycounter0_q_next;
	pcie_phy_msi_cdc_graycounter1_q_binary <= pcie_phy_msi_cdc_graycounter1_q_next_binary;
	pcie_phy_msi_cdc_graycounter1_q <= pcie_phy_msi_cdc_graycounter1_q_next;
	pcie_phy_tx_n2av_endpoint0_to_valid <= pcie_phy_tx_n2av_sink_valid;
	pcie_phy_tx_n2av_endpoint0_to_first <= pcie_phy_tx_n2av_sink_first;
	pcie_phy_tx_n2av_endpoint0_to_last <= pcie_phy_tx_n2av_sink_last;
	pcie_phy_tx_n2av_endpoint0_to_payload_dat <= pcie_phy_tx_n2av_sink_payload_dat;
	pcie_phy_tx_n2av_endpoint0_to_payload_be <= pcie_phy_tx_n2av_sink_payload_be;
	pcie_phy_tx_n2av_endpoint0_to_valid <= (pcie_phy_tx_n2av_sink_valid & pcie_phy_tx_n2av_source_ready);
	pcie_phy_tx_n2av_endpoint1_to_valid <= pcie_phy_tx_n2av_endpoint0_to_valid;
	pcie_phy_tx_n2av_endpoint1_to_first <= pcie_phy_tx_n2av_endpoint0_to_first;
	pcie_phy_tx_n2av_endpoint1_to_last <= pcie_phy_tx_n2av_endpoint0_to_last;
	pcie_phy_tx_n2av_endpoint1_to_payload_dat <= pcie_phy_tx_n2av_endpoint0_to_payload_dat;
	pcie_phy_tx_n2av_endpoint1_to_payload_be <= pcie_phy_tx_n2av_endpoint0_to_payload_be;
	if (((pcie_phy_buf_syncfifo_we & pcie_phy_buf_syncfifo_writable) & (~pcie_phy_buf_replace))) begin
		pcie_phy_buf_produce <= (pcie_phy_buf_produce + 1'd1);
	end
	if (pcie_phy_buf_do_read) begin
		pcie_phy_buf_consume <= (pcie_phy_buf_consume + 1'd1);
	end
	if (((pcie_phy_buf_syncfifo_we & pcie_phy_buf_syncfifo_writable) & (~pcie_phy_buf_replace))) begin
		if ((~pcie_phy_buf_do_read)) begin
			pcie_phy_buf_level <= (pcie_phy_buf_level + 1'd1);
		end
	end else begin
		if (pcie_phy_buf_do_read) begin
			pcie_phy_buf_level <= (pcie_phy_buf_level - 1'd1);
		end
	end
	if (pcie_rst) begin
		pcie_phy_id <= 16'd0;
		pcie_phy_max_request_size <= 16'd0;
		pcie_phy_max_payload_size <= 16'd0;
		pcie_phy_tx_cdc_graycounter1_q <= 6'd0;
		pcie_phy_tx_cdc_graycounter1_q_binary <= 6'd0;
		pcie_phy_rx_cdc_graycounter0_q <= 6'd0;
		pcie_phy_rx_cdc_graycounter0_q_binary <= 6'd0;
		pcie_phy_msi_cdc_graycounter1_q <= 3'd0;
		pcie_phy_msi_cdc_graycounter1_q_binary <= 3'd0;
		pcie_phy_bus_number <= 8'd0;
		pcie_phy_device_number <= 5'd0;
		pcie_phy_dcommand <= 16'd0;
		pcie_phy_tl_cfg_add_reg_lsb <= 1'd0;
		pcie_phy_tl_cfg_add_reg2_lsb <= 1'd0;
		pcie_phy_cfgctl_addr_change <= 1'd0;
		pcie_phy_cfgctl_addr_change2 <= 1'd0;
		pcie_phy_cfgctl_addr_strobe <= 1'd0;
		pcie_phy_captured_cfg_addr_reg <= 4'd0;
		pcie_phy_captured_cfg_data_reg <= 32'd0;
		pcie_phy_tx_n2av_endpoint0_to_valid <= 1'd0;
		pcie_phy_tx_n2av_endpoint0_to_first <= 1'd0;
		pcie_phy_tx_n2av_endpoint0_to_last <= 1'd0;
		pcie_phy_tx_n2av_endpoint0_to_payload_dat <= 64'd0;
		pcie_phy_tx_n2av_endpoint0_to_payload_be <= 8'd0;
		pcie_phy_tx_n2av_endpoint1_to_valid <= 1'd0;
		pcie_phy_tx_n2av_endpoint1_to_first <= 1'd0;
		pcie_phy_tx_n2av_endpoint1_to_last <= 1'd0;
		pcie_phy_tx_n2av_endpoint1_to_payload_dat <= 64'd0;
		pcie_phy_tx_n2av_endpoint1_to_payload_be <= 8'd0;
		pcie_phy_buf_level <= 3'd0;
		pcie_phy_buf_produce <= 2'd0;
		pcie_phy_buf_consume <= 2'd0;
	end
	multiregimpl0_regs0 <= pcie_phy_tx_cdc_graycounter0_q;
	multiregimpl0_regs1 <= multiregimpl0_regs0;
	multiregimpl3_regs0 <= pcie_phy_rx_cdc_graycounter1_q;
	multiregimpl3_regs1 <= multiregimpl3_regs0;
	multiregimpl4_regs0 <= pcie_phy_msi_cdc_graycounter0_q;
	multiregimpl4_regs1 <= multiregimpl4_regs0;
end

always @(posedge sys_clk) begin
	if ((litepciecore_bus_errors != 32'd4294967295)) begin
		if (litepciecore_bus_error) begin
			litepciecore_bus_errors <= (litepciecore_bus_errors + 1'd1);
		end
	end
	litepciecore_sram_bus_ack <= 1'd0;
	if (((litepciecore_sram_bus_cyc & litepciecore_sram_bus_stb) & (~litepciecore_sram_bus_ack))) begin
		litepciecore_sram_bus_ack <= 1'd1;
	end
	litepciecore_interface_we <= 1'd0;
	litepciecore_interface_dat_w <= litepciecore_bus_wishbone_dat_w;
	litepciecore_interface_adr <= litepciecore_bus_wishbone_adr;
	litepciecore_bus_wishbone_dat_r <= litepciecore_interface_dat_r;
	if ((litepciecore_counter == 1'd1)) begin
		litepciecore_interface_we <= litepciecore_bus_wishbone_we;
	end
	if ((litepciecore_counter == 2'd2)) begin
		litepciecore_bus_wishbone_ack <= 1'd1;
	end
	if ((litepciecore_counter == 2'd3)) begin
		litepciecore_bus_wishbone_ack <= 1'd0;
	end
	if ((litepciecore_counter != 1'd0)) begin
		litepciecore_counter <= (litepciecore_counter + 1'd1);
	end else begin
		if ((litepciecore_bus_wishbone_cyc & litepciecore_bus_wishbone_stb)) begin
			litepciecore_counter <= 1'd1;
		end
	end
	if (pcie_phy_tx_buffer_pipe_ce) begin
		pcie_phy_tx_buffer_valid_n <= pcie_phy_tx_buffer_sink_valid;
	end
	if (pcie_phy_tx_buffer_pipe_ce) begin
		pcie_phy_tx_buffer_first_n <= (pcie_phy_tx_buffer_sink_valid & pcie_phy_tx_buffer_sink_first);
		pcie_phy_tx_buffer_last_n <= (pcie_phy_tx_buffer_sink_valid & pcie_phy_tx_buffer_sink_last);
	end
	if (pcie_phy_tx_buffer_pipe_ce) begin
		pcie_phy_tx_buffer_source_payload_dat <= pcie_phy_tx_buffer_sink_payload_dat;
		pcie_phy_tx_buffer_source_payload_be <= pcie_phy_tx_buffer_sink_payload_be;
	end
	pcie_phy_tx_cdc_graycounter0_q_binary <= pcie_phy_tx_cdc_graycounter0_q_next_binary;
	pcie_phy_tx_cdc_graycounter0_q <= pcie_phy_tx_cdc_graycounter0_q_next;
	if (pcie_phy_rx_buffer_pipe_ce) begin
		pcie_phy_rx_buffer_valid_n <= pcie_phy_rx_buffer_sink_valid;
	end
	if (pcie_phy_rx_buffer_pipe_ce) begin
		pcie_phy_rx_buffer_first_n <= (pcie_phy_rx_buffer_sink_valid & pcie_phy_rx_buffer_sink_first);
		pcie_phy_rx_buffer_last_n <= (pcie_phy_rx_buffer_sink_valid & pcie_phy_rx_buffer_sink_last);
	end
	if (pcie_phy_rx_buffer_pipe_ce) begin
		pcie_phy_rx_buffer_source_payload_dat <= pcie_phy_rx_buffer_sink_payload_dat;
		pcie_phy_rx_buffer_source_payload_be <= pcie_phy_rx_buffer_sink_payload_be;
	end
	pcie_phy_rx_cdc_graycounter1_q_binary <= pcie_phy_rx_cdc_graycounter1_q_next_binary;
	pcie_phy_rx_cdc_graycounter1_q <= pcie_phy_rx_cdc_graycounter1_q_next;
	pcie_phy_msi_cdc_graycounter0_q_binary <= pcie_phy_msi_cdc_graycounter0_q_next_binary;
	pcie_phy_msi_cdc_graycounter0_q <= pcie_phy_msi_cdc_graycounter0_q_next;
	if ((pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid & pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready)) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_dat <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat;
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_be <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be;
	end
	subfragments_litepcietlpdepacketizer_state <= subfragments_litepcietlpdepacketizer_next_state;
	if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_first <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0;
	end
	if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_last <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1;
	end
	if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_count_litepcietlpdepacketizer_next_value_ce2) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_count <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_count_litepcietlpdepacketizer_next_value2;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce0) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[31:0] <= subfragments_litepcietlpdepacketizer_next_value0;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce1) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[63:32] <= subfragments_litepcietlpdepacketizer_next_value1;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce2) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[95:64] <= subfragments_litepcietlpdepacketizer_next_value2;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce3) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[127:96] <= subfragments_litepcietlpdepacketizer_next_value3;
	end
	if (pcie_endpoint_litepcietlpdepacketizer_dispatcher_first) begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel_ongoing <= pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0;
	end
	pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing1 <= ((pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid | pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing1) & (~pcie_endpoint_litepcietlpdepacketizer_dispatcher_last));
	if (pcie_endpoint_litepcietlpdepacketizer_dispatcher_last) begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_first <= 1'd1;
	end else begin
		if ((pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid & pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready)) begin
			pcie_endpoint_litepcietlpdepacketizer_dispatcher_first <= 1'd0;
		end
	end
	case (pcie_endpoint_grant)
		1'd0: begin
			if ((~pcie_endpoint_request[0])) begin
				if (pcie_endpoint_request[1]) begin
					pcie_endpoint_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~pcie_endpoint_request[1])) begin
				if (pcie_endpoint_request[0]) begin
					pcie_endpoint_grant <= 1'd0;
				end
			end
		end
	endcase
	pcie_endpoint_status0_ongoing1 <= ((pcie_endpoint_tlp_raw_req_valid | pcie_endpoint_status0_ongoing1) & (~pcie_endpoint_status0_last));
	if (pcie_endpoint_status0_last) begin
		pcie_endpoint_status0_first <= 1'd1;
	end else begin
		if ((pcie_endpoint_tlp_raw_req_valid & pcie_endpoint_tlp_raw_req_ready)) begin
			pcie_endpoint_status0_first <= 1'd0;
		end
	end
	pcie_endpoint_status1_ongoing1 <= ((pcie_endpoint_tlp_raw_cmp_valid | pcie_endpoint_status1_ongoing1) & (~pcie_endpoint_status1_last));
	if (pcie_endpoint_status1_last) begin
		pcie_endpoint_status1_first <= 1'd1;
	end else begin
		if ((pcie_endpoint_tlp_raw_cmp_valid & pcie_endpoint_tlp_raw_cmp_ready)) begin
			pcie_endpoint_status1_first <= 1'd0;
		end
	end
	if ((pcie_endpoint_header_inserter_sink_valid & pcie_endpoint_header_inserter_sink_ready)) begin
		pcie_endpoint_header_inserter_dat <= pcie_endpoint_header_inserter_sink_payload_dat;
		pcie_endpoint_header_inserter_last <= pcie_endpoint_header_inserter_sink_last;
	end
	subfragments_litepcietlppacketizer_state <= subfragments_litepcietlppacketizer_next_state;
	if (subfragments_tags_syncfifo_re0) begin
		subfragments_tags_readable0 <= 1'd1;
	end else begin
		if (subfragments_tags_re0) begin
			subfragments_tags_readable0 <= 1'd0;
		end
	end
	if (((subfragments_tags_syncfifo_we0 & subfragments_tags_syncfifo_writable0) & (~subfragments_tags_replace0))) begin
		subfragments_tags_produce0 <= (subfragments_tags_produce0 + 1'd1);
	end
	if (subfragments_tags_do_read0) begin
		subfragments_tags_consume0 <= (subfragments_tags_consume0 + 1'd1);
	end
	if (((subfragments_tags_syncfifo_we0 & subfragments_tags_syncfifo_writable0) & (~subfragments_tags_replace0))) begin
		if ((~subfragments_tags_do_read0)) begin
			subfragments_tags_level0 <= (subfragments_tags_level0 + 1'd1);
		end
	end else begin
		if (subfragments_tags_do_read0) begin
			subfragments_tags_level0 <= (subfragments_tags_level0 - 1'd1);
		end
	end
	subfragments_fsm0_state0 <= subfragments_fsm0_next_state0;
	if (subfragments_tags_syncfifo_re1) begin
		subfragments_tags_readable1 <= 1'd1;
	end else begin
		if (subfragments_tags_re1) begin
			subfragments_tags_readable1 <= 1'd0;
		end
	end
	if (((subfragments_tags_syncfifo_we1 & subfragments_tags_syncfifo_writable1) & (~subfragments_tags_replace1))) begin
		subfragments_tags_produce1 <= (subfragments_tags_produce1 + 1'd1);
	end
	if (subfragments_tags_do_read1) begin
		subfragments_tags_consume1 <= (subfragments_tags_consume1 + 1'd1);
	end
	if (((subfragments_tags_syncfifo_we1 & subfragments_tags_syncfifo_writable1) & (~subfragments_tags_replace1))) begin
		if ((~subfragments_tags_do_read1)) begin
			subfragments_tags_level2 <= (subfragments_tags_level2 + 1'd1);
		end
	end else begin
		if (subfragments_tags_do_read1) begin
			subfragments_tags_level2 <= (subfragments_tags_level2 - 1'd1);
		end
	end
	if (subfragments_syncfifo0_syncfifo0_re) begin
		subfragments_syncfifo0_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo0_re) begin
			subfragments_syncfifo0_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo0_syncfifo0_we & subfragments_syncfifo0_syncfifo0_writable) & (~subfragments_syncfifo0_replace))) begin
		subfragments_syncfifo0_produce <= (subfragments_syncfifo0_produce + 1'd1);
	end
	if (subfragments_syncfifo0_do_read) begin
		subfragments_syncfifo0_consume <= (subfragments_syncfifo0_consume + 1'd1);
	end
	if (((subfragments_syncfifo0_syncfifo0_we & subfragments_syncfifo0_syncfifo0_writable) & (~subfragments_syncfifo0_replace))) begin
		if ((~subfragments_syncfifo0_do_read)) begin
			subfragments_syncfifo0_level0 <= (subfragments_syncfifo0_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo0_do_read) begin
			subfragments_syncfifo0_level0 <= (subfragments_syncfifo0_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo1_syncfifo1_re) begin
		subfragments_syncfifo1_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo1_re) begin
			subfragments_syncfifo1_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo1_syncfifo1_we & subfragments_syncfifo1_syncfifo1_writable) & (~subfragments_syncfifo1_replace))) begin
		subfragments_syncfifo1_produce <= (subfragments_syncfifo1_produce + 1'd1);
	end
	if (subfragments_syncfifo1_do_read) begin
		subfragments_syncfifo1_consume <= (subfragments_syncfifo1_consume + 1'd1);
	end
	if (((subfragments_syncfifo1_syncfifo1_we & subfragments_syncfifo1_syncfifo1_writable) & (~subfragments_syncfifo1_replace))) begin
		if ((~subfragments_syncfifo1_do_read)) begin
			subfragments_syncfifo1_level0 <= (subfragments_syncfifo1_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo1_do_read) begin
			subfragments_syncfifo1_level0 <= (subfragments_syncfifo1_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo2_syncfifo2_re) begin
		subfragments_syncfifo2_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo2_re) begin
			subfragments_syncfifo2_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo2_syncfifo2_we & subfragments_syncfifo2_syncfifo2_writable) & (~subfragments_syncfifo2_replace))) begin
		subfragments_syncfifo2_produce <= (subfragments_syncfifo2_produce + 1'd1);
	end
	if (subfragments_syncfifo2_do_read) begin
		subfragments_syncfifo2_consume <= (subfragments_syncfifo2_consume + 1'd1);
	end
	if (((subfragments_syncfifo2_syncfifo2_we & subfragments_syncfifo2_syncfifo2_writable) & (~subfragments_syncfifo2_replace))) begin
		if ((~subfragments_syncfifo2_do_read)) begin
			subfragments_syncfifo2_level0 <= (subfragments_syncfifo2_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo2_do_read) begin
			subfragments_syncfifo2_level0 <= (subfragments_syncfifo2_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo3_syncfifo3_re) begin
		subfragments_syncfifo3_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo3_re) begin
			subfragments_syncfifo3_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo3_syncfifo3_we & subfragments_syncfifo3_syncfifo3_writable) & (~subfragments_syncfifo3_replace))) begin
		subfragments_syncfifo3_produce <= (subfragments_syncfifo3_produce + 1'd1);
	end
	if (subfragments_syncfifo3_do_read) begin
		subfragments_syncfifo3_consume <= (subfragments_syncfifo3_consume + 1'd1);
	end
	if (((subfragments_syncfifo3_syncfifo3_we & subfragments_syncfifo3_syncfifo3_writable) & (~subfragments_syncfifo3_replace))) begin
		if ((~subfragments_syncfifo3_do_read)) begin
			subfragments_syncfifo3_level0 <= (subfragments_syncfifo3_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo3_do_read) begin
			subfragments_syncfifo3_level0 <= (subfragments_syncfifo3_level0 - 1'd1);
		end
	end
	subfragments_fsm1_state0 <= subfragments_fsm1_next_state0;
	if (subfragments_tag_init_litepciecrossbar_next_value_ce) begin
		subfragments_tag_init <= subfragments_tag_init_litepciecrossbar_next_value;
	end
	case (subfragments_arbiter0_grant)
		1'd0: begin
			if ((~subfragments_arbiter0_request[0])) begin
				if (subfragments_arbiter0_request[1]) begin
					subfragments_arbiter0_grant <= 1'd1;
				end else begin
					if (subfragments_arbiter0_request[2]) begin
						subfragments_arbiter0_grant <= 2'd2;
					end
				end
			end
		end
		1'd1: begin
			if ((~subfragments_arbiter0_request[1])) begin
				if (subfragments_arbiter0_request[2]) begin
					subfragments_arbiter0_grant <= 2'd2;
				end else begin
					if (subfragments_arbiter0_request[0]) begin
						subfragments_arbiter0_grant <= 1'd0;
					end
				end
			end
		end
		2'd2: begin
			if ((~subfragments_arbiter0_request[2])) begin
				if (subfragments_arbiter0_request[0]) begin
					subfragments_arbiter0_grant <= 1'd0;
				end else begin
					if (subfragments_arbiter0_request[1]) begin
						subfragments_arbiter0_grant <= 1'd1;
					end
				end
			end
		end
	endcase
	subfragments_arbiter0_status0_ongoing1 <= ((litepciedma0_litepciemasterinternalport1_sink_valid | subfragments_arbiter0_status0_ongoing1) & (~subfragments_arbiter0_status0_last));
	if (subfragments_arbiter0_status0_last) begin
		subfragments_arbiter0_status0_first <= 1'd1;
	end else begin
		if ((litepciedma0_litepciemasterinternalport1_sink_valid & litepciedma0_litepciemasterinternalport1_sink_ready)) begin
			subfragments_arbiter0_status0_first <= 1'd0;
		end
	end
	subfragments_arbiter0_status1_ongoing1 <= ((litepciedma1_litepciemasterinternalport3_sink_valid | subfragments_arbiter0_status1_ongoing1) & (~subfragments_arbiter0_status1_last));
	if (subfragments_arbiter0_status1_last) begin
		subfragments_arbiter0_status1_first <= 1'd1;
	end else begin
		if ((litepciedma1_litepciemasterinternalport3_sink_valid & litepciedma1_litepciemasterinternalport3_sink_ready)) begin
			subfragments_arbiter0_status1_first <= 1'd0;
		end
	end
	subfragments_arbiter0_status2_ongoing1 <= ((litepciedma2_litepciemasterinternalport5_sink_valid | subfragments_arbiter0_status2_ongoing1) & (~subfragments_arbiter0_status2_last));
	if (subfragments_arbiter0_status2_last) begin
		subfragments_arbiter0_status2_first <= 1'd1;
	end else begin
		if ((litepciedma2_litepciemasterinternalport5_sink_valid & litepciedma2_litepciemasterinternalport5_sink_ready)) begin
			subfragments_arbiter0_status2_first <= 1'd0;
		end
	end
	if (subfragments_dispatcher0_first) begin
		subfragments_dispatcher0_sel_ongoing <= subfragments_dispatcher0_sel0;
	end
	subfragments_dispatcher0_ongoing1 <= ((subfragments_master_in_source_valid | subfragments_dispatcher0_ongoing1) & (~subfragments_dispatcher0_last));
	if (subfragments_dispatcher0_last) begin
		subfragments_dispatcher0_first <= 1'd1;
	end else begin
		if ((subfragments_master_in_source_valid & subfragments_master_in_source_ready)) begin
			subfragments_dispatcher0_first <= 1'd0;
		end
	end
	case (subfragments_arbiter1_grant)
		1'd0: begin
			if ((~subfragments_arbiter1_request[0])) begin
				if (subfragments_arbiter1_request[1]) begin
					subfragments_arbiter1_grant <= 1'd1;
				end else begin
					if (subfragments_arbiter1_request[2]) begin
						subfragments_arbiter1_grant <= 2'd2;
					end
				end
			end
		end
		1'd1: begin
			if ((~subfragments_arbiter1_request[1])) begin
				if (subfragments_arbiter1_request[2]) begin
					subfragments_arbiter1_grant <= 2'd2;
				end else begin
					if (subfragments_arbiter1_request[0]) begin
						subfragments_arbiter1_grant <= 1'd0;
					end
				end
			end
		end
		2'd2: begin
			if ((~subfragments_arbiter1_request[2])) begin
				if (subfragments_arbiter1_request[0]) begin
					subfragments_arbiter1_grant <= 1'd0;
				end else begin
					if (subfragments_arbiter1_request[1]) begin
						subfragments_arbiter1_grant <= 1'd1;
					end
				end
			end
		end
	endcase
	subfragments_arbiter1_status3_ongoing1 <= ((litepciedma0_litepciemasterinternalport0_sink_valid | subfragments_arbiter1_status3_ongoing1) & (~subfragments_arbiter1_status3_last));
	if (subfragments_arbiter1_status3_last) begin
		subfragments_arbiter1_status3_first <= 1'd1;
	end else begin
		if ((litepciedma0_litepciemasterinternalport0_sink_valid & litepciedma0_litepciemasterinternalport0_sink_ready)) begin
			subfragments_arbiter1_status3_first <= 1'd0;
		end
	end
	subfragments_arbiter1_status4_ongoing1 <= ((litepciedma1_litepciemasterinternalport2_sink_valid | subfragments_arbiter1_status4_ongoing1) & (~subfragments_arbiter1_status4_last));
	if (subfragments_arbiter1_status4_last) begin
		subfragments_arbiter1_status4_first <= 1'd1;
	end else begin
		if ((litepciedma1_litepciemasterinternalport2_sink_valid & litepciedma1_litepciemasterinternalport2_sink_ready)) begin
			subfragments_arbiter1_status4_first <= 1'd0;
		end
	end
	subfragments_arbiter1_status5_ongoing1 <= ((litepciedma2_litepciemasterinternalport4_sink_valid | subfragments_arbiter1_status5_ongoing1) & (~subfragments_arbiter1_status5_last));
	if (subfragments_arbiter1_status5_last) begin
		subfragments_arbiter1_status5_first <= 1'd1;
	end else begin
		if ((litepciedma2_litepciemasterinternalport4_sink_valid & litepciedma2_litepciemasterinternalport4_sink_ready)) begin
			subfragments_arbiter1_status5_first <= 1'd0;
		end
	end
	if (subfragments_dispatcher1_first) begin
		subfragments_dispatcher1_sel_ongoing <= subfragments_dispatcher1_sel0;
	end
	subfragments_dispatcher1_ongoing1 <= ((subfragments_source_valid | subfragments_dispatcher1_ongoing1) & (~subfragments_dispatcher1_last));
	if (subfragments_dispatcher1_last) begin
		subfragments_dispatcher1_first <= 1'd1;
	end else begin
		if ((subfragments_source_valid & subfragments_source_ready)) begin
			subfragments_dispatcher1_first <= 1'd0;
		end
	end
	case (subfragments_arbiter2_grant)
		1'd0: begin
			if ((~subfragments_arbiter2_request[0])) begin
				if (subfragments_arbiter2_request[1]) begin
					subfragments_arbiter2_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~subfragments_arbiter2_request[1])) begin
				if (subfragments_arbiter2_request[0]) begin
					subfragments_arbiter2_grant <= 1'd0;
				end
			end
		end
	endcase
	subfragments_arbiter2_status6_ongoing1 <= ((subfragments_master_out_sink_valid | subfragments_arbiter2_status6_ongoing1) & (~subfragments_arbiter2_status6_last));
	if (subfragments_arbiter2_status6_last) begin
		subfragments_arbiter2_status6_first <= 1'd1;
	end else begin
		if ((subfragments_master_out_sink_valid & subfragments_master_out_sink_ready)) begin
			subfragments_arbiter2_status6_first <= 1'd0;
		end
	end
	subfragments_arbiter2_status7_ongoing1 <= ((subfragments_sink_valid | subfragments_arbiter2_status7_ongoing1) & (~subfragments_arbiter2_status7_last));
	if (subfragments_arbiter2_status7_last) begin
		subfragments_arbiter2_status7_first <= 1'd1;
	end else begin
		if ((subfragments_sink_valid & subfragments_sink_ready)) begin
			subfragments_arbiter2_status7_first <= 1'd0;
		end
	end
	pcie_wishbone_wishbone_sel <= 4'd15;
	pcie_wishbone_wishbone_adr <= (pcie_wishbone_source_payload_adr[31:2] | 1'd0);
	if (1'd1) begin
		if (pcie_wishbone_source_payload_adr[2]) begin
			pcie_wishbone_wishbone_dat_w <= pcie_wishbone_source_payload_dat[31:0];
		end else begin
			pcie_wishbone_wishbone_dat_w <= pcie_wishbone_source_payload_dat[63:32];
		end
	end else begin
		pcie_wishbone_wishbone_dat_w <= pcie_wishbone_source_payload_dat[31:0];
	end
	pcie_wishbone_sink_first <= 1'd1;
	pcie_wishbone_sink_last <= 1'd1;
	pcie_wishbone_sink_payload_len <= 1'd1;
	pcie_wishbone_sink_payload_err <= 1'd0;
	pcie_wishbone_sink_payload_tag <= pcie_wishbone_source_payload_tag;
	pcie_wishbone_sink_payload_adr <= pcie_wishbone_source_payload_adr;
	pcie_wishbone_sink_payload_cmp_id <= pcie_phy_id;
	pcie_wishbone_sink_payload_req_id <= pcie_wishbone_source_payload_req_id;
	if (pcie_wishbone_update_dat) begin
		pcie_wishbone_sink_payload_dat <= pcie_wishbone_wishbone_dat_r;
	end
	subfragments_state <= subfragments_next_state;
	if (litepciedma0_writer_counter_reset) begin
		litepciedma0_writer_counter <= 1'd0;
	end else begin
		if (litepciedma0_writer_counter_ce) begin
			litepciedma0_writer_counter <= (litepciedma0_writer_counter + 1'd1);
		end
	end
	litepciedma0_writer_request_ready <= (litepciedma0_writer_bufferizeendpoints0_source_valid & (litepciedma0_writer_fifo_level1 >= litepciedma0_writer_bufferizeendpoints0_source_payload_length[23:3]));
	if (litepciedma0_writer_fifo_syncfifo0_re) begin
		litepciedma0_writer_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma0_writer_fifo_re) begin
			litepciedma0_writer_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma0_writer_fifo_syncfifo0_we & litepciedma0_writer_fifo_syncfifo0_writable) & (~litepciedma0_writer_fifo_replace))) begin
		litepciedma0_writer_fifo_produce <= (litepciedma0_writer_fifo_produce + 1'd1);
	end
	if (litepciedma0_writer_fifo_do_read) begin
		litepciedma0_writer_fifo_consume <= (litepciedma0_writer_fifo_consume + 1'd1);
	end
	if (((litepciedma0_writer_fifo_syncfifo0_we & litepciedma0_writer_fifo_syncfifo0_writable) & (~litepciedma0_writer_fifo_replace))) begin
		if ((~litepciedma0_writer_fifo_do_read)) begin
			litepciedma0_writer_fifo_level0 <= (litepciedma0_writer_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma0_writer_fifo_do_read) begin
			litepciedma0_writer_fifo_level0 <= (litepciedma0_writer_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma0_writer_resetinserter_reset0) begin
		litepciedma0_writer_fifo_readable <= 1'd0;
		litepciedma0_writer_fifo_level0 <= 9'd0;
		litepciedma0_writer_fifo_produce <= 8'd0;
		litepciedma0_writer_fifo_consume <= 8'd0;
	end
	if (litepciedma0_writer_table_loop_prog_n_storage) begin
		litepciedma0_writer_table_syncfifo0_sink_payload_address <= litepciedma0_writer_table_syncfifo0_source_payload_address;
		litepciedma0_writer_table_syncfifo0_sink_payload_length <= litepciedma0_writer_table_syncfifo0_source_payload_length;
		litepciedma0_writer_table_syncfifo0_sink_payload_control <= litepciedma0_writer_table_syncfifo0_source_payload_control;
		litepciedma0_writer_table_syncfifo0_sink_first <= litepciedma0_writer_table_syncfifo0_source_first;
		litepciedma0_writer_table_syncfifo0_sink_valid <= litepciedma0_writer_table_syncfifo0_source_ready;
	end else begin
		litepciedma0_writer_table_syncfifo0_sink_payload_address <= litepciedma0_writer_table_value_storage[31:0];
		litepciedma0_writer_table_syncfifo0_sink_payload_length <= litepciedma0_writer_table_value_storage[55:32];
		litepciedma0_writer_table_syncfifo0_sink_payload_control <= litepciedma0_writer_table_value_storage[63:56];
		litepciedma0_writer_table_syncfifo0_sink_first <= (~litepciedma0_writer_table_syncfifo0_source_valid);
		litepciedma0_writer_table_syncfifo0_sink_valid <= (litepciedma0_writer_table_we_r & litepciedma0_writer_table_we_re);
	end
	if ((litepciedma0_writer_table_flush_r & litepciedma0_writer_table_flush_re)) begin
		litepciedma0_writer_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma0_writer_table_source_source_valid & litepciedma0_writer_table_source_source_ready)) begin
			litepciedma0_writer_table_loop_status_status <= (litepciedma0_writer_table_loop_status_status + 1'd1);
		end
	end
	if (((litepciedma0_writer_table_syncfifo0_syncfifo0_we & litepciedma0_writer_table_syncfifo0_syncfifo0_writable) & (~litepciedma0_writer_table_syncfifo0_replace))) begin
		litepciedma0_writer_table_syncfifo0_produce <= (litepciedma0_writer_table_syncfifo0_produce + 1'd1);
	end
	if (litepciedma0_writer_table_syncfifo0_do_read) begin
		litepciedma0_writer_table_syncfifo0_consume <= (litepciedma0_writer_table_syncfifo0_consume + 1'd1);
	end
	if (((litepciedma0_writer_table_syncfifo0_syncfifo0_we & litepciedma0_writer_table_syncfifo0_syncfifo0_writable) & (~litepciedma0_writer_table_syncfifo0_replace))) begin
		if ((~litepciedma0_writer_table_syncfifo0_do_read)) begin
			litepciedma0_writer_table_syncfifo0_level <= (litepciedma0_writer_table_syncfifo0_level + 1'd1);
		end
	end else begin
		if (litepciedma0_writer_table_syncfifo0_do_read) begin
			litepciedma0_writer_table_syncfifo0_level <= (litepciedma0_writer_table_syncfifo0_level - 1'd1);
		end
	end
	if (litepciedma0_writer_table_reset) begin
		litepciedma0_writer_table_syncfifo0_level <= 9'd0;
		litepciedma0_writer_table_syncfifo0_produce <= 8'd0;
		litepciedma0_writer_table_syncfifo0_consume <= 8'd0;
	end
	if (litepciedma0_writer_splitter_offset_reset) begin
		litepciedma0_writer_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma0_writer_splitter_offset_ce) begin
			litepciedma0_writer_splitter_offset <= (litepciedma0_writer_splitter_offset + pcie_phy_max_payload_size);
		end
	end
	if (litepciedma0_writer_splitter_user_id_ce) begin
		litepciedma0_writer_splitter_user_id <= (litepciedma0_writer_splitter_user_id + 1'd1);
	end
	if (litepciedma0_writer_splitter_length_update) begin
		litepciedma0_writer_splitter_length <= litepciedma0_writer_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints0_state0 <= subfragments_bufferizeendpoints0_next_state0;
	if (litepciedma0_writer_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_writer_bufferizeendpoints0_valid_n <= litepciedma0_writer_bufferizeendpoints0_sink_valid;
	end
	if (litepciedma0_writer_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_writer_bufferizeendpoints0_first_n <= (litepciedma0_writer_bufferizeendpoints0_sink_valid & litepciedma0_writer_bufferizeendpoints0_sink_first);
		litepciedma0_writer_bufferizeendpoints0_last_n <= (litepciedma0_writer_bufferizeendpoints0_sink_valid & litepciedma0_writer_bufferizeendpoints0_sink_last);
	end
	if (litepciedma0_writer_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_writer_bufferizeendpoints0_source_payload_address <= litepciedma0_writer_bufferizeendpoints0_sink_payload_address;
		litepciedma0_writer_bufferizeendpoints0_source_payload_length <= litepciedma0_writer_bufferizeendpoints0_sink_payload_length;
		litepciedma0_writer_bufferizeendpoints0_source_payload_control <= litepciedma0_writer_bufferizeendpoints0_sink_payload_control;
		litepciedma0_writer_bufferizeendpoints0_source_payload_user_id <= litepciedma0_writer_bufferizeendpoints0_sink_payload_user_id;
	end
	if (litepciedma0_writer_resetinserter_reset1) begin
		litepciedma0_writer_splitter_offset <= 32'd0;
		litepciedma0_writer_splitter_user_id <= 32'd0;
		litepciedma0_writer_splitter_length <= 24'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_address <= 32'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_length <= 24'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_control <= 8'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_user_id <= 8'd0;
		litepciedma0_writer_bufferizeendpoints0_valid_n <= 1'd0;
		litepciedma0_writer_bufferizeendpoints0_first_n <= 1'd0;
		litepciedma0_writer_bufferizeendpoints0_last_n <= 1'd0;
		subfragments_bufferizeendpoints0_state0 <= 2'd0;
	end
	subfragments_fsm0_state1 <= subfragments_fsm0_next_state1;
	if (((litepciedma0_litepciemasterinternalport1_source_valid & litepciedma0_litepciemasterinternalport1_source_first) & litepciedma0_litepciemasterinternalport1_source_ready)) begin
		litepciedma0_reader_last_user_id <= litepciedma0_litepciemasterinternalport1_source_payload_user_id;
	end
	if ((litepciedma0_reader_sCounter_storage != litepciedma0_reader_table_loop_status_status)) begin
		litepciedma0_reader_request_ready <= (litepciedma0_reader_bufferizeendpoints0_source_valid & (litepciedma0_reader_fifo_level1 < 9'd256));
	end else begin
		litepciedma0_reader_request_ready <= 1'd0;
	end
	if (litepciedma0_reader_table_loop_prog_n_storage) begin
		litepciedma0_reader_table_syncfifo0_sink_payload_address <= litepciedma0_reader_table_syncfifo0_source_payload_address;
		litepciedma0_reader_table_syncfifo0_sink_payload_length <= litepciedma0_reader_table_syncfifo0_source_payload_length;
		litepciedma0_reader_table_syncfifo0_sink_payload_control <= litepciedma0_reader_table_syncfifo0_source_payload_control;
		litepciedma0_reader_table_syncfifo0_sink_first <= litepciedma0_reader_table_syncfifo0_source_first;
		litepciedma0_reader_table_syncfifo0_sink_valid <= litepciedma0_reader_table_syncfifo0_source_ready;
	end else begin
		litepciedma0_reader_table_syncfifo0_sink_payload_address <= litepciedma0_reader_table_value_storage[31:0];
		litepciedma0_reader_table_syncfifo0_sink_payload_length <= litepciedma0_reader_table_value_storage[55:32];
		litepciedma0_reader_table_syncfifo0_sink_payload_control <= litepciedma0_reader_table_value_storage[63:56];
		litepciedma0_reader_table_syncfifo0_sink_first <= (~litepciedma0_reader_table_syncfifo0_source_valid);
		litepciedma0_reader_table_syncfifo0_sink_valid <= (litepciedma0_reader_table_we_r & litepciedma0_reader_table_we_re);
	end
	if ((litepciedma0_reader_table_flush_r & litepciedma0_reader_table_flush_re)) begin
		litepciedma0_reader_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma0_reader_table_source_source_valid & litepciedma0_reader_table_source_source_ready)) begin
			litepciedma0_reader_table_loop_status_status <= (litepciedma0_reader_table_loop_status_status + 1'd1);
		end
	end
	if (((litepciedma0_reader_table_syncfifo0_syncfifo0_we & litepciedma0_reader_table_syncfifo0_syncfifo0_writable) & (~litepciedma0_reader_table_syncfifo0_replace))) begin
		litepciedma0_reader_table_syncfifo0_produce <= (litepciedma0_reader_table_syncfifo0_produce + 1'd1);
	end
	if (litepciedma0_reader_table_syncfifo0_do_read) begin
		litepciedma0_reader_table_syncfifo0_consume <= (litepciedma0_reader_table_syncfifo0_consume + 1'd1);
	end
	if (((litepciedma0_reader_table_syncfifo0_syncfifo0_we & litepciedma0_reader_table_syncfifo0_syncfifo0_writable) & (~litepciedma0_reader_table_syncfifo0_replace))) begin
		if ((~litepciedma0_reader_table_syncfifo0_do_read)) begin
			litepciedma0_reader_table_syncfifo0_level <= (litepciedma0_reader_table_syncfifo0_level + 1'd1);
		end
	end else begin
		if (litepciedma0_reader_table_syncfifo0_do_read) begin
			litepciedma0_reader_table_syncfifo0_level <= (litepciedma0_reader_table_syncfifo0_level - 1'd1);
		end
	end
	if (litepciedma0_reader_table_reset) begin
		litepciedma0_reader_table_syncfifo0_level <= 9'd0;
		litepciedma0_reader_table_syncfifo0_produce <= 8'd0;
		litepciedma0_reader_table_syncfifo0_consume <= 8'd0;
	end
	if (litepciedma0_reader_splitter_offset_reset) begin
		litepciedma0_reader_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma0_reader_splitter_offset_ce) begin
			litepciedma0_reader_splitter_offset <= (litepciedma0_reader_splitter_offset + 10'd512);
		end
	end
	if (litepciedma0_reader_splitter_user_id_ce) begin
		litepciedma0_reader_splitter_user_id <= (litepciedma0_reader_splitter_user_id + 1'd1);
	end
	if (litepciedma0_reader_splitter_length_update) begin
		litepciedma0_reader_splitter_length <= litepciedma0_reader_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints0_state1 <= subfragments_bufferizeendpoints0_next_state1;
	if (litepciedma0_reader_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_reader_bufferizeendpoints0_valid_n <= litepciedma0_reader_bufferizeendpoints0_sink_valid;
	end
	if (litepciedma0_reader_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_reader_bufferizeendpoints0_first_n <= (litepciedma0_reader_bufferizeendpoints0_sink_valid & litepciedma0_reader_bufferizeendpoints0_sink_first);
		litepciedma0_reader_bufferizeendpoints0_last_n <= (litepciedma0_reader_bufferizeendpoints0_sink_valid & litepciedma0_reader_bufferizeendpoints0_sink_last);
	end
	if (litepciedma0_reader_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_reader_bufferizeendpoints0_source_payload_address <= litepciedma0_reader_bufferizeendpoints0_sink_payload_address;
		litepciedma0_reader_bufferizeendpoints0_source_payload_length <= litepciedma0_reader_bufferizeendpoints0_sink_payload_length;
		litepciedma0_reader_bufferizeendpoints0_source_payload_control <= litepciedma0_reader_bufferizeendpoints0_sink_payload_control;
		litepciedma0_reader_bufferizeendpoints0_source_payload_user_id <= litepciedma0_reader_bufferizeendpoints0_sink_payload_user_id;
	end
	if (litepciedma0_reader_resetinserter_reset0) begin
		litepciedma0_reader_splitter_offset <= 32'd0;
		litepciedma0_reader_splitter_user_id <= 32'd0;
		litepciedma0_reader_splitter_length <= 24'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_address <= 32'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_length <= 24'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_control <= 8'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_user_id <= 8'd0;
		litepciedma0_reader_bufferizeendpoints0_valid_n <= 1'd0;
		litepciedma0_reader_bufferizeendpoints0_first_n <= 1'd0;
		litepciedma0_reader_bufferizeendpoints0_last_n <= 1'd0;
		subfragments_bufferizeendpoints0_state1 <= 2'd0;
	end
	subfragments_fsm0_state2 <= subfragments_fsm0_next_state2;
	if (litepciedma0_reader_fifo_syncfifo0_re) begin
		litepciedma0_reader_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma0_reader_fifo_re) begin
			litepciedma0_reader_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma0_reader_fifo_syncfifo0_we & litepciedma0_reader_fifo_syncfifo0_writable) & (~litepciedma0_reader_fifo_replace))) begin
		litepciedma0_reader_fifo_produce <= (litepciedma0_reader_fifo_produce + 1'd1);
	end
	if (litepciedma0_reader_fifo_do_read) begin
		litepciedma0_reader_fifo_consume <= (litepciedma0_reader_fifo_consume + 1'd1);
	end
	if (((litepciedma0_reader_fifo_syncfifo0_we & litepciedma0_reader_fifo_syncfifo0_writable) & (~litepciedma0_reader_fifo_replace))) begin
		if ((~litepciedma0_reader_fifo_do_read)) begin
			litepciedma0_reader_fifo_level0 <= (litepciedma0_reader_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma0_reader_fifo_do_read) begin
			litepciedma0_reader_fifo_level0 <= (litepciedma0_reader_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma0_reader_resetinserter_reset1) begin
		litepciedma0_reader_fifo_readable <= 1'd0;
		litepciedma0_reader_fifo_level0 <= 10'd0;
		litepciedma0_reader_fifo_produce <= 9'd0;
		litepciedma0_reader_fifo_consume <= 9'd0;
	end
	if (litepciedma0_tx_fifo_syncfifo0_re) begin
		litepciedma0_tx_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma0_tx_fifo_re) begin
			litepciedma0_tx_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma0_tx_fifo_syncfifo0_we & litepciedma0_tx_fifo_syncfifo0_writable) & (~litepciedma0_tx_fifo_replace))) begin
		litepciedma0_tx_fifo_produce <= (litepciedma0_tx_fifo_produce + 1'd1);
	end
	if (litepciedma0_tx_fifo_do_read) begin
		litepciedma0_tx_fifo_consume <= (litepciedma0_tx_fifo_consume + 1'd1);
	end
	if (((litepciedma0_tx_fifo_syncfifo0_we & litepciedma0_tx_fifo_syncfifo0_writable) & (~litepciedma0_tx_fifo_replace))) begin
		if ((~litepciedma0_tx_fifo_do_read)) begin
			litepciedma0_tx_fifo_level0 <= (litepciedma0_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma0_tx_fifo_do_read) begin
			litepciedma0_tx_fifo_level0 <= (litepciedma0_tx_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma0_rx_fifo_syncfifo0_re) begin
		litepciedma0_rx_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma0_rx_fifo_re) begin
			litepciedma0_rx_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma0_rx_fifo_syncfifo0_we & litepciedma0_rx_fifo_syncfifo0_writable) & (~litepciedma0_rx_fifo_replace))) begin
		litepciedma0_rx_fifo_produce <= (litepciedma0_rx_fifo_produce + 1'd1);
	end
	if (litepciedma0_rx_fifo_do_read) begin
		litepciedma0_rx_fifo_consume <= (litepciedma0_rx_fifo_consume + 1'd1);
	end
	if (((litepciedma0_rx_fifo_syncfifo0_we & litepciedma0_rx_fifo_syncfifo0_writable) & (~litepciedma0_rx_fifo_replace))) begin
		if ((~litepciedma0_rx_fifo_do_read)) begin
			litepciedma0_rx_fifo_level0 <= (litepciedma0_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma0_rx_fifo_do_read) begin
			litepciedma0_rx_fifo_level0 <= (litepciedma0_rx_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma1_writer_counter_reset) begin
		litepciedma1_writer_counter <= 1'd0;
	end else begin
		if (litepciedma1_writer_counter_ce) begin
			litepciedma1_writer_counter <= (litepciedma1_writer_counter + 1'd1);
		end
	end
	litepciedma1_writer_request_ready <= (litepciedma1_writer_bufferizeendpoints1_source_valid & (litepciedma1_writer_fifo_level1 >= litepciedma1_writer_bufferizeendpoints1_source_payload_length[23:3]));
	if (litepciedma1_writer_fifo_syncfifo1_re) begin
		litepciedma1_writer_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma1_writer_fifo_re) begin
			litepciedma1_writer_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma1_writer_fifo_syncfifo1_we & litepciedma1_writer_fifo_syncfifo1_writable) & (~litepciedma1_writer_fifo_replace))) begin
		litepciedma1_writer_fifo_produce <= (litepciedma1_writer_fifo_produce + 1'd1);
	end
	if (litepciedma1_writer_fifo_do_read) begin
		litepciedma1_writer_fifo_consume <= (litepciedma1_writer_fifo_consume + 1'd1);
	end
	if (((litepciedma1_writer_fifo_syncfifo1_we & litepciedma1_writer_fifo_syncfifo1_writable) & (~litepciedma1_writer_fifo_replace))) begin
		if ((~litepciedma1_writer_fifo_do_read)) begin
			litepciedma1_writer_fifo_level0 <= (litepciedma1_writer_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma1_writer_fifo_do_read) begin
			litepciedma1_writer_fifo_level0 <= (litepciedma1_writer_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma1_writer_resetinserter_reset0) begin
		litepciedma1_writer_fifo_readable <= 1'd0;
		litepciedma1_writer_fifo_level0 <= 9'd0;
		litepciedma1_writer_fifo_produce <= 8'd0;
		litepciedma1_writer_fifo_consume <= 8'd0;
	end
	if (litepciedma1_writer_table_loop_prog_n_storage) begin
		litepciedma1_writer_table_syncfifo1_sink_payload_address <= litepciedma1_writer_table_syncfifo1_source_payload_address;
		litepciedma1_writer_table_syncfifo1_sink_payload_length <= litepciedma1_writer_table_syncfifo1_source_payload_length;
		litepciedma1_writer_table_syncfifo1_sink_payload_control <= litepciedma1_writer_table_syncfifo1_source_payload_control;
		litepciedma1_writer_table_syncfifo1_sink_first <= litepciedma1_writer_table_syncfifo1_source_first;
		litepciedma1_writer_table_syncfifo1_sink_valid <= litepciedma1_writer_table_syncfifo1_source_ready;
	end else begin
		litepciedma1_writer_table_syncfifo1_sink_payload_address <= litepciedma1_writer_table_value_storage[31:0];
		litepciedma1_writer_table_syncfifo1_sink_payload_length <= litepciedma1_writer_table_value_storage[55:32];
		litepciedma1_writer_table_syncfifo1_sink_payload_control <= litepciedma1_writer_table_value_storage[63:56];
		litepciedma1_writer_table_syncfifo1_sink_first <= (~litepciedma1_writer_table_syncfifo1_source_valid);
		litepciedma1_writer_table_syncfifo1_sink_valid <= (litepciedma1_writer_table_we_r & litepciedma1_writer_table_we_re);
	end
	if ((litepciedma1_writer_table_flush_r & litepciedma1_writer_table_flush_re)) begin
		litepciedma1_writer_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma1_writer_table_source_source_valid & litepciedma1_writer_table_source_source_ready)) begin
			litepciedma1_writer_table_loop_status_status <= (litepciedma1_writer_table_loop_status_status + 1'd1);
		end
	end
	if (((litepciedma1_writer_table_syncfifo1_syncfifo1_we & litepciedma1_writer_table_syncfifo1_syncfifo1_writable) & (~litepciedma1_writer_table_syncfifo1_replace))) begin
		litepciedma1_writer_table_syncfifo1_produce <= (litepciedma1_writer_table_syncfifo1_produce + 1'd1);
	end
	if (litepciedma1_writer_table_syncfifo1_do_read) begin
		litepciedma1_writer_table_syncfifo1_consume <= (litepciedma1_writer_table_syncfifo1_consume + 1'd1);
	end
	if (((litepciedma1_writer_table_syncfifo1_syncfifo1_we & litepciedma1_writer_table_syncfifo1_syncfifo1_writable) & (~litepciedma1_writer_table_syncfifo1_replace))) begin
		if ((~litepciedma1_writer_table_syncfifo1_do_read)) begin
			litepciedma1_writer_table_syncfifo1_level <= (litepciedma1_writer_table_syncfifo1_level + 1'd1);
		end
	end else begin
		if (litepciedma1_writer_table_syncfifo1_do_read) begin
			litepciedma1_writer_table_syncfifo1_level <= (litepciedma1_writer_table_syncfifo1_level - 1'd1);
		end
	end
	if (litepciedma1_writer_table_reset) begin
		litepciedma1_writer_table_syncfifo1_level <= 9'd0;
		litepciedma1_writer_table_syncfifo1_produce <= 8'd0;
		litepciedma1_writer_table_syncfifo1_consume <= 8'd0;
	end
	if (litepciedma1_writer_splitter_offset_reset) begin
		litepciedma1_writer_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma1_writer_splitter_offset_ce) begin
			litepciedma1_writer_splitter_offset <= (litepciedma1_writer_splitter_offset + pcie_phy_max_payload_size);
		end
	end
	if (litepciedma1_writer_splitter_user_id_ce) begin
		litepciedma1_writer_splitter_user_id <= (litepciedma1_writer_splitter_user_id + 1'd1);
	end
	if (litepciedma1_writer_splitter_length_update) begin
		litepciedma1_writer_splitter_length <= litepciedma1_writer_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints1_state0 <= subfragments_bufferizeendpoints1_next_state0;
	if (litepciedma1_writer_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_writer_bufferizeendpoints1_valid_n <= litepciedma1_writer_bufferizeendpoints1_sink_valid;
	end
	if (litepciedma1_writer_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_writer_bufferizeendpoints1_first_n <= (litepciedma1_writer_bufferizeendpoints1_sink_valid & litepciedma1_writer_bufferizeendpoints1_sink_first);
		litepciedma1_writer_bufferizeendpoints1_last_n <= (litepciedma1_writer_bufferizeendpoints1_sink_valid & litepciedma1_writer_bufferizeendpoints1_sink_last);
	end
	if (litepciedma1_writer_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_writer_bufferizeendpoints1_source_payload_address <= litepciedma1_writer_bufferizeendpoints1_sink_payload_address;
		litepciedma1_writer_bufferizeendpoints1_source_payload_length <= litepciedma1_writer_bufferizeendpoints1_sink_payload_length;
		litepciedma1_writer_bufferizeendpoints1_source_payload_control <= litepciedma1_writer_bufferizeendpoints1_sink_payload_control;
		litepciedma1_writer_bufferizeendpoints1_source_payload_user_id <= litepciedma1_writer_bufferizeendpoints1_sink_payload_user_id;
	end
	if (litepciedma1_writer_resetinserter_reset1) begin
		litepciedma1_writer_splitter_offset <= 32'd0;
		litepciedma1_writer_splitter_user_id <= 32'd0;
		litepciedma1_writer_splitter_length <= 24'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_address <= 32'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_length <= 24'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_control <= 8'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_user_id <= 8'd0;
		litepciedma1_writer_bufferizeendpoints1_valid_n <= 1'd0;
		litepciedma1_writer_bufferizeendpoints1_first_n <= 1'd0;
		litepciedma1_writer_bufferizeendpoints1_last_n <= 1'd0;
		subfragments_bufferizeendpoints1_state0 <= 2'd0;
	end
	subfragments_fsm1_state1 <= subfragments_fsm1_next_state1;
	if (((litepciedma1_litepciemasterinternalport3_source_valid & litepciedma1_litepciemasterinternalport3_source_first) & litepciedma1_litepciemasterinternalport3_source_ready)) begin
		litepciedma1_reader_last_user_id <= litepciedma1_litepciemasterinternalport3_source_payload_user_id;
	end
	if ((litepciedma1_reader_sCounter_storage != litepciedma1_reader_table_loop_status_status)) begin
		litepciedma1_reader_request_ready <= (litepciedma1_reader_bufferizeendpoints1_source_valid & (litepciedma1_reader_fifo_level1 < 9'd256));
	end else begin
		litepciedma1_reader_request_ready <= 1'd0;
	end
	if (litepciedma1_reader_table_loop_prog_n_storage) begin
		litepciedma1_reader_table_syncfifo1_sink_payload_address <= litepciedma1_reader_table_syncfifo1_source_payload_address;
		litepciedma1_reader_table_syncfifo1_sink_payload_length <= litepciedma1_reader_table_syncfifo1_source_payload_length;
		litepciedma1_reader_table_syncfifo1_sink_payload_control <= litepciedma1_reader_table_syncfifo1_source_payload_control;
		litepciedma1_reader_table_syncfifo1_sink_first <= litepciedma1_reader_table_syncfifo1_source_first;
		litepciedma1_reader_table_syncfifo1_sink_valid <= litepciedma1_reader_table_syncfifo1_source_ready;
	end else begin
		litepciedma1_reader_table_syncfifo1_sink_payload_address <= litepciedma1_reader_table_value_storage[31:0];
		litepciedma1_reader_table_syncfifo1_sink_payload_length <= litepciedma1_reader_table_value_storage[55:32];
		litepciedma1_reader_table_syncfifo1_sink_payload_control <= litepciedma1_reader_table_value_storage[63:56];
		litepciedma1_reader_table_syncfifo1_sink_first <= (~litepciedma1_reader_table_syncfifo1_source_valid);
		litepciedma1_reader_table_syncfifo1_sink_valid <= (litepciedma1_reader_table_we_r & litepciedma1_reader_table_we_re);
	end
	if ((litepciedma1_reader_table_flush_r & litepciedma1_reader_table_flush_re)) begin
		litepciedma1_reader_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma1_reader_table_source_source_valid & litepciedma1_reader_table_source_source_ready)) begin
			litepciedma1_reader_table_loop_status_status <= (litepciedma1_reader_table_loop_status_status + 1'd1);
		end
	end
	if (((litepciedma1_reader_table_syncfifo1_syncfifo1_we & litepciedma1_reader_table_syncfifo1_syncfifo1_writable) & (~litepciedma1_reader_table_syncfifo1_replace))) begin
		litepciedma1_reader_table_syncfifo1_produce <= (litepciedma1_reader_table_syncfifo1_produce + 1'd1);
	end
	if (litepciedma1_reader_table_syncfifo1_do_read) begin
		litepciedma1_reader_table_syncfifo1_consume <= (litepciedma1_reader_table_syncfifo1_consume + 1'd1);
	end
	if (((litepciedma1_reader_table_syncfifo1_syncfifo1_we & litepciedma1_reader_table_syncfifo1_syncfifo1_writable) & (~litepciedma1_reader_table_syncfifo1_replace))) begin
		if ((~litepciedma1_reader_table_syncfifo1_do_read)) begin
			litepciedma1_reader_table_syncfifo1_level <= (litepciedma1_reader_table_syncfifo1_level + 1'd1);
		end
	end else begin
		if (litepciedma1_reader_table_syncfifo1_do_read) begin
			litepciedma1_reader_table_syncfifo1_level <= (litepciedma1_reader_table_syncfifo1_level - 1'd1);
		end
	end
	if (litepciedma1_reader_table_reset) begin
		litepciedma1_reader_table_syncfifo1_level <= 9'd0;
		litepciedma1_reader_table_syncfifo1_produce <= 8'd0;
		litepciedma1_reader_table_syncfifo1_consume <= 8'd0;
	end
	if (litepciedma1_reader_splitter_offset_reset) begin
		litepciedma1_reader_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma1_reader_splitter_offset_ce) begin
			litepciedma1_reader_splitter_offset <= (litepciedma1_reader_splitter_offset + 10'd512);
		end
	end
	if (litepciedma1_reader_splitter_user_id_ce) begin
		litepciedma1_reader_splitter_user_id <= (litepciedma1_reader_splitter_user_id + 1'd1);
	end
	if (litepciedma1_reader_splitter_length_update) begin
		litepciedma1_reader_splitter_length <= litepciedma1_reader_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints1_state1 <= subfragments_bufferizeendpoints1_next_state1;
	if (litepciedma1_reader_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_reader_bufferizeendpoints1_valid_n <= litepciedma1_reader_bufferizeendpoints1_sink_valid;
	end
	if (litepciedma1_reader_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_reader_bufferizeendpoints1_first_n <= (litepciedma1_reader_bufferizeendpoints1_sink_valid & litepciedma1_reader_bufferizeendpoints1_sink_first);
		litepciedma1_reader_bufferizeendpoints1_last_n <= (litepciedma1_reader_bufferizeendpoints1_sink_valid & litepciedma1_reader_bufferizeendpoints1_sink_last);
	end
	if (litepciedma1_reader_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_reader_bufferizeendpoints1_source_payload_address <= litepciedma1_reader_bufferizeendpoints1_sink_payload_address;
		litepciedma1_reader_bufferizeendpoints1_source_payload_length <= litepciedma1_reader_bufferizeendpoints1_sink_payload_length;
		litepciedma1_reader_bufferizeendpoints1_source_payload_control <= litepciedma1_reader_bufferizeendpoints1_sink_payload_control;
		litepciedma1_reader_bufferizeendpoints1_source_payload_user_id <= litepciedma1_reader_bufferizeendpoints1_sink_payload_user_id;
	end
	if (litepciedma1_reader_resetinserter_reset0) begin
		litepciedma1_reader_splitter_offset <= 32'd0;
		litepciedma1_reader_splitter_user_id <= 32'd0;
		litepciedma1_reader_splitter_length <= 24'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_address <= 32'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_length <= 24'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_control <= 8'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_user_id <= 8'd0;
		litepciedma1_reader_bufferizeendpoints1_valid_n <= 1'd0;
		litepciedma1_reader_bufferizeendpoints1_first_n <= 1'd0;
		litepciedma1_reader_bufferizeendpoints1_last_n <= 1'd0;
		subfragments_bufferizeendpoints1_state1 <= 2'd0;
	end
	subfragments_fsm1_state2 <= subfragments_fsm1_next_state2;
	if (litepciedma1_reader_fifo_syncfifo1_re) begin
		litepciedma1_reader_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma1_reader_fifo_re) begin
			litepciedma1_reader_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma1_reader_fifo_syncfifo1_we & litepciedma1_reader_fifo_syncfifo1_writable) & (~litepciedma1_reader_fifo_replace))) begin
		litepciedma1_reader_fifo_produce <= (litepciedma1_reader_fifo_produce + 1'd1);
	end
	if (litepciedma1_reader_fifo_do_read) begin
		litepciedma1_reader_fifo_consume <= (litepciedma1_reader_fifo_consume + 1'd1);
	end
	if (((litepciedma1_reader_fifo_syncfifo1_we & litepciedma1_reader_fifo_syncfifo1_writable) & (~litepciedma1_reader_fifo_replace))) begin
		if ((~litepciedma1_reader_fifo_do_read)) begin
			litepciedma1_reader_fifo_level0 <= (litepciedma1_reader_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma1_reader_fifo_do_read) begin
			litepciedma1_reader_fifo_level0 <= (litepciedma1_reader_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma1_reader_resetinserter_reset1) begin
		litepciedma1_reader_fifo_readable <= 1'd0;
		litepciedma1_reader_fifo_level0 <= 10'd0;
		litepciedma1_reader_fifo_produce <= 9'd0;
		litepciedma1_reader_fifo_consume <= 9'd0;
	end
	if (litepciedma1_tx_fifo_syncfifo1_re) begin
		litepciedma1_tx_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma1_tx_fifo_re) begin
			litepciedma1_tx_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma1_tx_fifo_syncfifo1_we & litepciedma1_tx_fifo_syncfifo1_writable) & (~litepciedma1_tx_fifo_replace))) begin
		litepciedma1_tx_fifo_produce <= (litepciedma1_tx_fifo_produce + 1'd1);
	end
	if (litepciedma1_tx_fifo_do_read) begin
		litepciedma1_tx_fifo_consume <= (litepciedma1_tx_fifo_consume + 1'd1);
	end
	if (((litepciedma1_tx_fifo_syncfifo1_we & litepciedma1_tx_fifo_syncfifo1_writable) & (~litepciedma1_tx_fifo_replace))) begin
		if ((~litepciedma1_tx_fifo_do_read)) begin
			litepciedma1_tx_fifo_level0 <= (litepciedma1_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma1_tx_fifo_do_read) begin
			litepciedma1_tx_fifo_level0 <= (litepciedma1_tx_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma1_rx_fifo_syncfifo1_re) begin
		litepciedma1_rx_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma1_rx_fifo_re) begin
			litepciedma1_rx_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma1_rx_fifo_syncfifo1_we & litepciedma1_rx_fifo_syncfifo1_writable) & (~litepciedma1_rx_fifo_replace))) begin
		litepciedma1_rx_fifo_produce <= (litepciedma1_rx_fifo_produce + 1'd1);
	end
	if (litepciedma1_rx_fifo_do_read) begin
		litepciedma1_rx_fifo_consume <= (litepciedma1_rx_fifo_consume + 1'd1);
	end
	if (((litepciedma1_rx_fifo_syncfifo1_we & litepciedma1_rx_fifo_syncfifo1_writable) & (~litepciedma1_rx_fifo_replace))) begin
		if ((~litepciedma1_rx_fifo_do_read)) begin
			litepciedma1_rx_fifo_level0 <= (litepciedma1_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma1_rx_fifo_do_read) begin
			litepciedma1_rx_fifo_level0 <= (litepciedma1_rx_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma2_writer_counter_reset) begin
		litepciedma2_writer_counter <= 1'd0;
	end else begin
		if (litepciedma2_writer_counter_ce) begin
			litepciedma2_writer_counter <= (litepciedma2_writer_counter + 1'd1);
		end
	end
	litepciedma2_writer_request_ready <= (litepciedma2_writer_bufferizeendpoints2_source_valid & (litepciedma2_writer_fifo_level1 >= litepciedma2_writer_bufferizeendpoints2_source_payload_length[23:3]));
	if (litepciedma2_writer_fifo_syncfifo2_re) begin
		litepciedma2_writer_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma2_writer_fifo_re) begin
			litepciedma2_writer_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma2_writer_fifo_syncfifo2_we & litepciedma2_writer_fifo_syncfifo2_writable) & (~litepciedma2_writer_fifo_replace))) begin
		litepciedma2_writer_fifo_produce <= (litepciedma2_writer_fifo_produce + 1'd1);
	end
	if (litepciedma2_writer_fifo_do_read) begin
		litepciedma2_writer_fifo_consume <= (litepciedma2_writer_fifo_consume + 1'd1);
	end
	if (((litepciedma2_writer_fifo_syncfifo2_we & litepciedma2_writer_fifo_syncfifo2_writable) & (~litepciedma2_writer_fifo_replace))) begin
		if ((~litepciedma2_writer_fifo_do_read)) begin
			litepciedma2_writer_fifo_level0 <= (litepciedma2_writer_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma2_writer_fifo_do_read) begin
			litepciedma2_writer_fifo_level0 <= (litepciedma2_writer_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma2_writer_resetinserter_reset0) begin
		litepciedma2_writer_fifo_readable <= 1'd0;
		litepciedma2_writer_fifo_level0 <= 9'd0;
		litepciedma2_writer_fifo_produce <= 8'd0;
		litepciedma2_writer_fifo_consume <= 8'd0;
	end
	if (litepciedma2_writer_table_loop_prog_n_storage) begin
		litepciedma2_writer_table_syncfifo2_sink_payload_address <= litepciedma2_writer_table_syncfifo2_source_payload_address;
		litepciedma2_writer_table_syncfifo2_sink_payload_length <= litepciedma2_writer_table_syncfifo2_source_payload_length;
		litepciedma2_writer_table_syncfifo2_sink_payload_control <= litepciedma2_writer_table_syncfifo2_source_payload_control;
		litepciedma2_writer_table_syncfifo2_sink_first <= litepciedma2_writer_table_syncfifo2_source_first;
		litepciedma2_writer_table_syncfifo2_sink_valid <= litepciedma2_writer_table_syncfifo2_source_ready;
	end else begin
		litepciedma2_writer_table_syncfifo2_sink_payload_address <= litepciedma2_writer_table_value_storage[31:0];
		litepciedma2_writer_table_syncfifo2_sink_payload_length <= litepciedma2_writer_table_value_storage[55:32];
		litepciedma2_writer_table_syncfifo2_sink_payload_control <= litepciedma2_writer_table_value_storage[63:56];
		litepciedma2_writer_table_syncfifo2_sink_first <= (~litepciedma2_writer_table_syncfifo2_source_valid);
		litepciedma2_writer_table_syncfifo2_sink_valid <= (litepciedma2_writer_table_we_r & litepciedma2_writer_table_we_re);
	end
	if ((litepciedma2_writer_table_flush_r & litepciedma2_writer_table_flush_re)) begin
		litepciedma2_writer_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma2_writer_table_source_source_valid & litepciedma2_writer_table_source_source_ready)) begin
			litepciedma2_writer_table_loop_status_status <= (litepciedma2_writer_table_loop_status_status + 1'd1);
		end
	end
	if (((litepciedma2_writer_table_syncfifo2_syncfifo2_we & litepciedma2_writer_table_syncfifo2_syncfifo2_writable) & (~litepciedma2_writer_table_syncfifo2_replace))) begin
		litepciedma2_writer_table_syncfifo2_produce <= (litepciedma2_writer_table_syncfifo2_produce + 1'd1);
	end
	if (litepciedma2_writer_table_syncfifo2_do_read) begin
		litepciedma2_writer_table_syncfifo2_consume <= (litepciedma2_writer_table_syncfifo2_consume + 1'd1);
	end
	if (((litepciedma2_writer_table_syncfifo2_syncfifo2_we & litepciedma2_writer_table_syncfifo2_syncfifo2_writable) & (~litepciedma2_writer_table_syncfifo2_replace))) begin
		if ((~litepciedma2_writer_table_syncfifo2_do_read)) begin
			litepciedma2_writer_table_syncfifo2_level <= (litepciedma2_writer_table_syncfifo2_level + 1'd1);
		end
	end else begin
		if (litepciedma2_writer_table_syncfifo2_do_read) begin
			litepciedma2_writer_table_syncfifo2_level <= (litepciedma2_writer_table_syncfifo2_level - 1'd1);
		end
	end
	if (litepciedma2_writer_table_reset) begin
		litepciedma2_writer_table_syncfifo2_level <= 9'd0;
		litepciedma2_writer_table_syncfifo2_produce <= 8'd0;
		litepciedma2_writer_table_syncfifo2_consume <= 8'd0;
	end
	if (litepciedma2_writer_splitter_offset_reset) begin
		litepciedma2_writer_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma2_writer_splitter_offset_ce) begin
			litepciedma2_writer_splitter_offset <= (litepciedma2_writer_splitter_offset + pcie_phy_max_payload_size);
		end
	end
	if (litepciedma2_writer_splitter_user_id_ce) begin
		litepciedma2_writer_splitter_user_id <= (litepciedma2_writer_splitter_user_id + 1'd1);
	end
	if (litepciedma2_writer_splitter_length_update) begin
		litepciedma2_writer_splitter_length <= litepciedma2_writer_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints2_state0 <= subfragments_bufferizeendpoints2_next_state0;
	if (litepciedma2_writer_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_writer_bufferizeendpoints2_valid_n <= litepciedma2_writer_bufferizeendpoints2_sink_valid;
	end
	if (litepciedma2_writer_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_writer_bufferizeendpoints2_first_n <= (litepciedma2_writer_bufferizeendpoints2_sink_valid & litepciedma2_writer_bufferizeendpoints2_sink_first);
		litepciedma2_writer_bufferizeendpoints2_last_n <= (litepciedma2_writer_bufferizeendpoints2_sink_valid & litepciedma2_writer_bufferizeendpoints2_sink_last);
	end
	if (litepciedma2_writer_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_writer_bufferizeendpoints2_source_payload_address <= litepciedma2_writer_bufferizeendpoints2_sink_payload_address;
		litepciedma2_writer_bufferizeendpoints2_source_payload_length <= litepciedma2_writer_bufferizeendpoints2_sink_payload_length;
		litepciedma2_writer_bufferizeendpoints2_source_payload_control <= litepciedma2_writer_bufferizeendpoints2_sink_payload_control;
		litepciedma2_writer_bufferizeendpoints2_source_payload_user_id <= litepciedma2_writer_bufferizeendpoints2_sink_payload_user_id;
	end
	if (litepciedma2_writer_resetinserter_reset1) begin
		litepciedma2_writer_splitter_offset <= 32'd0;
		litepciedma2_writer_splitter_user_id <= 32'd0;
		litepciedma2_writer_splitter_length <= 24'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_address <= 32'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_length <= 24'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_control <= 8'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_user_id <= 8'd0;
		litepciedma2_writer_bufferizeendpoints2_valid_n <= 1'd0;
		litepciedma2_writer_bufferizeendpoints2_first_n <= 1'd0;
		litepciedma2_writer_bufferizeendpoints2_last_n <= 1'd0;
		subfragments_bufferizeendpoints2_state0 <= 2'd0;
	end
	subfragments_fsm2_state0 <= subfragments_fsm2_next_state0;
	if (((litepciedma2_litepciemasterinternalport5_source_valid & litepciedma2_litepciemasterinternalport5_source_first) & litepciedma2_litepciemasterinternalport5_source_ready)) begin
		litepciedma2_reader_last_user_id <= litepciedma2_litepciemasterinternalport5_source_payload_user_id;
	end
	if ((litepciedma2_reader_sCounter_storage != litepciedma2_reader_table_loop_status_status)) begin
		litepciedma2_reader_request_ready <= (litepciedma2_reader_bufferizeendpoints2_source_valid & (litepciedma2_reader_fifo_level1 < 9'd256));
	end else begin
		litepciedma2_reader_request_ready <= 1'd0;
	end
	if (litepciedma2_reader_table_loop_prog_n_storage) begin
		litepciedma2_reader_table_syncfifo2_sink_payload_address <= litepciedma2_reader_table_syncfifo2_source_payload_address;
		litepciedma2_reader_table_syncfifo2_sink_payload_length <= litepciedma2_reader_table_syncfifo2_source_payload_length;
		litepciedma2_reader_table_syncfifo2_sink_payload_control <= litepciedma2_reader_table_syncfifo2_source_payload_control;
		litepciedma2_reader_table_syncfifo2_sink_first <= litepciedma2_reader_table_syncfifo2_source_first;
		litepciedma2_reader_table_syncfifo2_sink_valid <= litepciedma2_reader_table_syncfifo2_source_ready;
	end else begin
		litepciedma2_reader_table_syncfifo2_sink_payload_address <= litepciedma2_reader_table_value_storage[31:0];
		litepciedma2_reader_table_syncfifo2_sink_payload_length <= litepciedma2_reader_table_value_storage[55:32];
		litepciedma2_reader_table_syncfifo2_sink_payload_control <= litepciedma2_reader_table_value_storage[63:56];
		litepciedma2_reader_table_syncfifo2_sink_first <= (~litepciedma2_reader_table_syncfifo2_source_valid);
		litepciedma2_reader_table_syncfifo2_sink_valid <= (litepciedma2_reader_table_we_r & litepciedma2_reader_table_we_re);
	end
	if ((litepciedma2_reader_table_flush_r & litepciedma2_reader_table_flush_re)) begin
		litepciedma2_reader_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma2_reader_table_source_source_valid & litepciedma2_reader_table_source_source_ready)) begin
			litepciedma2_reader_table_loop_status_status <= (litepciedma2_reader_table_loop_status_status + 1'd1);
		end
	end
	if (((litepciedma2_reader_table_syncfifo2_syncfifo2_we & litepciedma2_reader_table_syncfifo2_syncfifo2_writable) & (~litepciedma2_reader_table_syncfifo2_replace))) begin
		litepciedma2_reader_table_syncfifo2_produce <= (litepciedma2_reader_table_syncfifo2_produce + 1'd1);
	end
	if (litepciedma2_reader_table_syncfifo2_do_read) begin
		litepciedma2_reader_table_syncfifo2_consume <= (litepciedma2_reader_table_syncfifo2_consume + 1'd1);
	end
	if (((litepciedma2_reader_table_syncfifo2_syncfifo2_we & litepciedma2_reader_table_syncfifo2_syncfifo2_writable) & (~litepciedma2_reader_table_syncfifo2_replace))) begin
		if ((~litepciedma2_reader_table_syncfifo2_do_read)) begin
			litepciedma2_reader_table_syncfifo2_level <= (litepciedma2_reader_table_syncfifo2_level + 1'd1);
		end
	end else begin
		if (litepciedma2_reader_table_syncfifo2_do_read) begin
			litepciedma2_reader_table_syncfifo2_level <= (litepciedma2_reader_table_syncfifo2_level - 1'd1);
		end
	end
	if (litepciedma2_reader_table_reset) begin
		litepciedma2_reader_table_syncfifo2_level <= 9'd0;
		litepciedma2_reader_table_syncfifo2_produce <= 8'd0;
		litepciedma2_reader_table_syncfifo2_consume <= 8'd0;
	end
	if (litepciedma2_reader_splitter_offset_reset) begin
		litepciedma2_reader_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma2_reader_splitter_offset_ce) begin
			litepciedma2_reader_splitter_offset <= (litepciedma2_reader_splitter_offset + 10'd512);
		end
	end
	if (litepciedma2_reader_splitter_user_id_ce) begin
		litepciedma2_reader_splitter_user_id <= (litepciedma2_reader_splitter_user_id + 1'd1);
	end
	if (litepciedma2_reader_splitter_length_update) begin
		litepciedma2_reader_splitter_length <= litepciedma2_reader_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints2_state1 <= subfragments_bufferizeendpoints2_next_state1;
	if (litepciedma2_reader_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_reader_bufferizeendpoints2_valid_n <= litepciedma2_reader_bufferizeendpoints2_sink_valid;
	end
	if (litepciedma2_reader_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_reader_bufferizeendpoints2_first_n <= (litepciedma2_reader_bufferizeendpoints2_sink_valid & litepciedma2_reader_bufferizeendpoints2_sink_first);
		litepciedma2_reader_bufferizeendpoints2_last_n <= (litepciedma2_reader_bufferizeendpoints2_sink_valid & litepciedma2_reader_bufferizeendpoints2_sink_last);
	end
	if (litepciedma2_reader_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_reader_bufferizeendpoints2_source_payload_address <= litepciedma2_reader_bufferizeendpoints2_sink_payload_address;
		litepciedma2_reader_bufferizeendpoints2_source_payload_length <= litepciedma2_reader_bufferizeendpoints2_sink_payload_length;
		litepciedma2_reader_bufferizeendpoints2_source_payload_control <= litepciedma2_reader_bufferizeendpoints2_sink_payload_control;
		litepciedma2_reader_bufferizeendpoints2_source_payload_user_id <= litepciedma2_reader_bufferizeendpoints2_sink_payload_user_id;
	end
	if (litepciedma2_reader_resetinserter_reset0) begin
		litepciedma2_reader_splitter_offset <= 32'd0;
		litepciedma2_reader_splitter_user_id <= 32'd0;
		litepciedma2_reader_splitter_length <= 24'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_address <= 32'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_length <= 24'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_control <= 8'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_user_id <= 8'd0;
		litepciedma2_reader_bufferizeendpoints2_valid_n <= 1'd0;
		litepciedma2_reader_bufferizeendpoints2_first_n <= 1'd0;
		litepciedma2_reader_bufferizeendpoints2_last_n <= 1'd0;
		subfragments_bufferizeendpoints2_state1 <= 2'd0;
	end
	subfragments_fsm2_state1 <= subfragments_fsm2_next_state1;
	if (litepciedma2_reader_fifo_syncfifo2_re) begin
		litepciedma2_reader_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma2_reader_fifo_re) begin
			litepciedma2_reader_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma2_reader_fifo_syncfifo2_we & litepciedma2_reader_fifo_syncfifo2_writable) & (~litepciedma2_reader_fifo_replace))) begin
		litepciedma2_reader_fifo_produce <= (litepciedma2_reader_fifo_produce + 1'd1);
	end
	if (litepciedma2_reader_fifo_do_read) begin
		litepciedma2_reader_fifo_consume <= (litepciedma2_reader_fifo_consume + 1'd1);
	end
	if (((litepciedma2_reader_fifo_syncfifo2_we & litepciedma2_reader_fifo_syncfifo2_writable) & (~litepciedma2_reader_fifo_replace))) begin
		if ((~litepciedma2_reader_fifo_do_read)) begin
			litepciedma2_reader_fifo_level0 <= (litepciedma2_reader_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma2_reader_fifo_do_read) begin
			litepciedma2_reader_fifo_level0 <= (litepciedma2_reader_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma2_reader_resetinserter_reset1) begin
		litepciedma2_reader_fifo_readable <= 1'd0;
		litepciedma2_reader_fifo_level0 <= 10'd0;
		litepciedma2_reader_fifo_produce <= 9'd0;
		litepciedma2_reader_fifo_consume <= 9'd0;
	end
	if (litepciedma2_tx_fifo_syncfifo2_re) begin
		litepciedma2_tx_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma2_tx_fifo_re) begin
			litepciedma2_tx_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma2_tx_fifo_syncfifo2_we & litepciedma2_tx_fifo_syncfifo2_writable) & (~litepciedma2_tx_fifo_replace))) begin
		litepciedma2_tx_fifo_produce <= (litepciedma2_tx_fifo_produce + 1'd1);
	end
	if (litepciedma2_tx_fifo_do_read) begin
		litepciedma2_tx_fifo_consume <= (litepciedma2_tx_fifo_consume + 1'd1);
	end
	if (((litepciedma2_tx_fifo_syncfifo2_we & litepciedma2_tx_fifo_syncfifo2_writable) & (~litepciedma2_tx_fifo_replace))) begin
		if ((~litepciedma2_tx_fifo_do_read)) begin
			litepciedma2_tx_fifo_level0 <= (litepciedma2_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma2_tx_fifo_do_read) begin
			litepciedma2_tx_fifo_level0 <= (litepciedma2_tx_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma2_rx_fifo_syncfifo2_re) begin
		litepciedma2_rx_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma2_rx_fifo_re) begin
			litepciedma2_rx_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma2_rx_fifo_syncfifo2_we & litepciedma2_rx_fifo_syncfifo2_writable) & (~litepciedma2_rx_fifo_replace))) begin
		litepciedma2_rx_fifo_produce <= (litepciedma2_rx_fifo_produce + 1'd1);
	end
	if (litepciedma2_rx_fifo_do_read) begin
		litepciedma2_rx_fifo_consume <= (litepciedma2_rx_fifo_consume + 1'd1);
	end
	if (((litepciedma2_rx_fifo_syncfifo2_we & litepciedma2_rx_fifo_syncfifo2_writable) & (~litepciedma2_rx_fifo_replace))) begin
		if ((~litepciedma2_rx_fifo_do_read)) begin
			litepciedma2_rx_fifo_level0 <= (litepciedma2_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma2_rx_fifo_do_read) begin
			litepciedma2_rx_fifo_level0 <= (litepciedma2_rx_fifo_level0 - 1'd1);
		end
	end
	pcie_msi_status <= ((~pcie_msi_clear) & (pcie_msi_status | pcie_msi_irqs));
	pcie_msi_vector_d <= pcie_msi_status;
	if (((~pcie_msi_transmit_request) | (pcie_msi_status != pcie_msi_vector_d))) begin
		pcie_msi_transmit_counter <= 1'd0;
	end else begin
		pcie_msi_transmit_counter <= (pcie_msi_transmit_counter + 1'd1);
	end
	litepciecore_slave_sel_r <= litepciecore_slave_sel;
	if (litepciecore_wait) begin
		if ((~litepciecore_done)) begin
			litepciecore_count <= (litepciecore_count - 1'd1);
		end
	end else begin
		litepciecore_count <= 20'd1000000;
	end
	litepciecore_interface0_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank0_sel) begin
		case (litepciecore_interface0_bank_bus_adr[4:0])
			1'd0: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl15_w;
			end
			1'd1: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl14_w;
			end
			2'd2: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl13_w;
			end
			2'd3: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl12_w;
			end
			3'd4: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl11_w;
			end
			3'd5: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl10_w;
			end
			3'd6: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl9_w;
			end
			3'd7: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl8_w;
			end
			4'd8: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl7_w;
			end
			4'd9: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl6_w;
			end
			4'd10: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl5_w;
			end
			4'd11: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl4_w;
			end
			4'd12: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl3_w;
			end
			4'd13: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl2_w;
			end
			4'd14: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl1_w;
			end
			4'd15: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl0_w;
			end
			5'd16: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_enable0_w;
			end
		endcase
	end
	if (cntrl_we) begin
		cntrl_storage_full <= (cntrl_dat_w <<< 1'd0);
	end
	if (litepciecore_csrbank0_cntrl15_re) begin
		cntrl_storage_full[511:480] <= litepciecore_csrbank0_cntrl15_r;
	end
	if (litepciecore_csrbank0_cntrl14_re) begin
		cntrl_storage_full[479:448] <= litepciecore_csrbank0_cntrl14_r;
	end
	if (litepciecore_csrbank0_cntrl13_re) begin
		cntrl_storage_full[447:416] <= litepciecore_csrbank0_cntrl13_r;
	end
	if (litepciecore_csrbank0_cntrl12_re) begin
		cntrl_storage_full[415:384] <= litepciecore_csrbank0_cntrl12_r;
	end
	if (litepciecore_csrbank0_cntrl11_re) begin
		cntrl_storage_full[383:352] <= litepciecore_csrbank0_cntrl11_r;
	end
	if (litepciecore_csrbank0_cntrl10_re) begin
		cntrl_storage_full[351:320] <= litepciecore_csrbank0_cntrl10_r;
	end
	if (litepciecore_csrbank0_cntrl9_re) begin
		cntrl_storage_full[319:288] <= litepciecore_csrbank0_cntrl9_r;
	end
	if (litepciecore_csrbank0_cntrl8_re) begin
		cntrl_storage_full[287:256] <= litepciecore_csrbank0_cntrl8_r;
	end
	if (litepciecore_csrbank0_cntrl7_re) begin
		cntrl_storage_full[255:224] <= litepciecore_csrbank0_cntrl7_r;
	end
	if (litepciecore_csrbank0_cntrl6_re) begin
		cntrl_storage_full[223:192] <= litepciecore_csrbank0_cntrl6_r;
	end
	if (litepciecore_csrbank0_cntrl5_re) begin
		cntrl_storage_full[191:160] <= litepciecore_csrbank0_cntrl5_r;
	end
	if (litepciecore_csrbank0_cntrl4_re) begin
		cntrl_storage_full[159:128] <= litepciecore_csrbank0_cntrl4_r;
	end
	if (litepciecore_csrbank0_cntrl3_re) begin
		cntrl_storage_full[127:96] <= litepciecore_csrbank0_cntrl3_r;
	end
	if (litepciecore_csrbank0_cntrl2_re) begin
		cntrl_storage_full[95:64] <= litepciecore_csrbank0_cntrl2_r;
	end
	if (litepciecore_csrbank0_cntrl1_re) begin
		cntrl_storage_full[63:32] <= litepciecore_csrbank0_cntrl1_r;
	end
	if (litepciecore_csrbank0_cntrl0_re) begin
		cntrl_storage_full[31:0] <= litepciecore_csrbank0_cntrl0_r;
	end
	cntrl_re <= litepciecore_csrbank0_cntrl0_re;
	if (litepciecore_csrbank0_enable0_re) begin
		enable_storage_full <= litepciecore_csrbank0_enable0_r;
	end
	enable_re <= litepciecore_csrbank0_enable0_re;
	litepciecore_interface1_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank1_sel) begin
		case (litepciecore_interface1_bank_bus_adr[1:0])
			1'd0: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_reset_reset_w;
			end
			1'd1: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_scratch0_w;
			end
			2'd2: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_bus_errors_w;
			end
		endcase
	end
	if (litepciecore_csrbank1_scratch0_re) begin
		litepciecore_storage_full[31:0] <= litepciecore_csrbank1_scratch0_r;
	end
	litepciecore_re <= litepciecore_csrbank1_scratch0_re;
	litepciecore_sel_r <= litepciecore_sel;
	litepciecore_interface2_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank2_sel) begin
		case (litepciecore_interface2_bank_bus_adr[4:0])
			1'd0: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_enable0_w;
			end
			1'd1: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_sCounter0_w;
			end
			2'd2: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_table_value1_w;
			end
			2'd3: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_table_value0_w;
			end
			3'd4: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciedma0_writer_table_we_w;
			end
			3'd5: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_table_loop_prog_n0_w;
			end
			3'd6: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_table_loop_status_w;
			end
			3'd7: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_table_level_w;
			end
			4'd8: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciedma0_writer_table_flush_w;
			end
			4'd9: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_enable0_w;
			end
			4'd10: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_sCounter0_w;
			end
			4'd11: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_table_value1_w;
			end
			4'd12: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_table_value0_w;
			end
			4'd13: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciedma0_reader_table_we_w;
			end
			4'd14: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_table_loop_prog_n0_w;
			end
			4'd15: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_table_loop_status_w;
			end
			5'd16: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_table_level_w;
			end
			5'd17: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciedma0_reader_table_flush_w;
			end
			5'd18: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_loopback_enable0_w;
			end
		endcase
	end
	if (litepciecore_csrbank2_writer_enable0_re) begin
		litepciedma0_writer_enable_storage_full <= litepciecore_csrbank2_writer_enable0_r;
	end
	litepciedma0_writer_enable_re <= litepciecore_csrbank2_writer_enable0_re;
	if (litepciecore_csrbank2_writer_sCounter0_re) begin
		litepciedma0_writer_sCounter_storage_full[31:0] <= litepciecore_csrbank2_writer_sCounter0_r;
	end
	litepciedma0_writer_sCounter_re <= litepciecore_csrbank2_writer_sCounter0_re;
	if (litepciecore_csrbank2_writer_table_value1_re) begin
		litepciedma0_writer_table_value_storage_full[63:32] <= litepciecore_csrbank2_writer_table_value1_r;
	end
	if (litepciecore_csrbank2_writer_table_value0_re) begin
		litepciedma0_writer_table_value_storage_full[31:0] <= litepciecore_csrbank2_writer_table_value0_r;
	end
	litepciedma0_writer_table_value_re <= litepciecore_csrbank2_writer_table_value0_re;
	if (litepciecore_csrbank2_writer_table_loop_prog_n0_re) begin
		litepciedma0_writer_table_loop_prog_n_storage_full <= litepciecore_csrbank2_writer_table_loop_prog_n0_r;
	end
	litepciedma0_writer_table_loop_prog_n_re <= litepciecore_csrbank2_writer_table_loop_prog_n0_re;
	if (litepciecore_csrbank2_reader_enable0_re) begin
		litepciedma0_reader_enable_storage_full <= litepciecore_csrbank2_reader_enable0_r;
	end
	litepciedma0_reader_enable_re <= litepciecore_csrbank2_reader_enable0_re;
	if (litepciecore_csrbank2_reader_sCounter0_re) begin
		litepciedma0_reader_sCounter_storage_full[15:0] <= litepciecore_csrbank2_reader_sCounter0_r;
	end
	litepciedma0_reader_sCounter_re <= litepciecore_csrbank2_reader_sCounter0_re;
	if (litepciecore_csrbank2_reader_table_value1_re) begin
		litepciedma0_reader_table_value_storage_full[63:32] <= litepciecore_csrbank2_reader_table_value1_r;
	end
	if (litepciecore_csrbank2_reader_table_value0_re) begin
		litepciedma0_reader_table_value_storage_full[31:0] <= litepciecore_csrbank2_reader_table_value0_r;
	end
	litepciedma0_reader_table_value_re <= litepciecore_csrbank2_reader_table_value0_re;
	if (litepciecore_csrbank2_reader_table_loop_prog_n0_re) begin
		litepciedma0_reader_table_loop_prog_n_storage_full <= litepciecore_csrbank2_reader_table_loop_prog_n0_r;
	end
	litepciedma0_reader_table_loop_prog_n_re <= litepciecore_csrbank2_reader_table_loop_prog_n0_re;
	if (litepciecore_csrbank2_loopback_enable0_re) begin
		litepciedma0_storage_full <= litepciecore_csrbank2_loopback_enable0_r;
	end
	litepciedma0_re <= litepciecore_csrbank2_loopback_enable0_re;
	litepciecore_interface3_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank3_sel) begin
		case (litepciecore_interface3_bank_bus_adr[4:0])
			1'd0: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_enable0_w;
			end
			1'd1: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_sCounter0_w;
			end
			2'd2: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_table_value1_w;
			end
			2'd3: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_table_value0_w;
			end
			3'd4: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciedma1_writer_table_we_w;
			end
			3'd5: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_table_loop_prog_n0_w;
			end
			3'd6: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_table_loop_status_w;
			end
			3'd7: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_table_level_w;
			end
			4'd8: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciedma1_writer_table_flush_w;
			end
			4'd9: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_enable0_w;
			end
			4'd10: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_sCounter0_w;
			end
			4'd11: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_table_value1_w;
			end
			4'd12: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_table_value0_w;
			end
			4'd13: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciedma1_reader_table_we_w;
			end
			4'd14: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_table_loop_prog_n0_w;
			end
			4'd15: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_table_loop_status_w;
			end
			5'd16: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_table_level_w;
			end
			5'd17: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciedma1_reader_table_flush_w;
			end
			5'd18: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_loopback_enable0_w;
			end
		endcase
	end
	if (litepciecore_csrbank3_writer_enable0_re) begin
		litepciedma1_writer_enable_storage_full <= litepciecore_csrbank3_writer_enable0_r;
	end
	litepciedma1_writer_enable_re <= litepciecore_csrbank3_writer_enable0_re;
	if (litepciecore_csrbank3_writer_sCounter0_re) begin
		litepciedma1_writer_sCounter_storage_full[31:0] <= litepciecore_csrbank3_writer_sCounter0_r;
	end
	litepciedma1_writer_sCounter_re <= litepciecore_csrbank3_writer_sCounter0_re;
	if (litepciecore_csrbank3_writer_table_value1_re) begin
		litepciedma1_writer_table_value_storage_full[63:32] <= litepciecore_csrbank3_writer_table_value1_r;
	end
	if (litepciecore_csrbank3_writer_table_value0_re) begin
		litepciedma1_writer_table_value_storage_full[31:0] <= litepciecore_csrbank3_writer_table_value0_r;
	end
	litepciedma1_writer_table_value_re <= litepciecore_csrbank3_writer_table_value0_re;
	if (litepciecore_csrbank3_writer_table_loop_prog_n0_re) begin
		litepciedma1_writer_table_loop_prog_n_storage_full <= litepciecore_csrbank3_writer_table_loop_prog_n0_r;
	end
	litepciedma1_writer_table_loop_prog_n_re <= litepciecore_csrbank3_writer_table_loop_prog_n0_re;
	if (litepciecore_csrbank3_reader_enable0_re) begin
		litepciedma1_reader_enable_storage_full <= litepciecore_csrbank3_reader_enable0_r;
	end
	litepciedma1_reader_enable_re <= litepciecore_csrbank3_reader_enable0_re;
	if (litepciecore_csrbank3_reader_sCounter0_re) begin
		litepciedma1_reader_sCounter_storage_full[15:0] <= litepciecore_csrbank3_reader_sCounter0_r;
	end
	litepciedma1_reader_sCounter_re <= litepciecore_csrbank3_reader_sCounter0_re;
	if (litepciecore_csrbank3_reader_table_value1_re) begin
		litepciedma1_reader_table_value_storage_full[63:32] <= litepciecore_csrbank3_reader_table_value1_r;
	end
	if (litepciecore_csrbank3_reader_table_value0_re) begin
		litepciedma1_reader_table_value_storage_full[31:0] <= litepciecore_csrbank3_reader_table_value0_r;
	end
	litepciedma1_reader_table_value_re <= litepciecore_csrbank3_reader_table_value0_re;
	if (litepciecore_csrbank3_reader_table_loop_prog_n0_re) begin
		litepciedma1_reader_table_loop_prog_n_storage_full <= litepciecore_csrbank3_reader_table_loop_prog_n0_r;
	end
	litepciedma1_reader_table_loop_prog_n_re <= litepciecore_csrbank3_reader_table_loop_prog_n0_re;
	if (litepciecore_csrbank3_loopback_enable0_re) begin
		litepciedma1_storage_full <= litepciecore_csrbank3_loopback_enable0_r;
	end
	litepciedma1_re <= litepciecore_csrbank3_loopback_enable0_re;
	litepciecore_interface4_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank4_sel) begin
		case (litepciecore_interface4_bank_bus_adr[4:0])
			1'd0: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_writer_enable0_w;
			end
			1'd1: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_writer_sCounter0_w;
			end
			2'd2: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_writer_table_value1_w;
			end
			2'd3: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_writer_table_value0_w;
			end
			3'd4: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciedma2_writer_table_we_w;
			end
			3'd5: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_writer_table_loop_prog_n0_w;
			end
			3'd6: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_writer_table_loop_status_w;
			end
			3'd7: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_writer_table_level_w;
			end
			4'd8: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciedma2_writer_table_flush_w;
			end
			4'd9: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_reader_enable0_w;
			end
			4'd10: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_reader_sCounter0_w;
			end
			4'd11: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_reader_table_value1_w;
			end
			4'd12: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_reader_table_value0_w;
			end
			4'd13: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciedma2_reader_table_we_w;
			end
			4'd14: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_reader_table_loop_prog_n0_w;
			end
			4'd15: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_reader_table_loop_status_w;
			end
			5'd16: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_reader_table_level_w;
			end
			5'd17: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciedma2_reader_table_flush_w;
			end
			5'd18: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_loopback_enable0_w;
			end
		endcase
	end
	if (litepciecore_csrbank4_writer_enable0_re) begin
		litepciedma2_writer_enable_storage_full <= litepciecore_csrbank4_writer_enable0_r;
	end
	litepciedma2_writer_enable_re <= litepciecore_csrbank4_writer_enable0_re;
	if (litepciecore_csrbank4_writer_sCounter0_re) begin
		litepciedma2_writer_sCounter_storage_full[31:0] <= litepciecore_csrbank4_writer_sCounter0_r;
	end
	litepciedma2_writer_sCounter_re <= litepciecore_csrbank4_writer_sCounter0_re;
	if (litepciecore_csrbank4_writer_table_value1_re) begin
		litepciedma2_writer_table_value_storage_full[63:32] <= litepciecore_csrbank4_writer_table_value1_r;
	end
	if (litepciecore_csrbank4_writer_table_value0_re) begin
		litepciedma2_writer_table_value_storage_full[31:0] <= litepciecore_csrbank4_writer_table_value0_r;
	end
	litepciedma2_writer_table_value_re <= litepciecore_csrbank4_writer_table_value0_re;
	if (litepciecore_csrbank4_writer_table_loop_prog_n0_re) begin
		litepciedma2_writer_table_loop_prog_n_storage_full <= litepciecore_csrbank4_writer_table_loop_prog_n0_r;
	end
	litepciedma2_writer_table_loop_prog_n_re <= litepciecore_csrbank4_writer_table_loop_prog_n0_re;
	if (litepciecore_csrbank4_reader_enable0_re) begin
		litepciedma2_reader_enable_storage_full <= litepciecore_csrbank4_reader_enable0_r;
	end
	litepciedma2_reader_enable_re <= litepciecore_csrbank4_reader_enable0_re;
	if (litepciecore_csrbank4_reader_sCounter0_re) begin
		litepciedma2_reader_sCounter_storage_full[15:0] <= litepciecore_csrbank4_reader_sCounter0_r;
	end
	litepciedma2_reader_sCounter_re <= litepciecore_csrbank4_reader_sCounter0_re;
	if (litepciecore_csrbank4_reader_table_value1_re) begin
		litepciedma2_reader_table_value_storage_full[63:32] <= litepciecore_csrbank4_reader_table_value1_r;
	end
	if (litepciecore_csrbank4_reader_table_value0_re) begin
		litepciedma2_reader_table_value_storage_full[31:0] <= litepciecore_csrbank4_reader_table_value0_r;
	end
	litepciedma2_reader_table_value_re <= litepciecore_csrbank4_reader_table_value0_re;
	if (litepciecore_csrbank4_reader_table_loop_prog_n0_re) begin
		litepciedma2_reader_table_loop_prog_n_storage_full <= litepciecore_csrbank4_reader_table_loop_prog_n0_r;
	end
	litepciedma2_reader_table_loop_prog_n_re <= litepciecore_csrbank4_reader_table_loop_prog_n0_re;
	if (litepciecore_csrbank4_loopback_enable0_re) begin
		litepciedma2_storage_full <= litepciecore_csrbank4_loopback_enable0_r;
	end
	litepciedma2_re <= litepciecore_csrbank4_loopback_enable0_re;
	litepciecore_interface5_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank5_sel) begin
		case (litepciecore_interface5_bank_bus_adr[1:0])
			1'd0: begin
				litepciecore_interface5_bank_bus_dat_r <= litepciecore_csrbank5_enable0_w;
			end
			1'd1: begin
				litepciecore_interface5_bank_bus_dat_r <= pcie_msi_clear_clear_w;
			end
			2'd2: begin
				litepciecore_interface5_bank_bus_dat_r <= litepciecore_csrbank5_vector_w;
			end
		endcase
	end
	if (litepciecore_csrbank5_enable0_re) begin
		pcie_msi_storage_full[31:0] <= litepciecore_csrbank5_enable0_r;
	end
	pcie_msi_re <= litepciecore_csrbank5_enable0_re;
	if (sys_rst) begin
		litepciecore_storage_full <= 32'd305419896;
		litepciecore_re <= 1'd0;
		litepciecore_bus_errors <= 32'd0;
		litepciecore_sram_bus_ack <= 1'd0;
		litepciecore_interface_adr <= 14'd0;
		litepciecore_interface_we <= 1'd0;
		litepciecore_interface_dat_w <= 32'd0;
		litepciecore_bus_wishbone_dat_r <= 32'd0;
		litepciecore_bus_wishbone_ack <= 1'd0;
		litepciecore_counter <= 2'd0;
		pcie_phy_tx_buffer_source_payload_dat <= 64'd0;
		pcie_phy_tx_buffer_source_payload_be <= 8'd0;
		pcie_phy_tx_buffer_valid_n <= 1'd0;
		pcie_phy_tx_buffer_first_n <= 1'd0;
		pcie_phy_tx_buffer_last_n <= 1'd0;
		pcie_phy_tx_cdc_graycounter0_q <= 6'd0;
		pcie_phy_tx_cdc_graycounter0_q_binary <= 6'd0;
		pcie_phy_rx_cdc_graycounter1_q <= 6'd0;
		pcie_phy_rx_cdc_graycounter1_q_binary <= 6'd0;
		pcie_phy_rx_buffer_source_payload_dat <= 64'd0;
		pcie_phy_rx_buffer_source_payload_be <= 8'd0;
		pcie_phy_rx_buffer_valid_n <= 1'd0;
		pcie_phy_rx_buffer_first_n <= 1'd0;
		pcie_phy_rx_buffer_last_n <= 1'd0;
		pcie_phy_msi_cdc_graycounter0_q <= 3'd0;
		pcie_phy_msi_cdc_graycounter0_q_binary <= 3'd0;
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header <= 128'd0;
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_first <= 1'd0;
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_last <= 1'd0;
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_count <= 1'd0;
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_first <= 1'd1;
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing1 <= 1'd0;
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel_ongoing <= 1'd0;
		pcie_endpoint_grant <= 1'd0;
		pcie_endpoint_status0_first <= 1'd1;
		pcie_endpoint_status0_ongoing1 <= 1'd0;
		pcie_endpoint_status1_first <= 1'd1;
		pcie_endpoint_status1_ongoing1 <= 1'd0;
		pcie_wishbone_wishbone_adr <= 30'd0;
		pcie_wishbone_wishbone_dat_w <= 32'd0;
		pcie_wishbone_wishbone_sel <= 4'd0;
		pcie_wishbone_sink_first <= 1'd0;
		pcie_wishbone_sink_last <= 1'd0;
		pcie_wishbone_sink_payload_adr <= 32'd0;
		pcie_wishbone_sink_payload_len <= 10'd0;
		pcie_wishbone_sink_payload_req_id <= 16'd0;
		pcie_wishbone_sink_payload_cmp_id <= 16'd0;
		pcie_wishbone_sink_payload_err <= 1'd0;
		pcie_wishbone_sink_payload_tag <= 8'd0;
		pcie_wishbone_sink_payload_dat <= 64'd0;
		litepciedma0_writer_enable_storage_full <= 1'd0;
		litepciedma0_writer_enable_re <= 1'd0;
		litepciedma0_writer_sCounter_storage_full <= 32'd0;
		litepciedma0_writer_sCounter_re <= 1'd0;
		litepciedma0_writer_fifo_readable <= 1'd0;
		litepciedma0_writer_fifo_level0 <= 9'd0;
		litepciedma0_writer_fifo_produce <= 8'd0;
		litepciedma0_writer_fifo_consume <= 8'd0;
		litepciedma0_writer_request_ready <= 1'd0;
		litepciedma0_writer_counter <= 13'd0;
		litepciedma0_writer_table_value_storage_full <= 64'd0;
		litepciedma0_writer_table_value_re <= 1'd0;
		litepciedma0_writer_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma0_writer_table_loop_prog_n_re <= 1'd0;
		litepciedma0_writer_table_loop_status_status <= 16'd0;
		litepciedma0_writer_table_syncfifo0_sink_valid <= 1'd0;
		litepciedma0_writer_table_syncfifo0_sink_first <= 1'd0;
		litepciedma0_writer_table_syncfifo0_sink_payload_address <= 32'd0;
		litepciedma0_writer_table_syncfifo0_sink_payload_length <= 24'd0;
		litepciedma0_writer_table_syncfifo0_sink_payload_control <= 8'd0;
		litepciedma0_writer_table_syncfifo0_level <= 9'd0;
		litepciedma0_writer_table_syncfifo0_produce <= 8'd0;
		litepciedma0_writer_table_syncfifo0_consume <= 8'd0;
		litepciedma0_writer_splitter_offset <= 32'd0;
		litepciedma0_writer_splitter_user_id <= 32'd0;
		litepciedma0_writer_splitter_length <= 24'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_address <= 32'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_length <= 24'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_control <= 8'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_user_id <= 8'd0;
		litepciedma0_writer_bufferizeendpoints0_valid_n <= 1'd0;
		litepciedma0_writer_bufferizeendpoints0_first_n <= 1'd0;
		litepciedma0_writer_bufferizeendpoints0_last_n <= 1'd0;
		litepciedma0_reader_enable_storage_full <= 1'd0;
		litepciedma0_reader_enable_re <= 1'd0;
		litepciedma0_reader_sCounter_storage_full <= 16'd0;
		litepciedma0_reader_sCounter_re <= 1'd0;
		litepciedma0_reader_table_value_storage_full <= 64'd0;
		litepciedma0_reader_table_value_re <= 1'd0;
		litepciedma0_reader_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma0_reader_table_loop_prog_n_re <= 1'd0;
		litepciedma0_reader_table_loop_status_status <= 16'd0;
		litepciedma0_reader_table_syncfifo0_sink_valid <= 1'd0;
		litepciedma0_reader_table_syncfifo0_sink_first <= 1'd0;
		litepciedma0_reader_table_syncfifo0_sink_payload_address <= 32'd0;
		litepciedma0_reader_table_syncfifo0_sink_payload_length <= 24'd0;
		litepciedma0_reader_table_syncfifo0_sink_payload_control <= 8'd0;
		litepciedma0_reader_table_syncfifo0_level <= 9'd0;
		litepciedma0_reader_table_syncfifo0_produce <= 8'd0;
		litepciedma0_reader_table_syncfifo0_consume <= 8'd0;
		litepciedma0_reader_splitter_offset <= 32'd0;
		litepciedma0_reader_splitter_user_id <= 32'd0;
		litepciedma0_reader_splitter_length <= 24'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_address <= 32'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_length <= 24'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_control <= 8'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_user_id <= 8'd0;
		litepciedma0_reader_bufferizeendpoints0_valid_n <= 1'd0;
		litepciedma0_reader_bufferizeendpoints0_first_n <= 1'd0;
		litepciedma0_reader_bufferizeendpoints0_last_n <= 1'd0;
		litepciedma0_reader_request_ready <= 1'd0;
		litepciedma0_reader_fifo_readable <= 1'd0;
		litepciedma0_reader_fifo_level0 <= 10'd0;
		litepciedma0_reader_fifo_produce <= 9'd0;
		litepciedma0_reader_fifo_consume <= 9'd0;
		litepciedma0_reader_last_user_id <= 8'd255;
		litepciedma0_storage_full <= 1'd0;
		litepciedma0_re <= 1'd0;
		litepciedma0_tx_fifo_readable <= 1'd0;
		litepciedma0_tx_fifo_level0 <= 11'd0;
		litepciedma0_tx_fifo_produce <= 10'd0;
		litepciedma0_tx_fifo_consume <= 10'd0;
		litepciedma0_rx_fifo_readable <= 1'd0;
		litepciedma0_rx_fifo_level0 <= 11'd0;
		litepciedma0_rx_fifo_produce <= 10'd0;
		litepciedma0_rx_fifo_consume <= 10'd0;
		litepciedma1_writer_enable_storage_full <= 1'd0;
		litepciedma1_writer_enable_re <= 1'd0;
		litepciedma1_writer_sCounter_storage_full <= 32'd0;
		litepciedma1_writer_sCounter_re <= 1'd0;
		litepciedma1_writer_fifo_readable <= 1'd0;
		litepciedma1_writer_fifo_level0 <= 9'd0;
		litepciedma1_writer_fifo_produce <= 8'd0;
		litepciedma1_writer_fifo_consume <= 8'd0;
		litepciedma1_writer_request_ready <= 1'd0;
		litepciedma1_writer_counter <= 13'd0;
		litepciedma1_writer_table_value_storage_full <= 64'd0;
		litepciedma1_writer_table_value_re <= 1'd0;
		litepciedma1_writer_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma1_writer_table_loop_prog_n_re <= 1'd0;
		litepciedma1_writer_table_loop_status_status <= 16'd0;
		litepciedma1_writer_table_syncfifo1_sink_valid <= 1'd0;
		litepciedma1_writer_table_syncfifo1_sink_first <= 1'd0;
		litepciedma1_writer_table_syncfifo1_sink_payload_address <= 32'd0;
		litepciedma1_writer_table_syncfifo1_sink_payload_length <= 24'd0;
		litepciedma1_writer_table_syncfifo1_sink_payload_control <= 8'd0;
		litepciedma1_writer_table_syncfifo1_level <= 9'd0;
		litepciedma1_writer_table_syncfifo1_produce <= 8'd0;
		litepciedma1_writer_table_syncfifo1_consume <= 8'd0;
		litepciedma1_writer_splitter_offset <= 32'd0;
		litepciedma1_writer_splitter_user_id <= 32'd0;
		litepciedma1_writer_splitter_length <= 24'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_address <= 32'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_length <= 24'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_control <= 8'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_user_id <= 8'd0;
		litepciedma1_writer_bufferizeendpoints1_valid_n <= 1'd0;
		litepciedma1_writer_bufferizeendpoints1_first_n <= 1'd0;
		litepciedma1_writer_bufferizeendpoints1_last_n <= 1'd0;
		litepciedma1_reader_enable_storage_full <= 1'd0;
		litepciedma1_reader_enable_re <= 1'd0;
		litepciedma1_reader_sCounter_storage_full <= 16'd0;
		litepciedma1_reader_sCounter_re <= 1'd0;
		litepciedma1_reader_table_value_storage_full <= 64'd0;
		litepciedma1_reader_table_value_re <= 1'd0;
		litepciedma1_reader_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma1_reader_table_loop_prog_n_re <= 1'd0;
		litepciedma1_reader_table_loop_status_status <= 16'd0;
		litepciedma1_reader_table_syncfifo1_sink_valid <= 1'd0;
		litepciedma1_reader_table_syncfifo1_sink_first <= 1'd0;
		litepciedma1_reader_table_syncfifo1_sink_payload_address <= 32'd0;
		litepciedma1_reader_table_syncfifo1_sink_payload_length <= 24'd0;
		litepciedma1_reader_table_syncfifo1_sink_payload_control <= 8'd0;
		litepciedma1_reader_table_syncfifo1_level <= 9'd0;
		litepciedma1_reader_table_syncfifo1_produce <= 8'd0;
		litepciedma1_reader_table_syncfifo1_consume <= 8'd0;
		litepciedma1_reader_splitter_offset <= 32'd0;
		litepciedma1_reader_splitter_user_id <= 32'd0;
		litepciedma1_reader_splitter_length <= 24'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_address <= 32'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_length <= 24'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_control <= 8'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_user_id <= 8'd0;
		litepciedma1_reader_bufferizeendpoints1_valid_n <= 1'd0;
		litepciedma1_reader_bufferizeendpoints1_first_n <= 1'd0;
		litepciedma1_reader_bufferizeendpoints1_last_n <= 1'd0;
		litepciedma1_reader_request_ready <= 1'd0;
		litepciedma1_reader_fifo_readable <= 1'd0;
		litepciedma1_reader_fifo_level0 <= 10'd0;
		litepciedma1_reader_fifo_produce <= 9'd0;
		litepciedma1_reader_fifo_consume <= 9'd0;
		litepciedma1_reader_last_user_id <= 8'd255;
		litepciedma1_storage_full <= 1'd0;
		litepciedma1_re <= 1'd0;
		litepciedma1_tx_fifo_readable <= 1'd0;
		litepciedma1_tx_fifo_level0 <= 11'd0;
		litepciedma1_tx_fifo_produce <= 10'd0;
		litepciedma1_tx_fifo_consume <= 10'd0;
		litepciedma1_rx_fifo_readable <= 1'd0;
		litepciedma1_rx_fifo_level0 <= 11'd0;
		litepciedma1_rx_fifo_produce <= 10'd0;
		litepciedma1_rx_fifo_consume <= 10'd0;
		litepciedma2_writer_enable_storage_full <= 1'd0;
		litepciedma2_writer_enable_re <= 1'd0;
		litepciedma2_writer_sCounter_storage_full <= 32'd0;
		litepciedma2_writer_sCounter_re <= 1'd0;
		litepciedma2_writer_fifo_readable <= 1'd0;
		litepciedma2_writer_fifo_level0 <= 9'd0;
		litepciedma2_writer_fifo_produce <= 8'd0;
		litepciedma2_writer_fifo_consume <= 8'd0;
		litepciedma2_writer_request_ready <= 1'd0;
		litepciedma2_writer_counter <= 13'd0;
		litepciedma2_writer_table_value_storage_full <= 64'd0;
		litepciedma2_writer_table_value_re <= 1'd0;
		litepciedma2_writer_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma2_writer_table_loop_prog_n_re <= 1'd0;
		litepciedma2_writer_table_loop_status_status <= 16'd0;
		litepciedma2_writer_table_syncfifo2_sink_valid <= 1'd0;
		litepciedma2_writer_table_syncfifo2_sink_first <= 1'd0;
		litepciedma2_writer_table_syncfifo2_sink_payload_address <= 32'd0;
		litepciedma2_writer_table_syncfifo2_sink_payload_length <= 24'd0;
		litepciedma2_writer_table_syncfifo2_sink_payload_control <= 8'd0;
		litepciedma2_writer_table_syncfifo2_level <= 9'd0;
		litepciedma2_writer_table_syncfifo2_produce <= 8'd0;
		litepciedma2_writer_table_syncfifo2_consume <= 8'd0;
		litepciedma2_writer_splitter_offset <= 32'd0;
		litepciedma2_writer_splitter_user_id <= 32'd0;
		litepciedma2_writer_splitter_length <= 24'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_address <= 32'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_length <= 24'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_control <= 8'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_user_id <= 8'd0;
		litepciedma2_writer_bufferizeendpoints2_valid_n <= 1'd0;
		litepciedma2_writer_bufferizeendpoints2_first_n <= 1'd0;
		litepciedma2_writer_bufferizeendpoints2_last_n <= 1'd0;
		litepciedma2_reader_enable_storage_full <= 1'd0;
		litepciedma2_reader_enable_re <= 1'd0;
		litepciedma2_reader_sCounter_storage_full <= 16'd0;
		litepciedma2_reader_sCounter_re <= 1'd0;
		litepciedma2_reader_table_value_storage_full <= 64'd0;
		litepciedma2_reader_table_value_re <= 1'd0;
		litepciedma2_reader_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma2_reader_table_loop_prog_n_re <= 1'd0;
		litepciedma2_reader_table_loop_status_status <= 16'd0;
		litepciedma2_reader_table_syncfifo2_sink_valid <= 1'd0;
		litepciedma2_reader_table_syncfifo2_sink_first <= 1'd0;
		litepciedma2_reader_table_syncfifo2_sink_payload_address <= 32'd0;
		litepciedma2_reader_table_syncfifo2_sink_payload_length <= 24'd0;
		litepciedma2_reader_table_syncfifo2_sink_payload_control <= 8'd0;
		litepciedma2_reader_table_syncfifo2_level <= 9'd0;
		litepciedma2_reader_table_syncfifo2_produce <= 8'd0;
		litepciedma2_reader_table_syncfifo2_consume <= 8'd0;
		litepciedma2_reader_splitter_offset <= 32'd0;
		litepciedma2_reader_splitter_user_id <= 32'd0;
		litepciedma2_reader_splitter_length <= 24'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_address <= 32'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_length <= 24'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_control <= 8'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_user_id <= 8'd0;
		litepciedma2_reader_bufferizeendpoints2_valid_n <= 1'd0;
		litepciedma2_reader_bufferizeendpoints2_first_n <= 1'd0;
		litepciedma2_reader_bufferizeendpoints2_last_n <= 1'd0;
		litepciedma2_reader_request_ready <= 1'd0;
		litepciedma2_reader_fifo_readable <= 1'd0;
		litepciedma2_reader_fifo_level0 <= 10'd0;
		litepciedma2_reader_fifo_produce <= 9'd0;
		litepciedma2_reader_fifo_consume <= 9'd0;
		litepciedma2_reader_last_user_id <= 8'd255;
		litepciedma2_storage_full <= 1'd0;
		litepciedma2_re <= 1'd0;
		litepciedma2_tx_fifo_readable <= 1'd0;
		litepciedma2_tx_fifo_level0 <= 11'd0;
		litepciedma2_tx_fifo_produce <= 10'd0;
		litepciedma2_tx_fifo_consume <= 10'd0;
		litepciedma2_rx_fifo_readable <= 1'd0;
		litepciedma2_rx_fifo_level0 <= 11'd0;
		litepciedma2_rx_fifo_produce <= 10'd0;
		litepciedma2_rx_fifo_consume <= 10'd0;
		pcie_msi_storage_full <= 32'd0;
		pcie_msi_re <= 1'd0;
		pcie_msi_status <= 32'd0;
		pcie_msi_vector_d <= 32'd0;
		pcie_msi_transmit_counter <= 8'd0;
		cntrl_storage_full <= 512'd0;
		cntrl_re <= 1'd0;
		enable_storage_full <= 1'd0;
		enable_re <= 1'd0;
		subfragments_litepcietlpdepacketizer_state <= 2'd0;
		subfragments_litepcietlppacketizer_state <= 2'd0;
		subfragments_tags_readable0 <= 1'd0;
		subfragments_tags_level0 <= 3'd0;
		subfragments_tags_produce0 <= 2'd0;
		subfragments_tags_consume0 <= 2'd0;
		subfragments_tags_readable1 <= 1'd0;
		subfragments_tags_level2 <= 6'd0;
		subfragments_tags_produce1 <= 5'd0;
		subfragments_tags_consume1 <= 5'd0;
		subfragments_syncfifo0_readable <= 1'd0;
		subfragments_syncfifo0_level0 <= 10'd0;
		subfragments_syncfifo0_produce <= 9'd0;
		subfragments_syncfifo0_consume <= 9'd0;
		subfragments_syncfifo1_readable <= 1'd0;
		subfragments_syncfifo1_level0 <= 10'd0;
		subfragments_syncfifo1_produce <= 9'd0;
		subfragments_syncfifo1_consume <= 9'd0;
		subfragments_syncfifo2_readable <= 1'd0;
		subfragments_syncfifo2_level0 <= 10'd0;
		subfragments_syncfifo2_produce <= 9'd0;
		subfragments_syncfifo2_consume <= 9'd0;
		subfragments_syncfifo3_readable <= 1'd0;
		subfragments_syncfifo3_level0 <= 10'd0;
		subfragments_syncfifo3_produce <= 9'd0;
		subfragments_syncfifo3_consume <= 9'd0;
		subfragments_tag_init <= 2'd0;
		subfragments_arbiter0_grant <= 2'd0;
		subfragments_arbiter0_status0_first <= 1'd1;
		subfragments_arbiter0_status0_ongoing1 <= 1'd0;
		subfragments_arbiter0_status1_first <= 1'd1;
		subfragments_arbiter0_status1_ongoing1 <= 1'd0;
		subfragments_arbiter0_status2_first <= 1'd1;
		subfragments_arbiter0_status2_ongoing1 <= 1'd0;
		subfragments_dispatcher0_first <= 1'd1;
		subfragments_dispatcher0_ongoing1 <= 1'd0;
		subfragments_dispatcher0_sel_ongoing <= 3'd0;
		subfragments_arbiter1_grant <= 2'd0;
		subfragments_arbiter1_status3_first <= 1'd1;
		subfragments_arbiter1_status3_ongoing1 <= 1'd0;
		subfragments_arbiter1_status4_first <= 1'd1;
		subfragments_arbiter1_status4_ongoing1 <= 1'd0;
		subfragments_arbiter1_status5_first <= 1'd1;
		subfragments_arbiter1_status5_ongoing1 <= 1'd0;
		subfragments_dispatcher1_first <= 1'd1;
		subfragments_dispatcher1_ongoing1 <= 1'd0;
		subfragments_dispatcher1_sel_ongoing <= 3'd0;
		subfragments_arbiter2_grant <= 1'd0;
		subfragments_arbiter2_status6_first <= 1'd1;
		subfragments_arbiter2_status6_ongoing1 <= 1'd0;
		subfragments_arbiter2_status7_first <= 1'd1;
		subfragments_arbiter2_status7_ongoing1 <= 1'd0;
		subfragments_fsm0_state0 <= 2'd0;
		subfragments_fsm1_state0 <= 2'd0;
		subfragments_state <= 3'd0;
		subfragments_bufferizeendpoints0_state0 <= 2'd0;
		subfragments_fsm0_state1 <= 1'd0;
		subfragments_bufferizeendpoints0_state1 <= 2'd0;
		subfragments_fsm0_state2 <= 1'd0;
		subfragments_bufferizeendpoints1_state0 <= 2'd0;
		subfragments_fsm1_state1 <= 1'd0;
		subfragments_bufferizeendpoints1_state1 <= 2'd0;
		subfragments_fsm1_state2 <= 1'd0;
		subfragments_bufferizeendpoints2_state0 <= 2'd0;
		subfragments_fsm2_state0 <= 1'd0;
		subfragments_bufferizeendpoints2_state1 <= 2'd0;
		subfragments_fsm2_state1 <= 1'd0;
		litepciecore_slave_sel_r <= 2'd0;
		litepciecore_count <= 20'd1000000;
		litepciecore_interface0_bank_bus_dat_r <= 32'd0;
		litepciecore_interface1_bank_bus_dat_r <= 32'd0;
		litepciecore_sel_r <= 1'd0;
		litepciecore_interface2_bank_bus_dat_r <= 32'd0;
		litepciecore_interface3_bank_bus_dat_r <= 32'd0;
		litepciecore_interface4_bank_bus_dat_r <= 32'd0;
		litepciecore_interface5_bank_bus_dat_r <= 32'd0;
	end
	multiregimpl1_regs0 <= pcie_phy_tx_cdc_graycounter1_q;
	multiregimpl1_regs1 <= multiregimpl1_regs0;
	multiregimpl2_regs0 <= pcie_phy_rx_cdc_graycounter0_q;
	multiregimpl2_regs1 <= multiregimpl2_regs0;
	multiregimpl5_regs0 <= pcie_phy_msi_cdc_graycounter1_q;
	multiregimpl5_regs1 <= multiregimpl5_regs0;
end

reg [31:0] mem[0:1023];
reg [9:0] memadr;
always @(posedge sys_clk) begin
	if (litepciecore_sram_we[0])
		mem[litepciecore_sram_adr][7:0] <= litepciecore_sram_dat_w[7:0];
	if (litepciecore_sram_we[1])
		mem[litepciecore_sram_adr][15:8] <= litepciecore_sram_dat_w[15:8];
	if (litepciecore_sram_we[2])
		mem[litepciecore_sram_adr][23:16] <= litepciecore_sram_dat_w[23:16];
	if (litepciecore_sram_we[3])
		mem[litepciecore_sram_adr][31:24] <= litepciecore_sram_dat_w[31:24];
	memadr <= litepciecore_sram_adr;
end

assign litepciecore_sram_dat_r = mem[memadr];

reg [7:0] mem_1[0:43];
reg [5:0] memadr_1;
always @(posedge sys_clk) begin
	memadr_1 <= litepciecore_adr;
end

assign litepciecore_dat_r = mem_1[memadr_1];

initial begin
	$readmemh("litepcie_core.init", mem_1);
end

reg [73:0] storage[0:31];
reg [4:0] memadr_2;
reg [4:0] memadr_3;
always @(posedge sys_clk) begin
	if (pcie_phy_tx_cdc_wrport_we)
		storage[pcie_phy_tx_cdc_wrport_adr] <= pcie_phy_tx_cdc_wrport_dat_w;
	memadr_2 <= pcie_phy_tx_cdc_wrport_adr;
end

always @(posedge pcie_clk) begin
	memadr_3 <= pcie_phy_tx_cdc_rdport_adr;
end

assign pcie_phy_tx_cdc_wrport_dat_r = storage[memadr_2];
assign pcie_phy_tx_cdc_rdport_dat_r = storage[memadr_3];

reg [73:0] storage_1[0:31];
reg [4:0] memadr_4;
reg [4:0] memadr_5;
always @(posedge pcie_clk) begin
	if (pcie_phy_rx_cdc_wrport_we)
		storage_1[pcie_phy_rx_cdc_wrport_adr] <= pcie_phy_rx_cdc_wrport_dat_w;
	memadr_4 <= pcie_phy_rx_cdc_wrport_adr;
end

always @(posedge sys_clk) begin
	memadr_5 <= pcie_phy_rx_cdc_rdport_adr;
end

assign pcie_phy_rx_cdc_wrport_dat_r = storage_1[memadr_4];
assign pcie_phy_rx_cdc_rdport_dat_r = storage_1[memadr_5];

reg [9:0] storage_2[0:3];
reg [1:0] memadr_6;
reg [1:0] memadr_7;
always @(posedge sys_clk) begin
	if (pcie_phy_msi_cdc_wrport_we)
		storage_2[pcie_phy_msi_cdc_wrport_adr] <= pcie_phy_msi_cdc_wrport_dat_w;
	memadr_6 <= pcie_phy_msi_cdc_wrport_adr;
end

always @(posedge pcie_clk) begin
	memadr_7 <= pcie_phy_msi_cdc_rdport_adr;
end

assign pcie_phy_msi_cdc_wrport_dat_r = storage_2[memadr_6];
assign pcie_phy_msi_cdc_rdport_dat_r = storage_2[memadr_7];

reg [73:0] storage_3[0:3];
reg [73:0] memdat;
always @(posedge pcie_clk) begin
	if (pcie_phy_buf_wrport_we)
		storage_3[pcie_phy_buf_wrport_adr] <= pcie_phy_buf_wrport_dat_w;
	memdat <= storage_3[pcie_phy_buf_wrport_adr];
end

always @(posedge pcie_clk) begin
end

assign pcie_phy_buf_wrport_dat_r = memdat;
assign pcie_phy_buf_rdport_dat_r = storage_3[pcie_phy_buf_rdport_adr];

reg [64:0] storage_4[0:255];
reg [64:0] memdat_1;
reg [64:0] memdat_2;
always @(posedge sys_clk) begin
	if (litepciedma0_writer_fifo_wrport_we)
		storage_4[litepciedma0_writer_fifo_wrport_adr] <= litepciedma0_writer_fifo_wrport_dat_w;
	memdat_1 <= storage_4[litepciedma0_writer_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma0_writer_fifo_rdport_re)
		memdat_2 <= storage_4[litepciedma0_writer_fifo_rdport_adr];
end

assign litepciedma0_writer_fifo_wrport_dat_r = memdat_1;
assign litepciedma0_writer_fifo_rdport_dat_r = memdat_2;

reg [65:0] storage_5[0:255];
reg [65:0] memdat_3;
always @(posedge sys_clk) begin
	if (litepciedma0_writer_table_syncfifo0_wrport_we)
		storage_5[litepciedma0_writer_table_syncfifo0_wrport_adr] <= litepciedma0_writer_table_syncfifo0_wrport_dat_w;
	memdat_3 <= storage_5[litepciedma0_writer_table_syncfifo0_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma0_writer_table_syncfifo0_wrport_dat_r = memdat_3;
assign litepciedma0_writer_table_syncfifo0_rdport_dat_r = storage_5[litepciedma0_writer_table_syncfifo0_rdport_adr];

reg [65:0] storage_6[0:255];
reg [65:0] memdat_4;
always @(posedge sys_clk) begin
	if (litepciedma0_reader_table_syncfifo0_wrport_we)
		storage_6[litepciedma0_reader_table_syncfifo0_wrport_adr] <= litepciedma0_reader_table_syncfifo0_wrport_dat_w;
	memdat_4 <= storage_6[litepciedma0_reader_table_syncfifo0_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma0_reader_table_syncfifo0_wrport_dat_r = memdat_4;
assign litepciedma0_reader_table_syncfifo0_rdport_dat_r = storage_6[litepciedma0_reader_table_syncfifo0_rdport_adr];

reg [65:0] storage_7[0:511];
reg [65:0] memdat_5;
reg [65:0] memdat_6;
always @(posedge sys_clk) begin
	if (litepciedma0_reader_fifo_wrport_we)
		storage_7[litepciedma0_reader_fifo_wrport_adr] <= litepciedma0_reader_fifo_wrport_dat_w;
	memdat_5 <= storage_7[litepciedma0_reader_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma0_reader_fifo_rdport_re)
		memdat_6 <= storage_7[litepciedma0_reader_fifo_rdport_adr];
end

assign litepciedma0_reader_fifo_wrport_dat_r = memdat_5;
assign litepciedma0_reader_fifo_rdport_dat_r = memdat_6;

reg [65:0] storage_8[0:1023];
reg [65:0] memdat_7;
reg [65:0] memdat_8;
always @(posedge sys_clk) begin
	if (litepciedma0_tx_fifo_wrport_we)
		storage_8[litepciedma0_tx_fifo_wrport_adr] <= litepciedma0_tx_fifo_wrport_dat_w;
	memdat_7 <= storage_8[litepciedma0_tx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma0_tx_fifo_rdport_re)
		memdat_8 <= storage_8[litepciedma0_tx_fifo_rdport_adr];
end

assign litepciedma0_tx_fifo_wrport_dat_r = memdat_7;
assign litepciedma0_tx_fifo_rdport_dat_r = memdat_8;

reg [65:0] storage_9[0:1023];
reg [65:0] memdat_9;
reg [65:0] memdat_10;
always @(posedge sys_clk) begin
	if (litepciedma0_rx_fifo_wrport_we)
		storage_9[litepciedma0_rx_fifo_wrport_adr] <= litepciedma0_rx_fifo_wrport_dat_w;
	memdat_9 <= storage_9[litepciedma0_rx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma0_rx_fifo_rdport_re)
		memdat_10 <= storage_9[litepciedma0_rx_fifo_rdport_adr];
end

assign litepciedma0_rx_fifo_wrport_dat_r = memdat_9;
assign litepciedma0_rx_fifo_rdport_dat_r = memdat_10;

reg [64:0] storage_10[0:255];
reg [64:0] memdat_11;
reg [64:0] memdat_12;
always @(posedge sys_clk) begin
	if (litepciedma1_writer_fifo_wrport_we)
		storage_10[litepciedma1_writer_fifo_wrport_adr] <= litepciedma1_writer_fifo_wrport_dat_w;
	memdat_11 <= storage_10[litepciedma1_writer_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma1_writer_fifo_rdport_re)
		memdat_12 <= storage_10[litepciedma1_writer_fifo_rdport_adr];
end

assign litepciedma1_writer_fifo_wrport_dat_r = memdat_11;
assign litepciedma1_writer_fifo_rdport_dat_r = memdat_12;

reg [65:0] storage_11[0:255];
reg [65:0] memdat_13;
always @(posedge sys_clk) begin
	if (litepciedma1_writer_table_syncfifo1_wrport_we)
		storage_11[litepciedma1_writer_table_syncfifo1_wrport_adr] <= litepciedma1_writer_table_syncfifo1_wrport_dat_w;
	memdat_13 <= storage_11[litepciedma1_writer_table_syncfifo1_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma1_writer_table_syncfifo1_wrport_dat_r = memdat_13;
assign litepciedma1_writer_table_syncfifo1_rdport_dat_r = storage_11[litepciedma1_writer_table_syncfifo1_rdport_adr];

reg [65:0] storage_12[0:255];
reg [65:0] memdat_14;
always @(posedge sys_clk) begin
	if (litepciedma1_reader_table_syncfifo1_wrport_we)
		storage_12[litepciedma1_reader_table_syncfifo1_wrport_adr] <= litepciedma1_reader_table_syncfifo1_wrport_dat_w;
	memdat_14 <= storage_12[litepciedma1_reader_table_syncfifo1_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma1_reader_table_syncfifo1_wrport_dat_r = memdat_14;
assign litepciedma1_reader_table_syncfifo1_rdport_dat_r = storage_12[litepciedma1_reader_table_syncfifo1_rdport_adr];

reg [65:0] storage_13[0:511];
reg [65:0] memdat_15;
reg [65:0] memdat_16;
always @(posedge sys_clk) begin
	if (litepciedma1_reader_fifo_wrport_we)
		storage_13[litepciedma1_reader_fifo_wrport_adr] <= litepciedma1_reader_fifo_wrport_dat_w;
	memdat_15 <= storage_13[litepciedma1_reader_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma1_reader_fifo_rdport_re)
		memdat_16 <= storage_13[litepciedma1_reader_fifo_rdport_adr];
end

assign litepciedma1_reader_fifo_wrport_dat_r = memdat_15;
assign litepciedma1_reader_fifo_rdport_dat_r = memdat_16;

reg [65:0] storage_14[0:1023];
reg [65:0] memdat_17;
reg [65:0] memdat_18;
always @(posedge sys_clk) begin
	if (litepciedma1_tx_fifo_wrport_we)
		storage_14[litepciedma1_tx_fifo_wrport_adr] <= litepciedma1_tx_fifo_wrport_dat_w;
	memdat_17 <= storage_14[litepciedma1_tx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma1_tx_fifo_rdport_re)
		memdat_18 <= storage_14[litepciedma1_tx_fifo_rdport_adr];
end

assign litepciedma1_tx_fifo_wrport_dat_r = memdat_17;
assign litepciedma1_tx_fifo_rdport_dat_r = memdat_18;

reg [65:0] storage_15[0:1023];
reg [65:0] memdat_19;
reg [65:0] memdat_20;
always @(posedge sys_clk) begin
	if (litepciedma1_rx_fifo_wrport_we)
		storage_15[litepciedma1_rx_fifo_wrport_adr] <= litepciedma1_rx_fifo_wrport_dat_w;
	memdat_19 <= storage_15[litepciedma1_rx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma1_rx_fifo_rdport_re)
		memdat_20 <= storage_15[litepciedma1_rx_fifo_rdport_adr];
end

assign litepciedma1_rx_fifo_wrport_dat_r = memdat_19;
assign litepciedma1_rx_fifo_rdport_dat_r = memdat_20;

reg [64:0] storage_16[0:255];
reg [64:0] memdat_21;
reg [64:0] memdat_22;
always @(posedge sys_clk) begin
	if (litepciedma2_writer_fifo_wrport_we)
		storage_16[litepciedma2_writer_fifo_wrport_adr] <= litepciedma2_writer_fifo_wrport_dat_w;
	memdat_21 <= storage_16[litepciedma2_writer_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma2_writer_fifo_rdport_re)
		memdat_22 <= storage_16[litepciedma2_writer_fifo_rdport_adr];
end

assign litepciedma2_writer_fifo_wrport_dat_r = memdat_21;
assign litepciedma2_writer_fifo_rdport_dat_r = memdat_22;

reg [65:0] storage_17[0:255];
reg [65:0] memdat_23;
always @(posedge sys_clk) begin
	if (litepciedma2_writer_table_syncfifo2_wrport_we)
		storage_17[litepciedma2_writer_table_syncfifo2_wrport_adr] <= litepciedma2_writer_table_syncfifo2_wrport_dat_w;
	memdat_23 <= storage_17[litepciedma2_writer_table_syncfifo2_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma2_writer_table_syncfifo2_wrport_dat_r = memdat_23;
assign litepciedma2_writer_table_syncfifo2_rdport_dat_r = storage_17[litepciedma2_writer_table_syncfifo2_rdport_adr];

reg [65:0] storage_18[0:255];
reg [65:0] memdat_24;
always @(posedge sys_clk) begin
	if (litepciedma2_reader_table_syncfifo2_wrport_we)
		storage_18[litepciedma2_reader_table_syncfifo2_wrport_adr] <= litepciedma2_reader_table_syncfifo2_wrport_dat_w;
	memdat_24 <= storage_18[litepciedma2_reader_table_syncfifo2_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma2_reader_table_syncfifo2_wrport_dat_r = memdat_24;
assign litepciedma2_reader_table_syncfifo2_rdport_dat_r = storage_18[litepciedma2_reader_table_syncfifo2_rdport_adr];

reg [65:0] storage_19[0:511];
reg [65:0] memdat_25;
reg [65:0] memdat_26;
always @(posedge sys_clk) begin
	if (litepciedma2_reader_fifo_wrport_we)
		storage_19[litepciedma2_reader_fifo_wrport_adr] <= litepciedma2_reader_fifo_wrport_dat_w;
	memdat_25 <= storage_19[litepciedma2_reader_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma2_reader_fifo_rdport_re)
		memdat_26 <= storage_19[litepciedma2_reader_fifo_rdport_adr];
end

assign litepciedma2_reader_fifo_wrport_dat_r = memdat_25;
assign litepciedma2_reader_fifo_rdport_dat_r = memdat_26;

reg [65:0] storage_20[0:1023];
reg [65:0] memdat_27;
reg [65:0] memdat_28;
always @(posedge sys_clk) begin
	if (litepciedma2_tx_fifo_wrport_we)
		storage_20[litepciedma2_tx_fifo_wrport_adr] <= litepciedma2_tx_fifo_wrport_dat_w;
	memdat_27 <= storage_20[litepciedma2_tx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma2_tx_fifo_rdport_re)
		memdat_28 <= storage_20[litepciedma2_tx_fifo_rdport_adr];
end

assign litepciedma2_tx_fifo_wrport_dat_r = memdat_27;
assign litepciedma2_tx_fifo_rdport_dat_r = memdat_28;

reg [65:0] storage_21[0:1023];
reg [65:0] memdat_29;
reg [65:0] memdat_30;
always @(posedge sys_clk) begin
	if (litepciedma2_rx_fifo_wrport_we)
		storage_21[litepciedma2_rx_fifo_wrport_adr] <= litepciedma2_rx_fifo_wrport_dat_w;
	memdat_29 <= storage_21[litepciedma2_rx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma2_rx_fifo_rdport_re)
		memdat_30 <= storage_21[litepciedma2_rx_fifo_rdport_adr];
end

assign litepciedma2_rx_fifo_wrport_dat_r = memdat_29;
assign litepciedma2_rx_fifo_rdport_dat_r = memdat_30;

pcie_phy_top pcie_phy_top(
	 //.hip_rst_pld_core_ready(pcie_phy_pcie_hip_rst_serdes_pll_locked),
	.rx_in0(pcie_x4_rx[0]),
	.rx_in1(pcie_x4_rx[1]),
	.rx_in2(pcie_x4_rx[2]),
	.rx_in3(pcie_x4_rx[3]),
	.app_int_sts(1'd0),
	.app_msi_num(1'd0),
	.app_msi_req(pcie_phy_msi_cdc_source_valid),
	.app_msi_tc(1'd0),
	.npor(pcie_x4_rst_n),
	 //.pin_perst(pcie_x4_rst_n),
	.pld_clk(pcie_clk),
	.pme_to_cr(pcie_phy_pcie_o_power_mngt_pme_to_sr),
	.word_conversion_clk(pcie_phy_pcie_reconfig_clk),
	.word_conversion_reset_n(pcie_phy_pcie_rst_n),
	.refclk(pcie_x4_refclk),
	.rx_st_ready0(pcie_phy_sink_sink_ready1),
	.tx_st_data0(pcie_phy_tx_n2av_source_payload_dat),
	.tx_st_eop0(pcie_phy_tx_n2av_source_last),
	.tx_st_sop0(pcie_phy_tx_n2av_source_first),
	.tx_st_valid0(pcie_phy_tx_n2av_source_valid),
	.tl_cfg_add(pcie_phy_pcie_config_tl_tl_cfg_add),
	.tl_cfg_ctl(pcie_phy_pcie_o_config_tl_tl_cfg_ctl),
	.core_clk_out(pcie_clk),
	 //.hip_rst_serdes_pll_locked(pcie_phy_pcie_hip_rst_serdes_pll_locked),
	.tx_out0(pcie_x4_tx[0]),
	.tx_out1(pcie_x4_tx[1]),
	.tx_out2(pcie_x4_tx[2]),
	.tx_out3(pcie_x4_tx[3]),
	.app_msi_ack(pcie_phy_msi_cdc_source_ready),
	.pme_to_sr(pcie_phy_pcie_o_power_mngt_pme_to_sr),
	.rx_st_data0(pcie_phy_sink_sink_payload_dat1),
	.rx_st_eop0(pcie_phy_sink_sink_last1),
	.rx_st_sop0(pcie_phy_sink_sink_first1),
	.rx_st_valid0(pcie_phy_sink_sink_valid1),
	.tx_st_ready0(pcie_phy_tx_n2av_source_ready)       
);

reg [3:0] storage_22[0:3];
reg [3:0] memdat_31;
reg [3:0] memdat_32;
always @(posedge sys_clk) begin
	if (subfragments_tags_wrport_we0)
		storage_22[subfragments_tags_wrport_adr0] <= subfragments_tags_wrport_dat_w0;
	memdat_31 <= storage_22[subfragments_tags_wrport_adr0];
end

always @(posedge sys_clk) begin
	if (subfragments_tags_rdport_re0)
		memdat_32 <= storage_22[subfragments_tags_rdport_adr0];
end

assign subfragments_tags_wrport_dat_r0 = memdat_31;
assign subfragments_tags_rdport_dat_r0 = memdat_32;

reg [15:0] info_mem[0:3];
reg [1:0] memadr_8;
reg [1:0] memadr_9;
always @(posedge sys_clk) begin
	if (subfragments_info_mem_wr_port_we)
		info_mem[subfragments_info_mem_wr_port_adr] <= subfragments_info_mem_wr_port_dat_w;
	memadr_8 <= subfragments_info_mem_wr_port_adr;
end

always @(posedge sys_clk) begin
	memadr_9 <= subfragments_info_mem_rd_port_adr;
end

assign subfragments_info_mem_wr_port_dat_r = info_mem[memadr_8];
assign subfragments_info_mem_rd_port_dat_r = info_mem[memadr_9];

reg [3:0] storage_23[0:31];
reg [3:0] memdat_33;
reg [3:0] memdat_34;
always @(posedge sys_clk) begin
	if (subfragments_tags_wrport_we1)
		storage_23[subfragments_tags_wrport_adr1] <= subfragments_tags_wrport_dat_w1;
	memdat_33 <= storage_23[subfragments_tags_wrport_adr1];
end

always @(posedge sys_clk) begin
	if (subfragments_tags_rdport_re1)
		memdat_34 <= storage_23[subfragments_tags_rdport_adr1];
end

assign subfragments_tags_wrport_dat_r1 = memdat_33;
assign subfragments_tags_rdport_dat_r1 = memdat_34;

reg [165:0] storage_24[0:511];
reg [165:0] memdat_35;
reg [165:0] memdat_36;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo0_wrport_we)
		storage_24[subfragments_syncfifo0_wrport_adr] <= subfragments_syncfifo0_wrport_dat_w;
	memdat_35 <= storage_24[subfragments_syncfifo0_wrport_adr];
end

always @(posedge sys_clk) begin
	if (subfragments_syncfifo0_rdport_re)
		memdat_36 <= storage_24[subfragments_syncfifo0_rdport_adr];
end

assign subfragments_syncfifo0_wrport_dat_r = memdat_35;
assign subfragments_syncfifo0_rdport_dat_r = memdat_36;

reg [165:0] storage_25[0:511];
reg [165:0] memdat_37;
reg [165:0] memdat_38;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo1_wrport_we)
		storage_25[subfragments_syncfifo1_wrport_adr] <= subfragments_syncfifo1_wrport_dat_w;
	memdat_37 <= storage_25[subfragments_syncfifo1_wrport_adr];
end

always @(posedge sys_clk) begin
	if (subfragments_syncfifo1_rdport_re)
		memdat_38 <= storage_25[subfragments_syncfifo1_rdport_adr];
end

assign subfragments_syncfifo1_wrport_dat_r = memdat_37;
assign subfragments_syncfifo1_rdport_dat_r = memdat_38;

reg [165:0] storage_26[0:511];
reg [165:0] memdat_39;
reg [165:0] memdat_40;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo2_wrport_we)
		storage_26[subfragments_syncfifo2_wrport_adr] <= subfragments_syncfifo2_wrport_dat_w;
	memdat_39 <= storage_26[subfragments_syncfifo2_wrport_adr];
end

always @(posedge sys_clk) begin
	if (subfragments_syncfifo2_rdport_re)
		memdat_40 <= storage_26[subfragments_syncfifo2_rdport_adr];
end

assign subfragments_syncfifo2_wrport_dat_r = memdat_39;
assign subfragments_syncfifo2_rdport_dat_r = memdat_40;

reg [165:0] storage_27[0:511];
reg [165:0] memdat_41;
reg [165:0] memdat_42;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo3_wrport_we)
		storage_27[subfragments_syncfifo3_wrport_adr] <= subfragments_syncfifo3_wrport_dat_w;
	memdat_41 <= storage_27[subfragments_syncfifo3_wrport_adr];
end

always @(posedge sys_clk) begin
	if (subfragments_syncfifo3_rdport_re)
		memdat_42 <= storage_27[subfragments_syncfifo3_rdport_adr];
end

assign subfragments_syncfifo3_wrport_dat_r = memdat_41;
assign subfragments_syncfifo3_rdport_dat_r = memdat_42;

endmodule
